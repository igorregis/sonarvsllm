{"score":"75","reasoning":"The code is generally well-structured and follows good practices such as encapsulation and clear method definitions. However, the extensive use of constants and the FIXME comment indicate areas that need refactoring. The code could benefit from better organization and possibly breaking down into smaller classes or methods to improve readability and maintainability.","tokens":3163,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BuffIndicator.java","name":"BuffIndicator.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BuffIndicator.java","language":"java","measures":[{"metric":"complexity","value":"50","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"46","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"116","bestValue":false},{"metric":"comment_lines_density","value":"4.8","bestValue":false},{"metric":"lines","value":"360","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of synchronized methods ensures thread safety. However, there are minor issues like inconsistent naming (e.g., \u0027hightlightColor\u0027 should be \u0027highlightColor\u0027) and some methods could benefit from additional comments for clarity. Overall, the readability and quality are high.","tokens":2110,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/RenderedTextBlock.java","name":"RenderedTextBlock.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/RenderedTextBlock.java","language":"java","measures":[{"metric":"complexity","value":"63","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"76","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"141","bestValue":false},{"metric":"comment_lines_density","value":"2.8","bestValue":false},{"metric":"lines","value":"283","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses meaningful variable names and has clear method definitions. The use of comments and licensing information is appropriate. However, the readability could be slightly improved by adding more inline comments to explain the logic within methods. Overall, it is clean and maintainable.","tokens":717,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBS_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/CharHealthIndicator.java","name":"CharHealthIndicator.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/CharHealthIndicator.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"73","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method separation. Variable names are meaningful, and the logic is straightforward. However, there are minor areas for improvement, such as potential code duplication in the update method and the use of magic numbers. Overall, the readability and quality are high.","tokens":997,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBSz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/CurrencyIndicator.java","name":"CurrencyIndicator.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/CurrencyIndicator.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"18","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"38","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"121","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes proper use of access modifiers, clear method names, and inline comments for clarity. The use of constants for colors improves readability. However, the code could benefit from additional comments explaining the purpose of some methods and logic, especially for complex operations like camera adjustments and event handling.","tokens":1768,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Window.java","name":"Window.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Window.java","language":"java","measures":[{"metric":"complexity","value":"25","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"70","bestValue":false},{"metric":"comment_lines_density","value":"1.3","bestValue":false},{"metric":"lines","value":"212","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class could benefit from additional comments explaining the purpose of certain methods and variables, especially for those unfamiliar with the specific libraries used. Overall, the code is clean and maintainable.","tokens":1075,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBSu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Archs.java","name":"Archs.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Archs.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"31","bestValue":false},{"metric":"comment_lines_density","value":"1.4","bestValue":false},{"metric":"lines","value":"112","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses meaningful variable names and has clear separation of concerns. The use of inner classes is appropriate, and the layout methods are straightforward. However, there are minor readability issues such as the lack of comments explaining the logic in some methods and the use of magic numbers (e.g., HEIGHT \u003d 18).","tokens":1120,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BadgesList.java","name":"BadgesList.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BadgesList.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"37","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"131","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for licensing. The use of inner classes for ListItem and ListTitle is appropriate. However, there are some minor readability issues, such as the lack of comments explaining the purpose of certain methods and the logic within them. Additionally, the code could benefit from more consistent formatting and spacing.","tokens":1448,"sonarData":{"component":{"id":"AYQExSm8p2C0gqvbizag","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ScrollingListPane.java","name":"ScrollingListPane.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ScrollingListPane.java","language":"java","measures":[{"metric":"complexity","value":"23","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"70","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"205","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear and descriptive variable names, and the methods are logically organized. The use of comments and consistent formatting enhances readability. However, the class is quite large and could benefit from further modularization to improve maintainability. Additionally, some methods could use more detailed comments to explain complex logic.","tokens":1792,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBS6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BossHealthBar.java","name":"BossHealthBar.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BossHealthBar.java","language":"java","measures":[{"metric":"complexity","value":"31","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"37","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"97","bestValue":false},{"metric":"comment_lines_density","value":"0.6","bestValue":false},{"metric":"lines","value":"226","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and method overriding. Variable names are meaningful, and the logic is clear. However, the class could benefit from additional comments explaining the purpose of some methods and variables, especially for those unfamiliar with the codebase. Overall, it is readable and maintainable.","tokens":944,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBS0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Tag.java","name":"Tag.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Tag.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"29","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"108","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear comments, meaningful variable names, and proper use of access modifiers. The use of nested classes is appropriate, and the logic is easy to follow. However, the code could benefit from additional comments explaining complex logic, and some methods could be broken down further for better readability.","tokens":1865,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ScrollPane.java","name":"ScrollPane.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ScrollPane.java","language":"java","measures":[{"metric":"complexity","value":"31","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"25","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"89","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"240","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise, with clear method names and a straightforward purpose. The use of comments and licensing information is appropriate. However, the class could benefit from additional comments explaining the logic within methods for better readability.","tokens":625,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ExitButton.java","name":"ExitButton.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ExitButton.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"59","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. Variable names are meaningful, and the logic is straightforward. However, the class could benefit from additional comments explaining the purpose of certain calculations and conditions. Overall, the readability is high, but minor improvements could enhance clarity.","tokens":760,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBS7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Compass.java","name":"Compass.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Compass.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"74","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of access modifiers. The comments and licensing information are clear. However, the nested conditional logic in the update method could be simplified for better readability. Overall, the code is maintainable and understandable.","tokens":1022,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/LootIndicator.java","name":"LootIndicator.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/LootIndicator.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"47","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"32","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"123","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The comments are helpful, and the variable names are descriptive. However, there are minor issues like inconsistent use of magic numbers and lack of detailed comments for some methods. Overall, the code is readable and maintainable.","tokens":1063,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBSv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Tooltip.java","name":"Tooltip.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Tooltip.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"3.9","bestValue":false},{"metric":"lines","value":"118","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear comments and method names that enhance readability. The use of protected and public access modifiers is appropriate. However, the code could benefit from additional comments explaining the purpose of some methods and variables, and there are minor formatting inconsistencies. Overall, it is high-quality and maintainable.","tokens":1391,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/StyledButton.java","name":"StyledButton.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/StyledButton.java","language":"java","measures":[{"metric":"complexity","value":"36","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"25","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"69","bestValue":false},{"metric":"comment_lines_density","value":"0.8","bestValue":false},{"metric":"lines","value":"175","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using enums and switch cases for handling different icon types. The comments are helpful for understanding the purpose of each section. However, the class is quite long and could benefit from further modularization to improve readability. Additionally, some method names could be more descriptive.","tokens":4075,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBSt","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Icons.java","name":"Icons.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Icons.java","language":"java","measures":[{"metric":"complexity","value":"100","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"189","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"437","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, consistent indentation, and appropriate use of constants. The use of comments and meaningful variable names enhances readability. However, the class is quite large and could benefit from further modularization to improve maintainability. Additionally, some methods are lengthy and could be broken down into smaller, more focused methods.","tokens":2804,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ItemSlot.java","name":"ItemSlot.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ItemSlot.java","language":"java","measures":[{"metric":"complexity","value":"76","bestValue":false},{"metric":"code_smells","value":"14","bestValue":false},{"metric":"cognitive_complexity","value":"82","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"147","bestValue":false},{"metric":"comment_lines_density","value":"0.8","bestValue":false},{"metric":"lines","value":"337","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of inheritance and method overriding. The class is concise and focused on its purpose. However, the comments are mostly license-related and do not explain the code itself. Adding more inline comments and JavaDoc would improve readability and maintainability.","tokens":535,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BusyIndicator.java","name":"BusyIndicator.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BusyIndicator.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"43","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method separation. The use of comments and static blocks for initialization is commendable. However, the code could benefit from more detailed comments explaining complex logic, and some variable names could be more descriptive. Overall, it is readable and maintainable.","tokens":1903,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/KeyDisplay.java","name":"KeyDisplay.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/KeyDisplay.java","language":"java","measures":[{"metric":"complexity","value":"29","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"44","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"87","bestValue":false},{"metric":"comment_lines_density","value":"6.3","bestValue":false},{"metric":"lines","value":"225","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class is quite large and could benefit from being broken down into smaller, more manageable components. Additionally, some methods are quite long and could be refactored for better readability.","tokens":3128,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBS2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/StatusPane.java","name":"StatusPane.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/StatusPane.java","language":"java","measures":[{"metric":"complexity","value":"33","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"38","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"165","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"343","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear variable naming, proper use of access modifiers, and logical organization. The use of comments and separation of concerns is evident. However, the code could benefit from additional comments explaining complex logic, and some methods could be broken down further to enhance readability.","tokens":2079,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBS4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/RadialMenu.java","name":"RadialMenu.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/RadialMenu.java","language":"java","measures":[{"metric":"complexity","value":"30","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"41","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"106","bestValue":false},{"metric":"comment_lines_density","value":"1.8","bestValue":false},{"metric":"lines","value":"223","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and documentation is minimal but the code is still quite readable. There are no obvious code smells or anti-patterns. However, the readability could be improved with more comments explaining the purpose of certain methods and variables.","tokens":1048,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBS-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/DangerIndicator.java","name":"DangerIndicator.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/DangerIndicator.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"36","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"131","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments is minimal but the code is self-explanatory. The layout method is well-defined and the logic is straightforward. However, there could be more comments explaining the purpose of each method for better readability. Overall, the code is clean and maintainable.","tokens":770,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/IconButton.java","name":"IconButton.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/IconButton.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"84","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and licensing information is appropriate. However, the code could benefit from additional comments explaining the purpose of the \u0027film\u0027 variable and the \u0027frame\u0027 method call for better readability.","tokens":556,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/TalentIcon.java","name":"TalentIcon.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/TalentIcon.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"5","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"47","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of enums for state management is appropriate. However, there are minor readability issues, such as the lack of comments explaining the purpose of some methods and variables. Overall, the code is clean and maintainable.","tokens":807,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBSy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Banner.java","name":"Banner.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Banner.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"108","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses meaningful variable names and includes comments for licensing. The layout method is clear and logical. However, it could benefit from additional comments explaining the logic within methods, especially the layout and update methods. The use of magic numbers for column counts could be replaced with constants for better readability.","tokens":1407,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTL","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BadgesGrid.java","name":"BadgesGrid.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BadgesGrid.java","language":"java","measures":[{"metric":"complexity","value":"25","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"28","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"64","bestValue":false},{"metric":"comment_lines_density","value":"0.9","bestValue":false},{"metric":"lines","value":"161","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for licensing. The use of synchronized blocks ensures thread safety. However, the code could benefit from additional comments explaining the logic, especially in complex methods like layout and update. The use of magic numbers (e.g., 8, 16) could be replaced with named constants for better readability.","tokens":1493,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ActionIndicator.java","name":"ActionIndicator.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ActionIndicator.java","language":"java","measures":[{"metric":"complexity","value":"38","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"45","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"76","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"206","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and synchronization. The use of comments and meaningful variable names enhances readability. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which could be broken down into smaller, more manageable pieces.","tokens":1434,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/GameLog.java","name":"GameLog.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/GameLog.java","language":"java","measures":[{"metric":"complexity","value":"28","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"37","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"70","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"177","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear and descriptive variable names, and the methods are logically organized. The use of inner classes for buttons is appropriate and keeps related functionality together. However, the code could benefit from additional comments explaining the purpose of some methods and variables, especially for those who are not familiar with the project.","tokens":3038,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/MenuPane.java","name":"MenuPane.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/MenuPane.java","language":"java","measures":[{"metric":"complexity","value":"47","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"24","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"151","bestValue":false},{"metric":"comment_lines_density","value":"0.3","bestValue":false},{"metric":"lines","value":"395","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The class and method names are clear and descriptive. The use of comments is minimal but sufficient. The code adheres to standard Java conventions and is easy to read. However, there could be more comments explaining the purpose of certain methods and the logic behind them. Overall, the code is of high quality and readability.","tokens":806,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKnf-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ItemButton.java","name":"ItemButton.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ItemButton.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"100","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear method names and comments to explain functionality. The use of nested classes and anonymous inner classes is appropriate. However, the code could benefit from more detailed comments on complex logic and better handling of magic numbers. Overall, it is readable and maintainable.","tokens":1714,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBSs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Button.java","name":"Button.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Button.java","language":"java","measures":[{"metric":"complexity","value":"44","bestValue":false},{"metric":"code_smells","value":"17","bestValue":false},{"metric":"cognitive_complexity","value":"46","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"78","bestValue":false},{"metric":"comment_lines_density","value":"4.5","bestValue":false},{"metric":"lines","value":"226","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical organization. The use of comments and consistent naming conventions enhances readability. However, the class is quite large and could benefit from further modularization to improve maintainability. Additionally, some methods are lengthy and could be broken down into smaller, more focused methods.","tokens":5407,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/InventoryPane.java","name":"InventoryPane.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/InventoryPane.java","language":"java","measures":[{"metric":"complexity","value":"160","bestValue":false},{"metric":"code_smells","value":"26","bestValue":false},{"metric":"cognitive_complexity","value":"145","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"330","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"710","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, method overriding, and clear method names. The comments and licensing information are clear. However, the readability could be slightly improved with more comments explaining the logic within methods, especially for those unfamiliar with the game\u0027s context. Overall, it is a high-quality and maintainable code.","tokens":835,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBSw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ResumeIndicator.java","name":"ResumeIndicator.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/ResumeIndicator.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"24","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"93","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses meaningful variable names and includes comments for licensing. The methods are concise and focused on single responsibilities. However, the nested if-else conditions in the item method could be refactored for better readability. Overall, the code is clean and maintainable.","tokens":1137,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/InventorySlot.java","name":"InventorySlot.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/InventorySlot.java","language":"java","measures":[{"metric":"complexity","value":"26","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"20","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"129","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"65","reasoning":"The code is generally well-structured and follows standard Java conventions. However, it has several synchronized methods which could lead to performance issues and potential deadlocks. The FIXME comment indicates known issues with thread interactions that need refactoring. The use of magic numbers and lack of comments explaining complex logic also reduce readability.","tokens":1515,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/AttackIndicator.java","name":"AttackIndicator.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/AttackIndicator.java","language":"java","measures":[{"metric":"complexity","value":"36","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"39","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"80","bestValue":false},{"metric":"comment_lines_density","value":"0.7","bestValue":false},{"metric":"lines","value":"209","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants for icon indices and initializing shared resources efficiently. The class is cohesive, focusing on hero icons. However, the comments could be more descriptive, and the class could benefit from additional documentation for methods and parameters. Overall, the readability and quality are high, but there\u0027s room for minor improvements.","tokens":1138,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBS1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/HeroIcon.java","name":"HeroIcon.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/HeroIcon.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"7.1","bestValue":false},{"metric":"lines","value":"103","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The class is concise and methods are clearly defined. Variable and method names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining the purpose of certain calculations, such as the margin calculations in the layout method. Overall, it is clean and easy to understand.","tokens":668,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/CheckBox.java","name":"CheckBox.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/CheckBox.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"69","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear method names and comments, making it easy to understand. However, it could benefit from some refactoring to reduce complexity, especially in methods like \u0027useTargeting\u0027 and \u0027autoAim\u0027. Additionally, the use of nested classes and anonymous inner classes could be simplified for better readability.","tokens":2942,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBSr","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/QuickSlotButton.java","name":"QuickSlotButton.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/QuickSlotButton.java","language":"java","measures":[{"metric":"complexity","value":"92","bestValue":false},{"metric":"code_smells","value":"13","bestValue":false},{"metric":"cognitive_complexity","value":"71","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"136","bestValue":false},{"metric":"comment_lines_density","value":"2.5","bestValue":false},{"metric":"lines","value":"410","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical flow. The class is cohesive and the methods are concise. However, the use of a public static instance variable could lead to potential issues in a multi-threaded environment. Additionally, more comments explaining the logic could improve readability.","tokens":653,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/TargetHealthIndicator.java","name":"TargetHealthIndicator.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/TargetHealthIndicator.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"67","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper licensing information. The class is simple and concise, with clear constructors. However, it lacks comments explaining the purpose of the class and its methods, which could improve readability and maintainability.","tokens":483,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/RedButton.java","name":"RedButton.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/RedButton.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"2","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"37","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses meaningful variable names and includes comments for licensing. The use of nested classes and methods is appropriate, and the logic is clear. However, the code could benefit from additional comments explaining the purpose of certain blocks and methods, and there are some minor formatting inconsistencies.","tokens":1530,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBS8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/RightClickMenu.java","name":"RightClickMenu.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/RightClickMenu.java","language":"java","measures":[{"metric":"complexity","value":"24","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"26","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"73","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"175","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses meaningful variable names and has clear method definitions. The use of comments and consistent formatting enhances readability. However, the class could benefit from additional comments explaining the purpose of certain methods and variables, and there is a minor typo in the closing comment.","tokens":872,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Toast.java","name":"Toast.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Toast.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"94","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the large number of imports and nested classes could be simplified or modularized for better maintainability. The code could also benefit from additional comments explaining complex logic.","tokens":3921,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBS3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/QuickRecipe.java","name":"QuickRecipe.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/QuickRecipe.java","language":"java","measures":[{"metric":"complexity","value":"51","bestValue":false},{"metric":"code_smells","value":"14","bestValue":false},{"metric":"cognitive_complexity","value":"41","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"176","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"398","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical organization. The comments are helpful, and the code is modular. However, there are some minor readability issues, such as the lack of spacing in some areas and the use of magic numbers. Overall, the code is of high quality and easy to understand.","tokens":1771,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBSx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/OptionSlider.java","name":"OptionSlider.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/OptionSlider.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"73","bestValue":false},{"metric":"comment_lines_density","value":"2.2","bestValue":false},{"metric":"lines","value":"194","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method naming. The use of constants for sizes and the separation of logic into different methods enhance readability. However, the class could benefit from additional comments explaining the purpose of certain methods and variables, especially for those unfamiliar with the context of the game.","tokens":716,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBS5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BuffIcon.java","name":"BuffIcon.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BuffIcon.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"67","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. Variable names are meaningful, and the logic is straightforward. However, the comments could be more descriptive, and there is a minor inconsistency in the indentation. Overall, the code is readable and maintainable.","tokens":871,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBS9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/HealthBar.java","name":"HealthBar.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/HealthBar.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"90","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of enums. Variable and method names are descriptive, enhancing readability. However, the class is quite large and could benefit from further modularization. Additionally, some nested if-else conditions could be simplified for better readability.","tokens":2204,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/TalentButton.java","name":"TalentButton.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/TalentButton.java","language":"java","measures":[{"metric":"complexity","value":"43","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"74","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"88","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"261","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. Variable names are meaningful, and the logic is clear. However, there are minor areas for improvement, such as adding more comments for better readability and possibly refactoring nested loops for clarity.","tokens":806,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/ToxicGas.java","name":"ToxicGas.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/ToxicGas.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"79","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and licensing information is appropriate. However, the nested loops and conditionals could be refactored for better readability. Additionally, the use of magic numbers (e.g., PathFinder.NEIGHBOURS8[Random.Int(8)]) could be replaced with named constants for clarity.","tokens":1193,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/WellWater.java","name":"WellWater.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/WellWater.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"33","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"43","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"136","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, meaningful variable names, and clear logic flow. The use of overridden methods and appropriate class imports enhances readability. However, the nested loops could be optimized for better performance, and additional comments within the evolve method could improve understanding.","tokens":904,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Foliage.java","name":"Foliage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Foliage.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"24","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"90","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of constants and descriptive variable names enhances readability. However, the nested loops and conditionals could be refactored for better readability and maintainability. Overall, the code is of high quality but could benefit from minor improvements.","tokens":1324,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Electricity.java","name":"Electricity.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Electricity.java","language":"java","measures":[{"metric":"complexity","value":"23","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"50","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"41","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"130","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and clear separation of concerns. Variable names are meaningful, and the logic is straightforward. However, the nested loops and multiple type casts could be simplified for better readability. Additionally, comments explaining the purpose of the \u0027evolve\u0027 method would enhance understanding.","tokens":801,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Blizzard.java","name":"Blizzard.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Blizzard.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"19","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"22","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"77","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. However, the nested loops could be optimized for readability, and there is a minor typo in the comment \u0027classh file\u0027 at the end.","tokens":749,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/ConfusionGas.java","name":"ConfusionGas.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/ConfusionGas.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"65","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments and licensing information are clear. Variable and method names are descriptive, enhancing readability. However, the nested loops and conditionals could be refactored for better readability and maintainability. Overall, the code is clean and understandable.","tokens":793,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/StormCloud.java","name":"StormCloud.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/StormCloud.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"15","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"2.4","bestValue":false},{"metric":"lines","value":"73","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper indentation, meaningful variable names, and clear logic flow. The use of comments and licensing information is also appropriate. However, the nested loops and conditionals could be refactored for better readability and maintainability. Overall, the code is of high quality but has room for minor improvements.","tokens":966,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Regrowth.java","name":"Regrowth.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Regrowth.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"37","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"22","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"82","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and licensing information is appropriate. However, the nested loops in the evolve method could be optimized for readability and performance. Overall, the code is maintainable and understandable.","tokens":673,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Alchemy.java","name":"Alchemy.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Alchemy.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"58","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of indentation and spacing enhances readability. However, the nested loops and conditionals could be refactored for better clarity and maintainability. Additionally, some comments explaining the purpose of complex logic would be beneficial.","tokens":1448,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Freezing.java","name":"Freezing.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Freezing.java","language":"java","measures":[{"metric":"complexity","value":"29","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"42","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"52","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"142","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and clear separation of concerns. Variable names are meaningful, and the logic is straightforward. However, the nested loops and conditionals could be refactored for better readability and maintainability. Additionally, comments explaining the purpose of key sections would enhance understanding.","tokens":981,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Inferno.java","name":"Inferno.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Inferno.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"32","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"31","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"99","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper package declarations, imports, and class definitions. The methods are concise and clear, with appropriate use of overrides. However, the class lacks comments explaining the purpose and functionality of the methods, which could improve readability and maintainability.","tokens":540,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/SmokeScreen.java","name":"SmokeScreen.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/SmokeScreen.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"3","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"42","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method definitions, and meaningful variable names. The comments and licensing information are clear. However, the nested loops and conditionals could be refactored for better readability. Overall, the code is maintainable and understandable.","tokens":1161,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Fire.java","name":"Fire.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Fire.java","language":"java","measures":[{"metric":"complexity","value":"25","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"31","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"41","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"127","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the code could benefit from additional comments explaining complex logic, especially in the evolve method. The use of magic numbers and some long methods slightly reduce readability.","tokens":1940,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Blob.java","name":"Blob.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Blob.java","language":"java","measures":[{"metric":"complexity","value":"53","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"92","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"108","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"264","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper documentation and licensing information. The class and method names are descriptive, and the logic is clear. However, the nested loops in the evolve method could be optimized for better performance. Overall, the code is readable and maintainable.","tokens":782,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/ParalyticGas.java","name":"ParalyticGas.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/ParalyticGas.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"2.6","bestValue":false},{"metric":"lines","value":"70","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes comments that explain the purpose of the class and methods, which enhances readability. The use of meaningful variable names and clear method definitions also contribute to its quality. However, the code could benefit from additional comments within the evolve method to explain the logic further. Overall, it is clean and easy to understand.","tokens":865,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/GooWarn.java","name":"GooWarn.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/GooWarn.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"8.3","bestValue":false},{"metric":"lines","value":"86","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The comments and licensing information are clear. However, the FIXME comment indicates a potential issue that needs addressing. The use of magic numbers (e.g., 2f, 0.4f) could be improved by defining constants. Overall, the code is readable and maintainable but has minor areas for improvement.","tokens":1015,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWa","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/CorrosiveGas.java","name":"CorrosiveGas.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/CorrosiveGas.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"18","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"2.9","bestValue":false},{"metric":"lines","value":"106","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. However, the nested loops could be optimized for readability, and there is a minor typo in the comment at the end (\u0027classh\u0027 instead of \u0027class\u0027).","tokens":752,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/StenchGas.java","name":"StenchGas.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/StenchGas.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"65","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"90","reasoning":"The code is well-structured, with clear method definitions and appropriate use of comments. The class and method names are descriptive, and the logic is straightforward. The use of external libraries and assets is well-handled. However, the code could benefit from additional comments explaining the purpose of certain operations, especially for those unfamiliar with the game\u0027s context.","tokens":1291,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/WaterOfHealth.java","name":"WaterOfHealth.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/WaterOfHealth.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"109","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical organization. The use of constants and method overrides enhances readability. However, the nested loops and conditionals could be refactored for better clarity and maintainability. Overall, the code is readable and of high quality.","tokens":1173,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Web.java","name":"Web.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Web.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"18","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"29","bestValue":false},{"metric":"comment_lines_density","value":"2.8","bestValue":false},{"metric":"lines","value":"109","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of constants and encapsulation is appropriate. However, there are some areas where readability could be improved, such as reducing nested loops and adding more comments for complex logic. Overall, the code is maintainable and understandable.","tokens":2267,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/SacrificialFire.java","name":"SacrificialFire.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/SacrificialFire.java","language":"java","measures":[{"metric":"complexity","value":"42","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"87","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"86","bestValue":false},{"metric":"comment_lines_density","value":"4.5","bestValue":false},{"metric":"lines","value":"230","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and clear method responsibilities. The naming conventions are consistent and meaningful. However, the code could benefit from additional comments explaining the logic, especially within loops and conditionals. The use of magic numbers and hardcoded strings could be improved by defining constants.","tokens":1064,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/WaterOfAwareness.java","name":"WaterOfAwareness.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/WaterOfAwareness.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"106","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, clear method names, and appropriate comments. The use of constants and overriding methods is also well-done. However, the class could benefit from additional comments explaining the purpose of certain methods and variables for better readability.","tokens":658,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUc","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/AnkhInvulnerability.java","name":"AnkhInvulnerability.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/AnkhInvulnerability.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"68","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of constants and overriding methods enhances readability. However, the code could benefit from more detailed comments explaining the logic within methods, especially for non-obvious calculations and conditions. Overall, it is clean and maintainable.","tokens":978,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/WellFed.java","name":"WellFed.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/WellFed.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"4.2","bestValue":false},{"metric":"lines","value":"108","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method naming. The use of comments is minimal but the code is self-explanatory. The class adheres to the single responsibility principle and methods are concise. However, the readability could be slightly improved with more comments explaining the purpose of each method and the class as a whole.","tokens":882,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/ShieldBuff.java","name":"ShieldBuff.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/ShieldBuff.java","language":"java","measures":[{"metric":"complexity","value":"19","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"105","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper documentation, clear class and method definitions, and appropriate use of constants. The use of inheritance and method overrides is clear and concise. However, the brevity of the class limits the complexity and depth of evaluation.","tokens":529,"sonarData":{"component":{"id":"AYh9pBdxXMB54cnrmw_g","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Daze.java","name":"Daze.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Daze.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"46","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured, with clear separation of concerns and appropriate use of encapsulation. Variable and method names are descriptive, and the use of comments and annotations is helpful. However, the code could benefit from additional comments explaining the logic in more detail, especially in the \u0027act\u0027 and \u0027onDeath\u0027 methods. Overall, it is readable and maintains good coding practices.","tokens":1089,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBU5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Corrosion.java","name":"Corrosion.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Corrosion.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"129","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper documentation, meaningful variable names, and clear method implementations. The use of overrides and bundle storage is appropriate. However, the class could benefit from additional comments explaining the logic behind certain methods and the purpose of some variables, which would improve readability for new developers.","tokens":830,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/RevealedArea.java","name":"RevealedArea.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/RevealedArea.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"87","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured, with clear and concise methods. The class and method names are descriptive, and the use of comments is appropriate. However, the class could benefit from additional error handling and validation. Overall, the readability and quality are high, but there is room for minor improvements.","tokens":574,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBU1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/CounterBuff.java","name":"CounterBuff.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/CounterBuff.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"3.8","bestValue":false},{"metric":"lines","value":"57","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, constants, and method overrides. The class is concise and focused on its purpose. However, the use of inline initialization blocks and the lack of comments explaining the logic could slightly hinder readability for new developers.","tokens":573,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBT1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Adrenaline.java","name":"Adrenaline.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Adrenaline.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"5","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"53","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method naming. The use of comments and logical grouping of methods enhances readability. However, the class is quite large and could benefit from further modularization. Additionally, some methods have complex logic that could be simplified for better readability.","tokens":2142,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Momentum.java","name":"Momentum.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Momentum.java","language":"java","measures":[{"metric":"complexity","value":"49","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"39","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"91","bestValue":false},{"metric":"comment_lines_density","value":"1.0","bestValue":false},{"metric":"lines","value":"248","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class could benefit from additional comments explaining the logic in more complex methods, and there are some minor formatting inconsistencies.","tokens":1177,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Bleeding.java","name":"Bleeding.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Bleeding.java","language":"java","measures":[{"metric":"complexity","value":"19","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"22","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"36","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"141","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, constants, and method overrides. The class is concise and focused on its purpose. However, the use of an anonymous block for initializing the \u0027type\u0027 variable could be replaced with a constructor for better readability. Overall, the code is clean and easy to understand.","tokens":580,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Haste.java","name":"Haste.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Haste.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of overrides. The class is cohesive, focusing on the \u0027Light\u0027 buff functionality. However, the use of magic numbers (e.g., 250f, 6) could be improved by defining them as constants with descriptive names. Overall, the code is readable and maintainable.","tokens":753,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Light.java","name":"Light.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Light.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"78","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper encapsulation, clear method names, and appropriate use of comments. The logic is straightforward and easy to follow. However, there are minor areas for improvement, such as adding more detailed comments for complex logic and ensuring consistent formatting. Overall, the code is highly readable and maintainable.","tokens":952,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/ArcaneArmor.java","name":"ArcaneArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/ArcaneArmor.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"117","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides and proper use of constants. The class is concise and focused on its purpose. However, the use of magic numbers in the tintIcon method could be improved by defining them as constants. Overall, the readability and quality are high.","tokens":631,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBU6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/SoulMark.java","name":"SoulMark.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/SoulMark.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"58","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of encapsulation, clear method names, and comments. The logic is clear and the use of constants and bundle storage is appropriate. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which can affect readability.","tokens":2083,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBU2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Burning.java","name":"Burning.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Burning.java","language":"java","measures":[{"metric":"complexity","value":"45","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"70","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"70","bestValue":false},{"metric":"comment_lines_density","value":"3.6","bestValue":false},{"metric":"lines","value":"230","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and the methods are clear and to the point. The use of comments and proper naming conventions enhances readability. However, the brevity of the class limits the complexity assessment, and there is a minor typo in the comment section (\u0027classh\u0027 instead of \u0027class\u0027).","tokens":567,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Doom.java","name":"Doom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Doom.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"45","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of enums, clear method names, and comments explaining key parts. The use of constants and helper methods enhances readability. However, the class is quite long and complex, which could be broken down into smaller, more manageable pieces. Additionally, some variable names could be more descriptive to improve clarity.","tokens":3002,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Preparation.java","name":"Preparation.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Preparation.java","language":"java","measures":[{"metric":"complexity","value":"61","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"19","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"114","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"337","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is concise and well-documented with a clear license header. The class is simple and easy to understand, with a single public static final variable. However, it lacks comments explaining the purpose of the class and its relationship with other classes, which could improve readability and maintainability.","tokens":445,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Speed.java","name":"Speed.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Speed.java","language":"java","measures":[{"metric":"complexity","value":"0","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"0","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"29","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and consistent formatting. The use of comments and descriptive variable names enhances readability. However, the class is quite large and could benefit from being broken down into smaller, more manageable pieces. Additionally, the nested if-else conditions could be simplified for better readability.","tokens":3738,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUt","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/AscensionChallenge.java","name":"AscensionChallenge.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/AscensionChallenge.java","language":"java","measures":[{"metric":"complexity","value":"85","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"108","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"170","bestValue":false},{"metric":"comment_lines_density","value":"4.8","bestValue":false},{"metric":"lines","value":"386","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper licensing information, clear package and import statements, and a concise class definition. The methods are straightforward and self-explanatory. However, the class lacks comments explaining the purpose of the methods and variables, which could improve readability for other developers.","tokens":571,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Stamina.java","name":"Stamina.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Stamina.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper encapsulation, use of constants, and clear method names. The comments and licensing information are clear. However, the code could benefit from additional inline comments explaining the logic, especially in the \u0027act\u0027 and \u0027onDeath\u0027 methods. Overall, it is readable and maintainable.","tokens":1021,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBT3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Poison.java","name":"Poison.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Poison.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"124","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The class is concise and the methods are clear in their purpose. However, the use of magic numbers (e.g., 3 in iconFadePercent) could be improved by defining constants. Overall, the readability and quality are high, but there is minor room for improvement.","tokens":720,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/EnhancedRings.java","name":"EnhancedRings.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/EnhancedRings.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"69","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of constants. The comments and licensing information are clear. However, the use of magic numbers (e.g., 400f, 8) could be improved by defining them as constants with descriptive names. Overall, the code is readable and maintainable.","tokens":654,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBT-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Foresight.java","name":"Foresight.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Foresight.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"3.1","bestValue":false},{"metric":"lines","value":"63","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper documentation, clear class and method definitions, and appropriate use of constants. The use of inheritance and method overrides is clear and concise. However, the class could benefit from additional comments explaining the logic within methods for better readability.","tokens":530,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Bless.java","name":"Bless.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Bless.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"46","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The comments are helpful and the variable names are descriptive. However, the logic could be slightly optimized and the readability could be improved by breaking down some of the longer methods into smaller, more focused ones.","tokens":1197,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Healing.java","name":"Healing.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Healing.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"3.5","bestValue":false},{"metric":"lines","value":"132","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions and proper use of inheritance. The use of comments and meaningful variable names enhances readability. However, the nested loops in the attachTo method could be optimized for better performance. Overall, the code is clean and maintainable.","tokens":776,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/MagicImmune.java","name":"MagicImmune.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/MagicImmune.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"86","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of constants, and appropriate comments. The use of package and import statements is correct. However, the class could benefit from additional comments explaining the purpose of each method and the overall functionality. The readability is high, but minor improvements in documentation could enhance understanding.","tokens":734,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBT8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/FrostImbue.java","name":"FrostImbue.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/FrostImbue.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"74","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and consistent formatting. The class is cohesive and the methods are concise. However, the use of magic numbers (e.g., 0.1f, 0.5f) could be improved by defining them as constants for better readability and maintainability.","tokens":741,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBT0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Chill.java","name":"Chill.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Chill.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"2.6","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper documentation, meaningful class and method names, and clear logic. However, the brevity of the class limits the assessment of more complex aspects like error handling and code modularity.","tokens":522,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Vertigo.java","name":"Vertigo.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Vertigo.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"46","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and consistent formatting. The use of constants and bundle storage methods enhances readability and maintainability. However, the logic within the \u0027recover\u0027 method could be simplified for better clarity, and additional comments could improve understanding for future maintainers.","tokens":814,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Charm.java","name":"Charm.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Charm.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"87","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides and proper use of inheritance. The comments are helpful, and the logic is straightforward. However, the nested if statements could be refactored for better readability, and there could be more comments explaining the purpose of the class and its methods.","tokens":674,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBU0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Amok.java","name":"Amok.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Amok.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"16","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"3.1","bestValue":false},{"metric":"lines","value":"60","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes comments that explain the purpose of the class and methods. The use of descriptive method names like \u0027act\u0027, \u0027desc\u0027, and \u0027iconTextDisplay\u0027 enhances readability. However, the class could benefit from additional comments explaining the logic within methods, and the \u0027dispTurns\u0027 method could be more descriptive.","tokens":575,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/FlavourBuff.java","name":"FlavourBuff.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/FlavourBuff.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"5","bestValue":false},{"metric":"comment_lines_density","value":"9.1","bestValue":false},{"metric":"lines","value":"50","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The naming conventions are clear, and the logic is easy to follow. However, there are minor areas for improvement, such as adding more comments for better readability and possibly refactoring the nested if-else statements for clarity.","tokens":985,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBT2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Shadows.java","name":"Shadows.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Shadows.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"21","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"35","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"129","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides and proper use of constants. The comments are helpful in understanding the logic behind the methods. However, the class could benefit from more detailed documentation for each method and the use of more descriptive variable names. Overall, the readability and quality are high.","tokens":692,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBU7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Recharging.java","name":"Recharging.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Recharging.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"5","bestValue":false},{"metric":"comment_lines_density","value":"17.2","bestValue":false},{"metric":"lines","value":"59","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper encapsulation, clear method names, and consistent formatting. The use of comments and constants enhances readability. However, the class could benefit from additional inline comments explaining complex logic, and some methods could be broken down further to improve clarity.","tokens":1210,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/SnipersMark.java","name":"SnipersMark.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/SnipersMark.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"44","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"149","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides, proper use of constants, and meaningful method names. The class is cohesive and focused on a single responsibility. However, the use of magic numbers (e.g., DURATION and DISTANCE) could be improved by adding comments explaining their significance. Overall, the readability and quality are high.","tokens":716,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/MagicalSight.java","name":"MagicalSight.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/MagicalSight.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"75","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class could benefit from additional comments explaining the purpose of certain methods and logic, especially for those unfamiliar with the game\u0027s context. Overall, it is clean and maintainable.","tokens":941,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUL","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/PinCushion.java","name":"PinCushion.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/PinCushion.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"30","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"104","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class could benefit from additional comments explaining the purpose of certain methods and logic, especially for those unfamiliar with the game\u0027s context. Overall, it is a high-quality and readable piece of code.","tokens":935,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/ToxicImbue.java","name":"ToxicImbue.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/ToxicImbue.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"24","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"116","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and consistent formatting. The logic is straightforward and easy to follow. However, the use of magic numbers (20 and 50) could be improved by defining them as constants. Additionally, more detailed comments explaining the purpose of the class and its methods could enhance readability.","tokens":754,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/LockedFloor.java","name":"LockedFloor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/LockedFloor.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"8.7","bestValue":false},{"metric":"lines","value":"80","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments. The use of encapsulation and inheritance is appropriate. However, the readability could be slightly improved by adding more comments explaining the logic within methods and possibly breaking down complex expressions. Overall, it is a high-quality code with minor areas for improvement.","tokens":775,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Corruption.java","name":"Corruption.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Corruption.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"2.4","bestValue":false},{"metric":"lines","value":"77","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class could benefit from additional inline comments explaining the logic behind certain operations, and the magic numbers could be replaced with named constants for better clarity.","tokens":847,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/AdrenalineSurge.java","name":"AdrenalineSurge.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/AdrenalineSurge.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"103","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured, follows good naming conventions, and includes comments for licensing. Methods are concise and focused on single responsibilities. However, the class could benefit from additional comments explaining the logic, especially for non-obvious parts like the armorBonus method. Overall, it is readable and maintainable but lacks some inline documentation.","tokens":821,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUg","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/HoldFast.java","name":"HoldFast.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/HoldFast.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"89","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments explaining the purpose of the class and methods. The use of inheritance and polymorphism is appropriate. However, the code could benefit from additional comments within methods to explain complex logic, and the use of magic numbers should be avoided. Overall, it is readable and maintainable.","tokens":957,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBT4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/AllyBuff.java","name":"AllyBuff.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/AllyBuff.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"8.5","bestValue":false},{"metric":"lines","value":"79","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"75","reasoning":"The code is concise and follows standard Java conventions, making it readable. The class and method names are clear, and the use of comments is appropriate. However, the class is very minimal and lacks context, which makes it harder to fully assess its quality and functionality. Additionally, the use of magic numbers (e.g., 1.5f) without explanation could be improved.","tokens":488,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Sleep.java","name":"Sleep.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Sleep.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"2","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"34","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper documentation, clear class and method definitions, and appropriate use of constants. However, the class is relatively simple and does not showcase complex logic or error handling, which limits the evaluation of its overall quality.","tokens":528,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Cripple.java","name":"Cripple.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Cripple.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"45","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, comments, and logical organization. The use of nested classes for abilities is appropriate. However, the class is quite large and could benefit from further modularization. Some methods are lengthy and could be broken down for better readability. Overall, the code is maintainable and understandable.","tokens":5416,"sonarData":{"component":{"id":"AYcBWmJUXcjzOtg4n6NY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/MonkEnergy.java","name":"MonkEnergy.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/MonkEnergy.java","language":"java","measures":[{"metric":"complexity","value":"144","bestValue":false},{"metric":"code_smells","value":"29","bestValue":false},{"metric":"cognitive_complexity","value":"137","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"256","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"682","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and clear, with appropriate use of comments and meaningful variable names. The logic is straightforward and easy to follow. However, the class could benefit from additional comments explaining the purpose of the \u0027act\u0027 method and the \u0027LEVEL\u0027 variable. Overall, it demonstrates good readability and quality.","tokens":556,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Fury.java","name":"Fury.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Fury.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments is appropriate and helps in understanding the purpose of methods and variables. However, the code could benefit from more detailed comments in some areas and better naming conventions for some methods and variables to enhance readability further.","tokens":1527,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Buff.java","name":"Buff.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Buff.java","language":"java","measures":[{"metric":"complexity","value":"30","bestValue":false},{"metric":"code_smells","value":"11","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"49","bestValue":false},{"metric":"comment_lines_density","value":"11.3","bestValue":false},{"metric":"lines","value":"189","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured, with clear method definitions and appropriate use of comments. Variable and method names are descriptive, enhancing readability. The use of constants for keys and the adherence to Java conventions are commendable. However, the class could benefit from additional comments explaining the logic behind certain methods, and the use of magic numbers should be avoided.","tokens":819,"sonarData":{"component":{"id":"AYcBWmJUXcjzOtg4n6NZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/PhysicalEmpower.java","name":"PhysicalEmpower.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/PhysicalEmpower.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"91","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise, with clear method names and a logical flow. The use of constants and method overrides is appropriate. However, the class could benefit from additional comments explaining the purpose of each method and the overall functionality. The variable \u0027distance\u0027 is public, which might not be ideal for encapsulation.","tokens":599,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBT9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/MindVision.java","name":"MindVision.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/MindVision.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"55","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and clear separation of concerns. The comments and licensing information are clear. However, the readability could be slightly improved by adding more comments within the methods to explain the logic, especially for complex conditions. The use of magic numbers and some minor formatting issues also slightly detract from the overall quality.","tokens":1007,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUr","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/MagicalSleep.java","name":"MagicalSleep.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/MagicalSleep.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"33","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"100","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and the methods are clear. The use of comments and licensing information is appropriate. However, the class could benefit from additional comments explaining the purpose and functionality of the methods and fields for better readability.","tokens":507,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Awareness.java","name":"Awareness.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Awareness.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"42","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes clear comments. The use of constants and method overrides is appropriate. However, the class could benefit from additional comments explaining the purpose of certain methods and fields. The list of immunities could also be refactored into a more maintainable structure.","tokens":1000,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUm","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/BlobImmunity.java","name":"BlobImmunity.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/BlobImmunity.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"82","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper documentation, clear class and method definitions, and appropriate use of constants. The use of inheritance and method overrides is clear and concise. However, the brevity of the class limits the complexity assessment, and there is a minor typo in the comment at the end (\u0027classh\u0027 instead of \u0027class\u0027).","tokens":548,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBU3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Hex.java","name":"Hex.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Hex.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"45","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and appropriate comments. The logic is clear and easy to follow. However, there are minor issues such as inconsistent spacing and lack of detailed comments on some methods which could improve readability further.","tokens":1058,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Paralysis.java","name":"Paralysis.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Paralysis.java","language":"java","measures":[{"metric":"complexity","value":"19","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"36","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"122","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper documentation and licensing information. The class is concise and clear, with meaningful method names and constants. However, the use of magic numbers (e.g., 1f, 0.33f, 0.2f) could be improved by defining them as constants for better readability.","tokens":585,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Slow.java","name":"Slow.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Slow.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"5","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"52","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper encapsulation, clear method names, and consistent formatting. The use of constants for thresholds and the separation of concerns in methods enhance readability. However, the code could benefit from additional comments explaining the logic, especially in complex sections. Overall, it is clean and maintainable.","tokens":1697,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Hunger.java","name":"Hunger.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Hunger.java","language":"java","measures":[{"metric":"complexity","value":"39","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"40","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"72","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"215","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The comments are helpful and the logic is straightforward. However, there are some minor readability issues, such as the lack of spacing in some areas and the use of magic numbers. Overall, the code is maintainable and understandable.","tokens":890,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Regeneration.java","name":"Regeneration.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Regeneration.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"21","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"22","bestValue":false},{"metric":"comment_lines_density","value":"5.9","bestValue":false},{"metric":"lines","value":"87","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, method overrides, and bundle handling for serialization. The comments and licensing information are clear. However, the variable naming could be more descriptive, and there is a minor inconsistency in the use of spacing and indentation.","tokens":725,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBU4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/LifeLink.java","name":"LifeLink.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/LifeLink.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"77","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments that explain the logic. The use of nested classes for different champion types is appropriate. However, the code could benefit from more detailed comments on complex methods and a bit more consistency in formatting. Overall, it is readable and maintainable.","tokens":2051,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/ChampionEnemy.java","name":"ChampionEnemy.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/ChampionEnemy.java","language":"java","measures":[{"metric":"complexity","value":"45","bestValue":false},{"metric":"code_smells","value":"13","bestValue":false},{"metric":"cognitive_complexity","value":"23","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"79","bestValue":false},{"metric":"comment_lines_density","value":"2.9","bestValue":false},{"metric":"lines","value":"286","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, clear method definitions, and appropriate comments. Variable and method names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining complex logic, and some methods could be broken down further to improve clarity.","tokens":1336,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUa","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Frost.java","name":"Frost.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Frost.java","language":"java","measures":[{"metric":"complexity","value":"25","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"43","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"47","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"145","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper documentation and licensing information. The class is concise and clear, with meaningful variable names and methods. However, the reasoning behind the \u0027type\u0027 and \u0027announced\u0027 fields could be better documented, and the class could benefit from additional comments explaining the logic of the methods.","tokens":541,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Weakness.java","name":"Weakness.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Weakness.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"45","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and clear, with appropriate use of inheritance and method overrides. The use of constants and clear method names enhances readability. However, the class could benefit from additional comments explaining the purpose of each method and the overall functionality of the class.","tokens":567,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Blindness.java","name":"Blindness.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Blindness.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"53","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper documentation and licensing information. The class is concise and clear, with meaningful variable names and methods. However, the use of a magic number for the duration could be improved by adding more context or comments. Overall, the readability and quality are high.","tokens":539,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBU9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Vulnerable.java","name":"Vulnerable.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Vulnerable.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"45","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper naming conventions and clear method definitions. The use of comments and documentation is appropriate. However, the class could benefit from additional comments explaining the purpose of certain methods and variables for better readability. Overall, the code is clean and maintainable.","tokens":744,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/WandEmpower.java","name":"WandEmpower.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/WandEmpower.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"86","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, clear method definitions, and appropriate comments. The use of constants and bundle storage is good. However, the readability could be slightly improved by adding more comments explaining the logic, especially in the \u0027act\u0027 method. The class is also tightly coupled with other classes, which could be a potential issue for maintainability.","tokens":1023,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Dread.java","name":"Dread.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Dread.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"32","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"131","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper encapsulation, clear method names, and appropriate use of comments. The logic is straightforward and easy to follow. However, there are minor areas for improvement, such as potential redundancy in the chargeArtifacts method and the use of magic numbers. Overall, the code is readable and maintainable.","tokens":1148,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBT5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/ArtifactRecharge.java","name":"ArtifactRecharge.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/ArtifactRecharge.java","language":"java","measures":[{"metric":"complexity","value":"25","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"31","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"38","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"136","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. Variable and method names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining the logic within methods, especially for complex operations like \u0027act\u0027.","tokens":944,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBT6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Barrier.java","name":"Barrier.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Barrier.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"113","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The class and method names are descriptive, and the logic is clear. However, there are some minor readability issues, such as the lack of comments explaining the purpose of certain methods and the use of magic numbers. Overall, the code is of high quality but could benefit from additional documentation.","tokens":1121,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Invisibility.java","name":"Invisibility.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Invisibility.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"37","bestValue":false},{"metric":"comment_lines_density","value":"1.3","bestValue":false},{"metric":"lines","value":"116","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of enums, and consistent formatting. The comments and documentation are minimal but the code is self-explanatory. The use of nested classes and enums is appropriate. However, the class is quite large and could benefit from further modularization. Overall, the readability and quality are high.","tokens":4236,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUj","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Combo.java","name":"Combo.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Combo.java","language":"java","measures":[{"metric":"complexity","value":"106","bestValue":false},{"metric":"code_smells","value":"23","bestValue":false},{"metric":"cognitive_complexity","value":"90","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"210","bestValue":false},{"metric":"comment_lines_density","value":"2.8","bestValue":false},{"metric":"lines","value":"524","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, clear method names, and logical organization. The use of constants and overriding methods is appropriate. However, the class could benefit from additional comments explaining the purpose of certain methods and variables, and the reasoning behind specific logic, which would improve readability for other developers.","tokens":690,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBT_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Terror.java","name":"Terror.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Terror.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"75","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of encapsulation, clear method names, and appropriate comments. The use of constants and bundle storage is commendable. However, the readability could be slightly improved by adding more comments explaining the logic, especially in the \u0027act\u0027 and \u0027proc\u0027 methods. Overall, the code is clean and maintainable.","tokens":1024,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBT7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/FireImbue.java","name":"FireImbue.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/FireImbue.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"28","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"127","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and consistent formatting. The use of constants and override annotations enhances readability. However, the logic within the act() method could be simplified for better readability, and additional comments could help explain the purpose of certain conditions.","tokens":949,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Ooze.java","name":"Ooze.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Ooze.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"29","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"108","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes a clear package declaration and imports. The class and method names are descriptive. However, the class is quite simple and lacks comments explaining the purpose of the class and its methods, which could improve readability and maintainability.","tokens":481,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/LostInventory.java","name":"LostInventory.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/LostInventory.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"2","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"38","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of constants, and appropriate comments. The class is cohesive and the methods are concise. However, the reasoning behind some methods like \u0027iconTextDisplay\u0027 could be clearer, and there is a minor typo in the comment at the end. Overall, the code is readable and maintainable.","tokens":711,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Drowsy.java","name":"Drowsy.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Drowsy.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"75","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of encapsulation and modularity is evident. However, there are some areas for improvement, such as better handling of magic numbers and potential optimization of the nested loops. Overall, the code is readable and maintainable.","tokens":1359,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUe","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/PrismaticGuard.java","name":"PrismaticGuard.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/PrismaticGuard.java","language":"java","measures":[{"metric":"complexity","value":"30","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"24","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"40","bestValue":false},{"metric":"comment_lines_density","value":"1.9","bestValue":false},{"metric":"lines","value":"148","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the code could benefit from additional comments explaining the logic in more complex methods, and the use of magic numbers should be avoided or explained.","tokens":1090,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBU8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Barkskin.java","name":"Barkskin.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Barkskin.java","language":"java","measures":[{"metric":"complexity","value":"18","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"37","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"134","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical flow. The comments and licensing information are clear. However, the code could benefit from additional inline comments explaining the purpose of certain blocks, especially for those unfamiliar with the game\u0027s context. Overall, it is readable and maintainable.","tokens":929,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Levitation.java","name":"Levitation.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Levitation.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"3.2","bestValue":false},{"metric":"lines","value":"97","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper encapsulation, use of comments, and clear method names. The class is cohesive, focusing on the ScrollEmpower buff. However, the use of magic numbers (e.g., 3f) could be improved by defining constants. Overall, the code is readable and maintainable.","tokens":785,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/ScrollEmpower.java","name":"ScrollEmpower.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/ScrollEmpower.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"95","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of overrides. The class is concise and focused on its purpose. However, the use of magic numbers (e.g., 5f for duration) could be improved by defining them as constants. Overall, the readability and quality are high.","tokens":625,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Roots.java","name":"Roots.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Roots.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"62","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and consistent formatting. The logic is straightforward and easy to follow. However, the class could benefit from additional comments explaining the purpose of the class and its methods for better readability. Overall, it demonstrates a high level of quality and readability.","tokens":864,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Degrade.java","name":"Degrade.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Degrade.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"12.2","bestValue":false},{"metric":"lines","value":"81","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, encapsulation, and clear method definitions. The comments are helpful and the logic is easy to follow. However, the readability could be slightly improved by breaking down some of the longer methods and adding more comments to explain complex logic.","tokens":1429,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBV-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/GnollTrickster.java","name":"GnollTrickster.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/GnollTrickster.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"42","bestValue":false},{"metric":"comment_lines_density","value":"5.4","bestValue":false},{"metric":"lines","value":"160","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and variable names are clear, making the code easy to understand. However, the class is quite large and could benefit from further modularization. Additionally, the use of magic numbers could be replaced with named constants for better readability.","tokens":1683,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DemonSpawner.java","name":"DemonSpawner.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DemonSpawner.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"23","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"63","bestValue":false},{"metric":"comment_lines_density","value":"3.7","bestValue":false},{"metric":"lines","value":"188","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the nested classes and some complex logic could be simplified for better clarity. Overall, it is a high-quality code with minor areas for improvement.","tokens":1865,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Thief.java","name":"Thief.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Thief.java","language":"java","measures":[{"metric":"complexity","value":"43","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"35","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"76","bestValue":false},{"metric":"comment_lines_density","value":"3.0","bestValue":false},{"metric":"lines","value":"231","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the code could benefit from additional comments explaining the logic in complex methods like defenseProc. The use of magic numbers could be replaced with named constants for better clarity.","tokens":1433,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Swarm.java","name":"Swarm.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Swarm.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"51","bestValue":false},{"metric":"comment_lines_density","value":"1.9","bestValue":false},{"metric":"lines","value":"154","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation, meaningful variable names, and proper use of comments. The class is quite large, which can make it harder to navigate, but it is logically organized. The use of constants and encapsulation is appropriate. However, the complexity and length of the class could be reduced for better readability.","tokens":6030,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DM300.java","name":"DM300.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DM300.java","language":"java","measures":[{"metric":"complexity","value":"161","bestValue":false},{"metric":"code_smells","value":"19","bestValue":false},{"metric":"cognitive_complexity","value":"263","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"300","bestValue":false},{"metric":"comment_lines_density","value":"3.8","bestValue":false},{"metric":"lines","value":"684","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and variable names are clear, enhancing readability. However, the use of magic numbers and some inline comments could be improved for better maintainability. Overall, the code is clean and easy to understand.","tokens":1340,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVt","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Monk.java","name":"Monk.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Monk.java","language":"java","measures":[{"metric":"complexity","value":"24","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"42","bestValue":false},{"metric":"comment_lines_density","value":"1.8","bestValue":false},{"metric":"lines","value":"161","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments is appropriate and helps in understanding the logic. However, the code could benefit from additional comments explaining the purpose of certain methods and variables. Overall, it is readable and maintains good quality.","tokens":738,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Bandit.java","name":"Bandit.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Bandit.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"61","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments enhances readability. However, the switch-case blocks are quite extensive and could be refactored for better maintainability. Additionally, the nested if-else statements in swapMobAlts could be optimized using a map or similar structure.","tokens":2375,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBV3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Bestiary.java","name":"Bestiary.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Bestiary.java","language":"java","measures":[{"metric":"complexity","value":"48","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"23","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"60","bestValue":false},{"metric":"comment_lines_density","value":"16.1","bestValue":false},{"metric":"lines","value":"239","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for licensing. The logic is complex but readable, with methods broken down into manageable parts. However, it could benefit from additional inline comments explaining the more complex logic, and some methods are quite long, which can affect readability.","tokens":2376,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Eye.java","name":"Eye.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Eye.java","language":"java","measures":[{"metric":"complexity","value":"52","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"50","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"111","bestValue":false},{"metric":"comment_lines_density","value":"1.9","bestValue":false},{"metric":"lines","value":"280","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear comments, meaningful variable names, and proper use of encapsulation. The logic is complex but well-organized, making it relatively easy to follow. However, the code could benefit from additional comments explaining some of the more intricate logic, and there are a few long methods that could be broken down into smaller, more manageable pieces.","tokens":3060,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVm","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Goo.java","name":"Goo.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Goo.java","language":"java","measures":[{"metric":"complexity","value":"67","bestValue":false},{"metric":"code_smells","value":"15","bestValue":false},{"metric":"cognitive_complexity","value":"78","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"151","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"351","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes appropriate comments and licensing information. The class is concise and the methods are straightforward. However, the use of magic numbers could be improved by defining constants for better readability and maintainability.","tokens":632,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Crab.java","name":"Crab.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Crab.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"60","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, encapsulation, and clear method definitions. The comments and documentation are clear, and the code is easy to follow. However, there are some areas where readability could be improved, such as more detailed comments on complex logic and better variable naming in some places.","tokens":1453,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBV6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Warlock.java","name":"Warlock.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Warlock.java","language":"java","measures":[{"metric":"complexity","value":"23","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"22","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"44","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"159","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for licensing. The logic is complex but well-organized, making it relatively easy to follow. However, the code could benefit from additional inline comments to explain the more intricate parts of the logic, especially within the nested classes and methods.","tokens":3014,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVj","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Ghoul.java","name":"Ghoul.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Ghoul.java","language":"java","measures":[{"metric":"complexity","value":"77","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"84","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"153","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"376","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The class and method names are descriptive, and the logic is easy to follow. However, the code could benefit from further modularization to reduce complexity, especially in the \u0027act\u0027 method. Additionally, some comments could be more detailed to explain the purpose of certain blocks of code.","tokens":4502,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/CrystalSpire.java","name":"CrystalSpire.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/CrystalSpire.java","language":"java","measures":[{"metric":"complexity","value":"109","bestValue":false},{"metric":"code_smells","value":"11","bestValue":false},{"metric":"cognitive_complexity","value":"248","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"244","bestValue":false},{"metric":"comment_lines_density","value":"4.8","bestValue":false},{"metric":"lines","value":"526","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. However, the use of magic numbers and lack of detailed comments within methods slightly reduce readability. Overall, it is high-quality code with minor areas for improvement.","tokens":1111,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBV_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Scorpio.java","name":"Scorpio.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Scorpio.java","language":"java","measures":[{"metric":"complexity","value":"18","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"1.3","bestValue":false},{"metric":"lines","value":"116","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments are clear and provide useful context. However, the code could benefit from more detailed comments explaining the logic within methods, especially for complex operations. Additionally, the use of magic numbers (e.g., 4 in drRoll) could be replaced with named constants for better readability.","tokens":994,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/ArmoredBrute.java","name":"ArmoredBrute.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/ArmoredBrute.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"5.1","bestValue":false},{"metric":"lines","value":"95","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear method names and has appropriate comments. The use of nested classes and method overrides is well-done. However, the code could benefit from more consistent formatting and some methods are quite long, which can affect readability. Additionally, the use of magic numbers and some complex conditionals could be simplified.","tokens":1889,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/CrystalMimic.java","name":"CrystalMimic.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/CrystalMimic.java","language":"java","measures":[{"metric":"complexity","value":"42","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"51","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"79","bestValue":false},{"metric":"comment_lines_density","value":"2.5","bestValue":false},{"metric":"lines","value":"203","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and the methods are clear. The use of comments and proper naming conventions enhances readability. However, the logic within the defenseVerb method could be simplified for better clarity. Overall, the code is of high quality with minor areas for improvement.","tokens":823,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Snake.java","name":"Snake.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Snake.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"74","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the nested callbacks in the chain method could be refactored for better readability. Overall, the code is maintainable and understandable.","tokens":1603,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Guard.java","name":"Guard.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Guard.java","language":"java","measures":[{"metric":"complexity","value":"31","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"24","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"57","bestValue":false},{"metric":"comment_lines_density","value":"2.8","bestValue":false},{"metric":"lines","value":"191","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and variable names are clear, enhancing readability. However, there are minor areas for improvement, such as the TODO comment indicating incomplete logic and the potential for more detailed comments explaining complex logic.","tokens":1243,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/ArmoredStatue.java","name":"ArmoredStatue.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/ArmoredStatue.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"3.8","bestValue":false},{"metric":"lines","value":"152","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overrides, and encapsulation. The comments and licensing information are clear. However, the readability could be slightly improved with more comments explaining the logic within methods. Overall, it is a high-quality code with minor areas for improvement.","tokens":782,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBV0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Rat.java","name":"Rat.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Rat.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"80","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper class inheritance and method overriding. The use of comments and licensing information is clear. Variable and method names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining the logic within methods, especially for those unfamiliar with the game\u0027s context.","tokens":770,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVg","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/CausticSlime.java","name":"CausticSlime.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/CausticSlime.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"64","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of inheritance and method overriding. The class is concise and focused on its purpose. However, the use of inline initialization blocks could be replaced with a constructor for better clarity. Overall, the code is of high quality and maintainable.","tokens":587,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/FungalCore.java","name":"FungalCore.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/FungalCore.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"57","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. However, the logic within the damage method could be more readable with better variable naming and comments explaining the damage reduction calculation. Overall, the code is maintainable and understandable.","tokens":816,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKnf_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/FungalSpinner.java","name":"FungalSpinner.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/FungalSpinner.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"4.7","bestValue":false},{"metric":"lines","value":"75","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. Variable and method names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining the logic in complex sections, such as the \u0027die\u0027 method. Overall, it is of high quality and readability.","tokens":1171,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBV7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Skeleton.java","name":"Skeleton.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Skeleton.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"5.2","bestValue":false},{"metric":"lines","value":"117","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"75","reasoning":"The code is generally well-structured and follows standard Java conventions. The use of comments is helpful, though the FIXME comment indicates a need for refactoring. Variable and method names are descriptive, but the logic in chooseEnemy() is complex and could be simplified for better readability. Overall, the code is maintainable but could benefit from some refactoring and simplification.","tokens":1803,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Bee.java","name":"Bee.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Bee.java","language":"java","measures":[{"metric":"complexity","value":"51","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"48","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"64","bestValue":false},{"metric":"comment_lines_density","value":"6.5","bestValue":false},{"metric":"lines","value":"207","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear method names and has appropriate comments. The use of constants and encapsulation is good. However, the class is quite large and could benefit from being broken down into smaller, more manageable pieces. Additionally, some methods could use more comments to explain complex logic.","tokens":2013,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/CrystalGuardian.java","name":"CrystalGuardian.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/CrystalGuardian.java","language":"java","measures":[{"metric":"complexity","value":"51","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"46","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"90","bestValue":false},{"metric":"comment_lines_density","value":"3.5","bestValue":false},{"metric":"lines","value":"257","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments that explain the logic. The use of abstract methods and inheritance is appropriate. However, the code could benefit from additional comments for complex logic and better handling of magic numbers. Overall, it is readable and maintainable.","tokens":1688,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBV8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Shaman.java","name":"Shaman.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Shaman.java","language":"java","measures":[{"metric":"complexity","value":"27","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"22","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"51","bestValue":false},{"metric":"comment_lines_density","value":"2.8","bestValue":false},{"metric":"lines","value":"195","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. However, the readability could be slightly improved with more comments explaining the logic within methods, and the use of magic numbers could be replaced with constants for better maintainability.","tokens":1302,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/CrystalWisp.java","name":"CrystalWisp.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/CrystalWisp.java","language":"java","measures":[{"metric":"complexity","value":"25","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"46","bestValue":false},{"metric":"comment_lines_density","value":"0.9","bestValue":false},{"metric":"lines","value":"158","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear and descriptive variable names, and the methods are logically organized. The use of comments is minimal but the code is self-explanatory. The only minor issues are the lack of detailed comments for complex logic and the potential overuse of nested if-else statements, which could be simplified for better readability.","tokens":1853,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Succubus.java","name":"Succubus.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Succubus.java","language":"java","measures":[{"metric":"complexity","value":"33","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"35","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"67","bestValue":false},{"metric":"comment_lines_density","value":"1.4","bestValue":false},{"metric":"lines","value":"200","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overrides, and encapsulation. The class is concise and clear, with meaningful variable names and comments. However, it lacks detailed comments explaining the logic within methods, which could improve readability for future maintainers.","tokens":629,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBV1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Gnoll.java","name":"Gnoll.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Gnoll.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"59","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides and proper use of inheritance. The comments are helpful and the logic is easy to follow. However, the use of magic numbers (e.g., \u0027moving \u003c 3\u0027) could be improved by defining constants. Additionally, the class could benefit from more detailed JavaDoc comments for better documentation.","tokens":1282,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/GreatCrab.java","name":"GreatCrab.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/GreatCrab.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"6.5","bestValue":false},{"metric":"lines","value":"130","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and encapsulation. The comments and variable names are clear, enhancing readability. However, the class could benefit from additional comments explaining the logic in more complex methods like doAttack. Overall, it demonstrates good coding practices and maintainability.","tokens":1240,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DM100.java","name":"DM100.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DM100.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"22","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"36","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"136","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class is quite large and could benefit from further modularization. Additionally, some methods could use more detailed comments to explain their purpose and logic.","tokens":1539,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Statue.java","name":"Statue.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Statue.java","language":"java","measures":[{"metric":"complexity","value":"33","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"15","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"57","bestValue":false},{"metric":"comment_lines_density","value":"0.7","bestValue":false},{"metric":"lines","value":"207","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. The naming conventions are consistent and meaningful. However, the code could benefit from additional comments explaining the logic within methods, especially for complex operations like \u0027generatePrize\u0027. Overall, it is readable and maintainable.","tokens":1173,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBV2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/GoldenMimic.java","name":"GoldenMimic.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/GoldenMimic.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"24","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"29","bestValue":false},{"metric":"comment_lines_density","value":"1.3","bestValue":false},{"metric":"lines","value":"105","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear method names and has appropriate comments explaining specific functionalities. The use of constants and overriding methods enhances readability. However, the code could benefit from more detailed comments in some areas and better handling of magic numbers.","tokens":1453,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/RatKing.java","name":"RatKing.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/RatKing.java","language":"java","measures":[{"metric":"complexity","value":"26","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"27","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"49","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"171","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The use of nested classes for different states (Wandering and Hunting) is appropriate and enhances readability. Variable and method names are descriptive, making the code easy to understand. However, the code could benefit from additional comments explaining the logic behind certain decisions, and some methods could be broken down further to improve readability.","tokens":1428,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/DirectableAlly.java","name":"DirectableAlly.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/DirectableAlly.java","language":"java","measures":[{"metric":"complexity","value":"33","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"25","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"61","bestValue":false},{"metric":"comment_lines_density","value":"2.5","bestValue":false},{"metric":"lines","value":"174","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and separation of concerns. The use of comments and meaningful variable names enhances readability. However, the code could benefit from additional comments explaining complex logic, and some methods could be broken down further to improve clarity.","tokens":2197,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Imp.java","name":"Imp.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Imp.java","language":"java","measures":[{"metric":"complexity","value":"56","bestValue":false},{"metric":"code_smells","value":"15","bestValue":false},{"metric":"cognitive_complexity","value":"42","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"78","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"269","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of nested classes and methods is appropriate, and the code is easy to follow. However, there are some areas where readability could be improved, such as reducing the complexity of the \u0027interact\u0027 method and avoiding deeply nested conditionals.","tokens":4485,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Blacksmith.java","name":"Blacksmith.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Blacksmith.java","language":"java","measures":[{"metric":"complexity","value":"97","bestValue":false},{"metric":"code_smells","value":"52","bestValue":false},{"metric":"cognitive_complexity","value":"117","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"230","bestValue":false},{"metric":"comment_lines_density","value":"4.3","bestValue":false},{"metric":"lines","value":"525","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which could be broken down for better readability.","tokens":2363,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/PrismaticImage.java","name":"PrismaticImage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/PrismaticImage.java","language":"java","measures":[{"metric":"complexity","value":"47","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"38","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"98","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"286","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides, proper use of constants, and encapsulation. The comments and licensing information are clear. However, the class could benefit from additional comments explaining the purpose of certain methods and variables, and there is a minor inconsistency in the use of spacing.","tokens":951,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Sheep.java","name":"Sheep.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Sheep.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"3.0","bestValue":false},{"metric":"lines","value":"104","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for better understanding. The use of nested classes and method overrides is appropriate. However, the code could benefit from further modularization to reduce complexity in some methods. Additionally, some methods are quite long and could be broken down into smaller, more manageable pieces.","tokens":3237,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Ghost.java","name":"Ghost.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Ghost.java","language":"java","measures":[{"metric":"complexity","value":"71","bestValue":false},{"metric":"code_smells","value":"26","bestValue":false},{"metric":"cognitive_complexity","value":"60","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"144","bestValue":false},{"metric":"comment_lines_density","value":"3.2","bestValue":false},{"metric":"lines","value":"402","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of classes, methods, and comments. The use of nested classes and methods is clear, and the logic is easy to follow. However, the code could benefit from additional comments explaining the purpose of certain blocks, and some methods are quite long, which could be broken down for better readability.","tokens":3434,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBU_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Wandmaker.java","name":"Wandmaker.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Wandmaker.java","language":"java","measures":[{"metric":"complexity","value":"80","bestValue":false},{"metric":"code_smells","value":"23","bestValue":false},{"metric":"cognitive_complexity","value":"109","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"175","bestValue":false},{"metric":"comment_lines_density","value":"4.0","bestValue":false},{"metric":"lines","value":"446","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear, and the use of comments and imports is appropriate. The logic within the act method is straightforward and easy to follow. However, the class could benefit from additional comments explaining the purpose of certain actions, and the use of magic strings could be replaced with constants for better maintainability.","tokens":638,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/ImpShopkeeper.java","name":"ImpShopkeeper.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/ImpShopkeeper.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"52","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and clear, with appropriate use of inheritance and encapsulation. However, the class lacks comments explaining the purpose of methods and fields, which could improve readability and maintainability.","tokens":494,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/NPC.java","name":"NPC.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/NPC.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"40","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper class inheritance and method overriding. The use of comments and clear naming conventions enhances readability. However, the class could benefit from additional comments explaining the purpose of each method and the overall class functionality. The use of magic numbers (e.g., Ooze.DURATION) without context could also be improved.","tokens":718,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Acidic.java","name":"Acidic.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Acidic.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"61","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The class and method names are descriptive, and the logic is clear. The use of comments is minimal but the code is self-explanatory. However, the readability could be improved with more comments explaining the purpose of certain methods and variables. Overall, it is a high-quality code with minor areas for improvement.","tokens":1337,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/GnollGuard.java","name":"GnollGuard.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/GnollGuard.java","language":"java","measures":[{"metric":"complexity","value":"28","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"16","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"39","bestValue":false},{"metric":"comment_lines_density","value":"0.9","bestValue":false},{"metric":"lines","value":"153","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper class inheritance, method overriding, and encapsulation. The use of comments and clear method names enhances readability. However, the nested class Wandering could be better documented, and the logic within randomDestination could be simplified for clarity. Overall, the code is maintainable and easy to understand.","tokens":992,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/FetidRat.java","name":"FetidRat.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/FetidRat.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"106","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The class is concise and readable, with clear variable names and comments. However, it could benefit from additional comments explaining the purpose of certain methods and logic, especially for those unfamiliar with the game\u0027s mechanics.","tokens":872,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Bat.java","name":"Bat.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Bat.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"1.9","bestValue":false},{"metric":"lines","value":"91","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides and proper use of properties and immunities. The comments are helpful, and the logic is straightforward. However, there are minor areas for improvement, such as the TODO comment indicating incomplete functionality and the potential for more detailed comments explaining complex logic.","tokens":1239,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/RotHeart.java","name":"RotHeart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/RotHeart.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"40","bestValue":false},{"metric":"comment_lines_density","value":"2.9","bestValue":false},{"metric":"lines","value":"148","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for licensing. The use of nested classes for different states is appropriate. However, the code could benefit from additional comments explaining the logic in some methods, and there are some minor readability issues with long method chains and complex conditionals.","tokens":1652,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVr","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Piranha.java","name":"Piranha.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Piranha.java","language":"java","measures":[{"metric":"complexity","value":"34","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"23","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"63","bestValue":false},{"metric":"comment_lines_density","value":"0.7","bestValue":false},{"metric":"lines","value":"207","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the nested logic in the Hunting class could be simplified for better readability. Overall, the code is maintainable and understandable.","tokens":1515,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DM200.java","name":"DM200.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DM200.java","language":"java","measures":[{"metric":"complexity","value":"29","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"26","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"61","bestValue":false},{"metric":"comment_lines_density","value":"3.8","bestValue":false},{"metric":"lines","value":"184","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear method names and comments to explain complex logic, enhancing readability. The use of nested classes for different behaviors is appropriate. However, the code could benefit from more consistent formatting and possibly breaking down some methods into smaller, more manageable pieces to improve readability further.","tokens":2088,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Golem.java","name":"Golem.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Golem.java","language":"java","measures":[{"metric":"complexity","value":"48","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"44","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"98","bestValue":false},{"metric":"comment_lines_density","value":"2.6","bestValue":false},{"metric":"lines","value":"253","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of encapsulation, clear method names, and logical flow. The use of comments is minimal but the code is self-explanatory. The class adheres to object-oriented principles and handles game logic effectively. However, the readability could be improved with more comments explaining complex logic and better handling of magic numbers.","tokens":2179,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Pylon.java","name":"Pylon.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Pylon.java","language":"java","measures":[{"metric":"complexity","value":"38","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"32","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"91","bestValue":false},{"metric":"comment_lines_density","value":"4.3","bestValue":false},{"metric":"lines","value":"251","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overrides, and encapsulation. The comments and class-level documentation are clear. However, the nested class \u0027Waiting\u0027 could be better documented, and some methods could benefit from additional comments to improve readability.","tokens":1049,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVa","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/RotLasher.java","name":"RotLasher.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/RotLasher.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"30","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"125","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear and descriptive variable names, and the methods are logically organized. The use of comments is minimal but sufficient to understand the purpose of complex sections. However, the code could benefit from additional comments for better readability, and some methods are quite long, which could be broken down into smaller, more manageable pieces.","tokens":2304,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Spinner.java","name":"Spinner.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Spinner.java","language":"java","measures":[{"metric":"complexity","value":"60","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"62","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"102","bestValue":false},{"metric":"comment_lines_density","value":"3.9","bestValue":false},{"metric":"lines","value":"275","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and modularity. The use of comments and descriptive variable names enhances readability. However, the class is quite large and complex, which can make it harder to follow. Some methods are lengthy and could benefit from further decomposition. Overall, the code is of high quality but could be improved with more concise methods and better separation of concerns.","tokens":6124,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/YogDzewa.java","name":"YogDzewa.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/YogDzewa.java","language":"java","measures":[{"metric":"complexity","value":"150","bestValue":false},{"metric":"code_smells","value":"23","bestValue":false},{"metric":"cognitive_complexity","value":"245","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"332","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"693","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses meaningful variable names and includes comments for licensing. The use of overridden methods and proper encapsulation is evident. However, the code could benefit from additional comments explaining complex logic, and some methods are quite lengthy, which can affect readability.","tokens":1619,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVe","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/SpectralNecromancer.java","name":"SpectralNecromancer.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/SpectralNecromancer.java","language":"java","measures":[{"metric":"complexity","value":"30","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"36","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"69","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"168","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for better understanding. The use of nested classes and method overrides is appropriate. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which can affect readability.","tokens":3350,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBV4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Necromancer.java","name":"Necromancer.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Necromancer.java","language":"java","measures":[{"metric":"complexity","value":"91","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"117","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"154","bestValue":false},{"metric":"comment_lines_density","value":"4.8","bestValue":false},{"metric":"lines","value":"410","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and naming conventions are clear, making the code easy to understand. However, there are some minor areas for improvement, such as adding more comments for complex logic and ensuring consistent formatting. Overall, the code is of high quality and readability.","tokens":1001,"sonarData":{"component":{"id":"AYh9pBdxXMB54cnrmw_h","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/TormentedSpirit.java","name":"TormentedSpirit.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/TormentedSpirit.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"5.6","bestValue":false},{"metric":"lines","value":"87","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the code could benefit from additional comments explaining the logic behind certain methods, and the nested if-else structure in the spawnAt method could be simplified for better readability.","tokens":1274,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Wraith.java","name":"Wraith.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Wraith.java","language":"java","measures":[{"metric":"complexity","value":"18","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"15","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"44","bestValue":false},{"metric":"comment_lines_density","value":"1.0","bestValue":false},{"metric":"lines","value":"149","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, clear method names, and logical organization. The use of inner classes and method overrides is appropriate. However, there are some TODO comments indicating incomplete features or potential improvements, which slightly detracts from the overall quality.","tokens":972,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/FungalSentry.java","name":"FungalSentry.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/FungalSentry.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"24","bestValue":false},{"metric":"comment_lines_density","value":"3.9","bestValue":false},{"metric":"lines","value":"123","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for licensing. The use of encapsulation and method overrides is appropriate. However, the class is quite large and could benefit from further modularization. Some methods are lengthy and could be broken down for better readability. Overall, the code is maintainable and understandable.","tokens":2568,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Mimic.java","name":"Mimic.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Mimic.java","language":"java","measures":[{"metric":"complexity","value":"71","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"53","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"129","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"333","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It includes proper comments explaining the logic, especially in the move method. The class and method names are descriptive, and the use of constants and inheritance is appropriate. However, the code could benefit from additional comments and possibly more modularization for better readability and maintainability.","tokens":619,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Senior.java","name":"Senior.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Senior.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"9.1","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, encapsulation, and clear method definitions. The comments and variable names are meaningful, enhancing readability. However, the use of magic numbers and some complex logic without inline comments could be improved for better maintainability.","tokens":1318,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Brute.java","name":"Brute.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Brute.java","language":"java","measures":[{"metric":"complexity","value":"18","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"40","bestValue":false},{"metric":"comment_lines_density","value":"0.9","bestValue":false},{"metric":"lines","value":"160","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, clear method definitions, and logical organization. The use of constants and methods for specific tasks enhances readability. However, the nested logic in the damage method could be simplified for better clarity. Overall, the code is maintainable and understandable.","tokens":971,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Slime.java","name":"Slime.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Slime.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"7.5","bestValue":false},{"metric":"lines","value":"85","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of encapsulation, clear method names, and logical flow. The use of comments and constants enhances readability. However, the class is quite large and complex, which can make it harder to maintain and understand. Breaking it into smaller classes or methods could improve readability and maintainability.","tokens":6972,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DwarfKing.java","name":"DwarfKing.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DwarfKing.java","language":"java","measures":[{"metric":"complexity","value":"182","bestValue":false},{"metric":"code_smells","value":"23","bestValue":false},{"metric":"cognitive_complexity","value":"279","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"390","bestValue":false},{"metric":"comment_lines_density","value":"2.8","bestValue":false},{"metric":"lines","value":"789","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear method names and comments, making it easy to understand. The use of constants and encapsulation is appropriate. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which can affect readability.","tokens":2423,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBV9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/RipperDemon.java","name":"RipperDemon.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/RipperDemon.java","language":"java","measures":[{"metric":"complexity","value":"50","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"79","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"111","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"279","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for better understanding. The use of abstract methods and inheritance is appropriate. However, the code could benefit from further modularization to reduce complexity, and some methods are quite lengthy, which can affect readability.","tokens":4371,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Elemental.java","name":"Elemental.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Elemental.java","language":"java","measures":[{"metric":"complexity","value":"98","bestValue":false},{"metric":"code_smells","value":"14","bestValue":false},{"metric":"cognitive_complexity","value":"105","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"201","bestValue":false},{"metric":"comment_lines_density","value":"1.4","bestValue":false},{"metric":"lines","value":"563","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. Variable and method names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining complex logic, especially in the teleportation logic, to improve maintainability.","tokens":1201,"sonarData":{"component":{"id":"AYh9pBdxXMB54cnrmw_i","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/PhantomPiranha.java","name":"PhantomPiranha.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/PhantomPiranha.java","language":"java","measures":[{"metric":"complexity","value":"24","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"40","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"43","bestValue":false},{"metric":"comment_lines_density","value":"1.2","bestValue":false},{"metric":"lines","value":"120","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for clarity. The use of nested classes for different states is appropriate. However, the code could benefit from more detailed comments explaining complex logic, and some methods are quite long, which could be broken down for better readability.","tokens":2272,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/GnollSapper.java","name":"GnollSapper.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/GnollSapper.java","language":"java","measures":[{"metric":"complexity","value":"39","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"46","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"98","bestValue":false},{"metric":"comment_lines_density","value":"3.0","bestValue":false},{"metric":"lines","value":"264","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of inheritance and method overriding. The use of comments and clear variable names enhances readability. However, the class could benefit from additional comments explaining the logic, especially for the attackProc method. Overall, it is a high-quality code with minor areas for improvement.","tokens":659,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBV5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Albino.java","name":"Albino.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Albino.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"53","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and comments explaining the purpose of the class. The use of meaningful variable names and adherence to Java conventions enhance readability. However, the class could benefit from additional comments within methods to explain complex logic, and the use of constants for magic numbers would improve maintainability.","tokens":1099,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DelayedRockFall.java","name":"DelayedRockFall.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DelayedRockFall.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"30","bestValue":false},{"metric":"comment_lines_density","value":"3.9","bestValue":false},{"metric":"lines","value":"115","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments to explain priority values and other logic is helpful. However, the class is quite large and could benefit from being broken down into smaller, more manageable pieces. Additionally, some methods could use more detailed comments to explain their purpose and functionality.","tokens":2629,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/Actor.java","name":"Actor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/Actor.java","language":"java","measures":[{"metric":"complexity","value":"76","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"79","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"133","bestValue":false},{"metric":"comment_lines_density","value":"8.7","bestValue":false},{"metric":"lines","value":"388","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of enums and switch cases. The use of comments and consistent naming conventions enhances readability. However, the class is quite large and could benefit from further modularization to improve maintainability. Additionally, some methods could use more detailed comments to explain their purpose and logic.","tokens":2999,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTt","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/HeroClass.java","name":"HeroClass.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/HeroClass.java","language":"java","measures":[{"metric":"complexity","value":"54","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"16","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"107","bestValue":false},{"metric":"comment_lines_density","value":"0.4","bestValue":false},{"metric":"lines","value":"315","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The use of enums for HeroSubClass is appropriate and the methods are concise and clear. The comments and licensing information are properly included. However, the code could benefit from additional comments explaining the logic within the desc() method, especially the conditional handling for BATTLEMAGE.","tokens":860,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTr","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/HeroSubClass.java","name":"HeroSubClass.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/HeroSubClass.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"86","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read, with clear class and method definitions. The use of inner static classes for different hero actions is logical and maintains readability. However, the code could benefit from additional comments explaining the purpose of each action class. Overall, it demonstrates good coding practices and organization.","tokens":751,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/HeroAction.java","name":"HeroAction.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/HeroAction.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"92","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and variable names are clear, making the code easy to understand. However, the nested callbacks and complex logic within the activate method could be refactored for better readability and maintainability.","tokens":1568,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/warrior/HeroicLeap.java","name":"HeroicLeap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/warrior/HeroicLeap.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"40","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"51","bestValue":false},{"metric":"comment_lines_density","value":"1.9","bestValue":false},{"metric":"lines","value":"148","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation, meaningful variable names, and appropriate use of comments. The use of external libraries and modular design enhances readability. However, the complexity of the logic within the activate method could be simplified or broken down into smaller methods for better readability and maintainability.","tokens":1725,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/warrior/Shockwave.java","name":"Shockwave.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/warrior/Shockwave.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"36","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"47","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"164","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, encapsulation, and clear method definitions. The comments and variable names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which could be broken down for better readability.","tokens":1718,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/warrior/Endure.java","name":"Endure.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/warrior/Endure.java","language":"java","measures":[{"metric":"complexity","value":"24","bestValue":false},{"metric":"code_smells","value":"18","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"59","bestValue":false},{"metric":"comment_lines_density","value":"0.7","bestValue":false},{"metric":"lines","value":"190","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and comments. The use of abstract methods and interfaces indicates good design principles. However, the code could benefit from more detailed comments explaining the logic within methods and the purpose of certain variables. Additionally, the class could be broken down into smaller, more focused classes to improve readability and maintainability.","tokens":1007,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/ArmorAbility.java","name":"ArmorAbility.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/ArmorAbility.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"2.9","bestValue":false},{"metric":"lines","value":"108","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation, meaningful variable names, and proper use of comments. The logic is easy to follow, and the use of nested classes is appropriate. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which could be broken down further for better readability.","tokens":2650,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/Ratmogrify.java","name":"Ratmogrify.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/Ratmogrify.java","language":"java","measures":[{"metric":"complexity","value":"49","bestValue":false},{"metric":"code_smells","value":"14","bestValue":false},{"metric":"cognitive_complexity","value":"51","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"127","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"322","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and use of comments. The use of static blocks and initialization blocks is appropriate. However, the class is quite large and complex, which can make it harder to read and maintain. Some methods could be broken down further for better readability. The use of nested classes and anonymous classes is handled well but adds to the complexity.","tokens":5874,"sonarData":{"component":{"id":"AYcBWmJUXcjzOtg4n6NV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/duelist/ElementalStrike.java","name":"ElementalStrike.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/duelist/ElementalStrike.java","language":"java","measures":[{"metric":"complexity","value":"125","bestValue":false},{"metric":"code_smells","value":"15","bestValue":false},{"metric":"cognitive_complexity","value":"208","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"257","bestValue":false},{"metric":"comment_lines_density","value":"7.8","bestValue":false},{"metric":"lines","value":"584","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of nested classes for specific functionalities is appropriate. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which can affect readability.","tokens":3127,"sonarData":{"component":{"id":"AYcBWmJUXcjzOtg4n6NW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/duelist/Challenge.java","name":"Challenge.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/duelist/Challenge.java","language":"java","measures":[{"metric":"complexity","value":"74","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"91","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"139","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"348","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical flow. The use of comments and documentation is minimal but the code is still understandable. The nested classes and methods are well-organized. However, the code could benefit from additional comments for better readability and maintainability.","tokens":2172,"sonarData":{"component":{"id":"AYcBWmJUXcjzOtg4n6NU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/duelist/Feint.java","name":"Feint.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/duelist/Feint.java","language":"java","measures":[{"metric":"complexity","value":"39","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"28","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"77","bestValue":false},{"metric":"comment_lines_density","value":"3.0","bestValue":false},{"metric":"lines","value":"257","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, encapsulation, and clear method definitions. The comments and naming conventions are clear, aiding readability. However, the code could benefit from additional inline comments explaining complex logic, and some methods are quite long, which could be broken down for better readability.","tokens":2014,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/rogue/DeathMark.java","name":"DeathMark.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/rogue/DeathMark.java","language":"java","measures":[{"metric":"complexity","value":"38","bestValue":false},{"metric":"code_smells","value":"11","bestValue":false},{"metric":"cognitive_complexity","value":"35","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"71","bestValue":false},{"metric":"comment_lines_density","value":"0.6","bestValue":false},{"metric":"lines","value":"225","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and variable names are clear, enhancing readability. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which could be broken down for better readability.","tokens":2136,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTa","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/rogue/SmokeBomb.java","name":"SmokeBomb.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/rogue/SmokeBomb.java","language":"java","measures":[{"metric":"complexity","value":"30","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"45","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"75","bestValue":false},{"metric":"comment_lines_density","value":"2.4","bestValue":false},{"metric":"lines","value":"234","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear comments, meaningful variable names, and proper use of inheritance and encapsulation. The use of nested classes is appropriate, and the logic is easy to follow. However, the code could benefit from additional comments explaining complex logic and some methods could be broken down further for better readability.","tokens":3401,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/rogue/ShadowClone.java","name":"ShadowClone.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/rogue/ShadowClone.java","language":"java","measures":[{"metric":"complexity","value":"81","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"58","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"151","bestValue":false},{"metric":"comment_lines_density","value":"2.4","bestValue":false},{"metric":"lines","value":"433","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of encapsulation, clear method names, and comments. The logic is complex but well-organized, making it relatively easy to follow. However, the use of nested callbacks and some long methods could be refactored for better readability and maintainability. Overall, it demonstrates a high level of quality and readability.","tokens":2071,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/mage/WildMagic.java","name":"WildMagic.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/mage/WildMagic.java","language":"java","measures":[{"metric":"complexity","value":"37","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"51","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"84","bestValue":false},{"metric":"comment_lines_density","value":"0.6","bestValue":false},{"metric":"lines","value":"234","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using descriptive variable names and comments to explain complex logic. The use of static blocks for initializing HashMaps is efficient. However, the class is quite long and complex, which can make it harder to read and maintain. Breaking down some methods into smaller, more focused methods could improve readability.","tokens":5158,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTj","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/mage/ElementalBlast.java","name":"ElementalBlast.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/mage/ElementalBlast.java","language":"java","measures":[{"metric":"complexity","value":"84","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"198","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"196","bestValue":false},{"metric":"comment_lines_density","value":"8.1","bestValue":false},{"metric":"lines","value":"465","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and variable names are clear, enhancing readability. However, the code is quite complex with nested conditions and multiple responsibilities within methods, which could be refactored for better maintainability. Overall, it demonstrates a high level of quality and readability.","tokens":2520,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/mage/WarpBeacon.java","name":"WarpBeacon.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/mage/WarpBeacon.java","language":"java","measures":[{"metric":"complexity","value":"45","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"99","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"104","bestValue":false},{"metric":"comment_lines_density","value":"0.5","bestValue":false},{"metric":"lines","value":"278","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of encapsulation, clear method names, and comments. The logic is clear and the use of helper methods like findChar improves readability. However, the nested if-else statements and loops could be refactored for better readability. Additionally, more inline comments explaining complex logic would be beneficial.","tokens":1647,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTg","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/huntress/SpectralBlades.java","name":"SpectralBlades.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/huntress/SpectralBlades.java","language":"java","measures":[{"metric":"complexity","value":"29","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"44","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"67","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"168","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, encapsulation, and clear method definitions. The comments and licensing information are clear. However, the class and method names could be more consistent in their capitalization (e.g., \u0027naturesPowerTracker\u0027 should be \u0027NaturesPowerTracker\u0027). Overall, the code is readable and maintainable.","tokens":1010,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTe","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/huntress/NaturesPower.java","name":"NaturesPower.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/huntress/NaturesPower.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"99","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear comments, appropriate use of inheritance, and encapsulation. The naming conventions are consistent and meaningful. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which could be broken down for better readability.","tokens":2620,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/huntress/SpiritHawk.java","name":"SpiritHawk.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/abilities/huntress/SpiritHawk.java","language":"java","measures":[{"metric":"complexity","value":"42","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"27","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"112","bestValue":false},{"metric":"comment_lines_density","value":"0.4","bestValue":false},{"metric":"lines","value":"320","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method naming. The use of comments is appropriate and helps in understanding the purpose of methods and variables. However, the code could benefit from more consistent formatting and possibly breaking down some methods into smaller, more manageable pieces to improve readability further.","tokens":3215,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/Belongings.java","name":"Belongings.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/Belongings.java","language":"java","measures":[{"metric":"complexity","value":"116","bestValue":false},{"metric":"code_smells","value":"30","bestValue":false},{"metric":"cognitive_complexity","value":"113","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"178","bestValue":false},{"metric":"comment_lines_density","value":"3.0","bestValue":false},{"metric":"lines","value":"438","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-documented with clear comments explaining the purpose and functionality of each method. The variable and method names are descriptive, enhancing readability. Exception handling is present, and the logic is straightforward. However, the code could benefit from more modularization to improve maintainability and reduce complexity in some methods.","tokens":1537,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/utils/DungeonSeed.java","name":"DungeonSeed.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/utils/DungeonSeed.java","language":"java","measures":[{"metric":"complexity","value":"25","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"25","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"50","bestValue":false},{"metric":"comment_lines_density","value":"25.2","bestValue":false},{"metric":"lines","value":"151","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants for repeated strings and a signal mechanism for updates. The methods are concise and self-explanatory. However, the class lacks comments explaining the purpose of each method and the overall class functionality, which could improve readability for new developers.","tokens":714,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/utils/GLog.java","name":"GLog.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/utils/GLog.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using enums and caching. The comments are helpful and provide context. However, the hardcoding of dates for Lunar New Year and the lengthy switch-case statements reduce readability. The TODO comments indicate areas for improvement. Overall, the code is clear but could benefit from refactoring to improve maintainability.","tokens":4140,"sonarData":{"component":{"id":"AY2Di9ryW1YJaXpvKnge","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/utils/Holiday.java","name":"Holiday.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/utils/Holiday.java","language":"java","measures":[{"metric":"complexity","value":"119","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"44","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"220","bestValue":false},{"metric":"comment_lines_density","value":"37.4","bestValue":false},{"metric":"lines","value":"281","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of enums, and detailed comments. The use of design patterns like Singleton (INSTANCE) and the separation of concerns are evident. However, the class is quite large and could benefit from further modularization. Some methods are lengthy and could be broken down for better readability.","tokens":4763,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZ-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Rankings.java","name":"Rankings.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Rankings.java","language":"java","measures":[{"metric":"complexity","value":"77","bestValue":false},{"metric":"code_smells","value":"95","bestValue":false},{"metric":"cognitive_complexity","value":"112","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"273","bestValue":false},{"metric":"comment_lines_density","value":"4.2","bestValue":false},{"metric":"lines","value":"582","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper indentation, meaningful variable names, and comments explaining the logic. The use of constants and static blocks is appropriate. However, the complexity of the `scanOctant` method could be reduced for better readability. Exception handling is present but could be more specific. Overall, the code is readable and maintainable.","tokens":1984,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBY3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/mechanics/ShadowCaster.java","name":"ShadowCaster.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/mechanics/ShadowCaster.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"48","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"58","bestValue":false},{"metric":"comment_lines_density","value":"22.1","bestValue":false},{"metric":"lines","value":"167","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using meaningful variable names and comments to explain complex logic. The use of collections like ArrayList and HashSet is appropriate. However, the code could benefit from breaking down the constructor into smaller methods to improve readability and maintainability. Additionally, some comments could be more concise.","tokens":1477,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBY4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/mechanics/ConeAOE.java","name":"ConeAOE.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/mechanics/ConeAOE.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"39","bestValue":false},{"metric":"comment_lines_density","value":"16.7","bestValue":false},{"metric":"lines","value":"117","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear variable naming and comments explaining the logic. The use of constants for collision parameters improves readability. However, the build method is quite complex and could benefit from further decomposition into smaller methods to enhance readability and maintainability. Overall, the code is of high quality but could be slightly improved for better clarity.","tokens":1570,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBY5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/mechanics/Ballistica.java","name":"Ballistica.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/mechanics/Ballistica.java","language":"java","measures":[{"metric":"complexity","value":"32","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"30","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"59","bestValue":false},{"metric":"comment_lines_density","value":"10.5","bestValue":false},{"metric":"lines","value":"173","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. The use of enums for type safety and the switch statement for handling different cases is appropriate. The naming conventions are clear and consistent. However, the code could benefit from additional comments explaining the purpose of each case in the switch statement. Overall, it demonstrates good practices but lacks some documentation.","tokens":1012,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBai","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Chrome.java","name":"Chrome.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Chrome.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"83","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical flow. The comments are helpful and provide context. However, the nested switch-case and if-else statements could be refactored for better readability. Additionally, some methods are quite long and could be broken down into smaller, more manageable pieces.","tokens":2112,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Bones.java","name":"Bones.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Bones.java","language":"java","measures":[{"metric":"complexity","value":"47","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"102","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"109","bestValue":false},{"metric":"comment_lines_density","value":"7.2","bestValue":false},{"metric":"lines","value":"273","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of packages, imports, and class definitions. The constructor is clear and concise, and the use of descriptive variable names enhances readability. However, the code could benefit from additional comments explaining the purpose of certain methods and variables, especially for those unfamiliar with the project.","tokens":745,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoSubclass.java","name":"WndInfoSubclass.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoSubclass.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"53","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of constants for dimensions and margins enhances readability. The class and method names are descriptive, and the logic is straightforward. However, the code could benefit from additional comments explaining the purpose of certain blocks, especially for those unfamiliar with the Pixel Dungeon framework.","tokens":1087,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZa","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndStory.java","name":"WndStory.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndStory.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"15","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"38","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"114","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper naming conventions and modular design. The use of comments and licensing information is clear. However, the class could benefit from additional comments explaining the logic within the constructor for better readability. The use of magic numbers (e.g., 3, 4, 5) could be replaced with named constants for clarity.","tokens":779,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoArmorAbility.java","name":"WndInfoArmorAbility.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoArmorAbility.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"54","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear variable naming, proper use of constants, and modular design. The use of comments and the overall readability are good. However, the code could benefit from more detailed comments explaining the purpose of each method and some of the logic, especially for those unfamiliar with the context. Additionally, the use of magic numbers could be reduced by defining more constants.","tokens":1079,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndChallenges.java","name":"WndChallenges.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndChallenges.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"114","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured, concise, and follows standard Java conventions. The class is small and focused, making it easy to read and understand. The use of meaningful names and proper formatting enhances readability. However, the class lacks comments explaining the purpose of the constructor parameters, which could be helpful for future maintenance.","tokens":496,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBY8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndError.java","name":"WndError.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndError.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"1","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"34","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class is quite large and could benefit from further modularization. Additionally, the use of magic numbers for layout dimensions could be replaced with constants or configuration values for better maintainability.","tokens":1476,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndResurrect.java","name":"WndResurrect.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndResurrect.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"46","bestValue":false},{"metric":"comment_lines_density","value":"0.9","bestValue":false},{"metric":"lines","value":"162","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear naming conventions and proper use of constants. The logic is straightforward and easy to follow. However, there is a minor issue with the hardcoded values for layout adjustments, which could be improved by using more dynamic calculations or constants. Overall, the readability and quality are high.","tokens":778,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndTitledMessage.java","name":"WndTitledMessage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndTitledMessage.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"70","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear naming conventions and proper use of access modifiers. The comments are helpful, and the logic is straightforward. However, the readability could be slightly improved by adding more comments explaining the purpose of certain blocks of code, especially the update method. Overall, it is a high-quality code with minor areas for improvement.","tokens":842,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndHardNotification.java","name":"WndHardNotification.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndHardNotification.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"22","bestValue":false},{"metric":"comment_lines_density","value":"4.1","bestValue":false},{"metric":"lines","value":"85","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and appropriate comments. The use of constants for dimensions and the separation of UI components into distinct sections enhance readability. However, the code could benefit from additional comments explaining the logic, especially within the loop, and the use of magic numbers should be minimized.","tokens":1471,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndDailies.java","name":"WndDailies.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndDailies.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"60","bestValue":false},{"metric":"comment_lines_density","value":"1.0","bestValue":false},{"metric":"lines","value":"148","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear class and method definitions, proper use of access modifiers, and meaningful variable names. The use of comments and consistent formatting enhances readability. However, the code could benefit from additional comments explaining complex logic and a few methods could be refactored for better clarity and maintainability.","tokens":2756,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZL","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndHero.java","name":"WndHero.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndHero.java","language":"java","measures":[{"metric":"complexity","value":"41","bestValue":false},{"metric":"code_smells","value":"19","bestValue":false},{"metric":"cognitive_complexity","value":"40","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"136","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"341","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and separation of concerns. The use of constants and clear method names enhances readability. However, the class could benefit from additional comments explaining the purpose of some methods and logic, especially for those unfamiliar with the codebase. Overall, it is clean and maintainable.","tokens":1058,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoItem.java","name":"WndInfoItem.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoItem.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"38","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"127","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the code could benefit from additional comments explaining the purpose of certain methods and logic, especially for complex operations. Overall, it is clean and maintainable.","tokens":1621,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndEnergizeItem.java","name":"WndEnergizeItem.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndEnergizeItem.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"13","bestValue":false},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"60","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"193","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and consistent indentation. The use of comments and meaningful variable names enhances readability. However, the code could benefit from additional comments explaining the logic in more complex sections, and some magic numbers could be replaced with named constants for better clarity.","tokens":1916,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndGameInProgress.java","name":"WndGameInProgress.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndGameInProgress.java","language":"java","measures":[{"metric":"complexity","value":"19","bestValue":false},{"metric":"code_smells","value":"13","bestValue":false},{"metric":"cognitive_complexity","value":"20","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"79","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"184","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical organization. The use of inner classes for different tabs enhances readability. However, the code is quite lengthy and could benefit from further modularization. Additionally, some comments explaining complex logic would improve readability.","tokens":4527,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndRanking.java","name":"WndRanking.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndRanking.java","language":"java","measures":[{"metric":"complexity","value":"77","bestValue":false},{"metric":"code_smells","value":"19","bestValue":false},{"metric":"cognitive_complexity","value":"75","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"244","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"583","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is concise and well-structured, with clear class and method definitions. The use of comments and licensing information is appropriate. However, the class lacks detailed comments explaining the purpose and functionality of the constructor and its parameters, which could improve readability and maintainability.","tokens":494,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBY_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndQuest.java","name":"WndQuest.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndQuest.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"1","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"33","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper indentation, meaningful variable names, and clear separation of concerns. The use of comments and licensing information is also commendable. However, the code could benefit from additional comments explaining the logic in more detail, especially within loops and conditionals. Overall, it is readable and maintainable.","tokens":1519,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBY-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoCell.java","name":"WndInfoCell.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoCell.java","language":"java","measures":[{"metric":"complexity","value":"36","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"48","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"71","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"162","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and consistent formatting. The use of comments and meaningful variable names enhances readability. However, the class could benefit from further modularization to reduce its length and improve maintainability. Additionally, some error handling could be more robust.","tokens":1306,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBY7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndGame.java","name":"WndGame.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndGame.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"19","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"39","bestValue":false},{"metric":"comment_lines_density","value":"4.3","bestValue":false},{"metric":"lines","value":"132","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments. The use of meaningful variable names and the logical flow of the layoutBody method enhance readability. However, the nested loops and conditionals could be simplified for better readability. Overall, the code is of high quality but could benefit from minor refactoring to improve clarity.","tokens":1479,"sonarData":{"component":{"id":"AYh9pBdyXMB54cnrmw_l","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndOptionsCondensed.java","name":"WndOptionsCondensed.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndOptionsCondensed.java","language":"java","measures":[{"metric":"complexity","value":"26","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"57","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"74","bestValue":false},{"metric":"comment_lines_density","value":"6.0","bestValue":false},{"metric":"lines","value":"164","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured, with clear and concise comments, appropriate use of constants, and good readability. The class and method names are descriptive, and the logic is straightforward. However, it could benefit from additional comments explaining the purpose of the class and methods for better maintainability.","tokens":609,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndMessage.java","name":"WndMessage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndMessage.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"48","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper naming conventions and modular methods. The use of constants and localization is commendable. However, the code could benefit from additional comments for better readability, especially for complex logic. The conditional blocks are clear but could be refactored for better maintainability.","tokens":1439,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndScoreBreakdown.java","name":"WndScoreBreakdown.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndScoreBreakdown.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"46","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"123","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper naming conventions, use of constants, and clear separation of concerns. The comments and licensing information are clear. However, the code could benefit from additional comments explaining the logic within the methods, especially for those unfamiliar with the context of the game. Overall, it is readable and maintainable.","tokens":991,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndCombo.java","name":"WndCombo.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndCombo.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"29","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"90","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of access modifiers. The use of comments and licensing information is also commendable. However, the readability could be slightly improved by adding more inline comments to explain the logic, especially within the loop and the onClick method. Overall, the code is clean and maintainable.","tokens":822,"sonarData":{"component":{"id":"AYQExSm9p2C0gqvbizah","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndDocument.java","name":"WndDocument.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndDocument.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"76","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical flow. The use of final for parameters and constants is commendable. However, the code could benefit from more detailed comments explaining the purpose of each block, and some variable names could be more descriptive. Overall, it is readable and maintainable.","tokens":1358,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndChooseAbility.java","name":"WndChooseAbility.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndChooseAbility.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"16","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"39","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"126","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper indentation, meaningful variable names, and clear separation of concerns. The use of constants for margins and widths enhances readability. However, the code could benefit from additional comments explaining the purpose of certain blocks, especially for those unfamiliar with the Pixel Dungeon framework. Overall, it is clean and maintainable.","tokens":948,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBY9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndBadge.java","name":"WndBadge.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndBadge.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"35","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"84","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear naming conventions and proper use of access modifiers. The use of constants for dimensions and margins enhances readability. The logic is encapsulated within methods, and the use of inner classes is appropriate. However, the code could benefit from additional comments explaining the purpose of certain blocks and methods, especially for those unfamiliar with the project.","tokens":1036,"sonarData":{"component":{"id":"AYcBWmJVXcjzOtg4n6Na","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndMonkAbilities.java","name":"WndMonkAbilities.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndMonkAbilities.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"29","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"99","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses meaningful variable names and includes comments for licensing. The class is cohesive, and methods are concise. However, there are minor readability issues such as inconsistent spacing and lack of comments explaining the purpose of some methods and variables. Overall, it is a high-quality code but could benefit from slight improvements in documentation and formatting.","tokens":1181,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/IconTitle.java","name":"IconTitle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/IconTitle.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"42","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"136","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear variable naming, consistent formatting, and appropriate use of comments. The use of nested classes for UI components is logical and enhances readability. However, the code is quite lengthy and could benefit from further modularization to improve maintainability. Additionally, some methods are quite long and could be broken down into smaller, more manageable pieces.","tokens":5473,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndKeyBindings.java","name":"WndKeyBindings.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndKeyBindings.java","language":"java","measures":[{"metric":"complexity","value":"99","bestValue":false},{"metric":"code_smells","value":"27","bestValue":false},{"metric":"cognitive_complexity","value":"157","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"298","bestValue":false},{"metric":"comment_lines_density","value":"2.5","bestValue":false},{"metric":"lines","value":"556","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method definitions, and meaningful variable names. The use of comments and logical flow enhances readability. However, the code could benefit from additional comments explaining complex logic, and some methods could be refactored for better clarity and maintainability.","tokens":1650,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndQuickBag.java","name":"WndQuickBag.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndQuickBag.java","language":"java","measures":[{"metric":"complexity","value":"34","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"36","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"73","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"182","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear naming conventions and modular design. The use of comments and consistent formatting enhances readability. However, the switch-case block could be refactored to reduce redundancy, and some methods could benefit from additional comments to explain their purpose. Overall, the code is of high quality and easy to understand.","tokens":1615,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndSadGhost.java","name":"WndSadGhost.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndSadGhost.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"58","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"160","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and consistent formatting enhances readability. However, the code could benefit from additional comments explaining the purpose of certain methods and logic, especially for those unfamiliar with the context of the game. Overall, it is of high quality and easy to understand.","tokens":994,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndImp.java","name":"WndImp.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndImp.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"88","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for licensing. The logic is straightforward and easy to follow. However, it could benefit from additional comments explaining the purpose of certain methods and blocks of code. The use of nested classes is appropriate but could be simplified for better readability.","tokens":1541,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndWandmaker.java","name":"WndWandmaker.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndWandmaker.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"57","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"163","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear naming conventions, proper use of access modifiers, and logical organization. The use of comments and licensing information is also appropriate. However, the readability could be slightly improved by adding more inline comments to explain the purpose of certain blocks of code, especially for complex logic. Overall, it is a high-quality and readable piece of code.","tokens":971,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoTalent.java","name":"WndInfoTalent.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoTalent.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"92","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear, and the use of constants for layout parameters improves readability. However, the code could benefit from additional comments explaining the purpose of each section, especially for those unfamiliar with the Pixel Dungeon project. Overall, it is clean and easy to understand.","tokens":713,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoBuff.java","name":"WndInfoBuff.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoBuff.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"58","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of packages and imports. The class and method names are descriptive, and the logic is straightforward. However, the class could benefit from additional comments explaining the purpose of the methods and parameters for better maintainability.","tokens":566,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoTrap.java","name":"WndInfoTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoTrap.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"1","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"40","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear naming conventions and proper use of access modifiers. The use of comments and spacing enhances readability. However, the nested anonymous classes and lambda expressions could be simplified for better readability. Overall, the code is maintainable and understandable.","tokens":1218,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZm","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndChooseSubclass.java","name":"WndChooseSubclass.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndChooseSubclass.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"111","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses meaningful variable names and has clear method definitions. The use of constants for layout dimensions improves readability. However, the code could benefit from additional comments explaining the purpose of some methods and logic, especially for those unfamiliar with the Pixel Dungeon project. Overall, it is clean and maintainable.","tokens":1219,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndOptions.java","name":"WndOptions.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndOptions.java","language":"java","measures":[{"metric":"complexity","value":"19","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"48","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"139","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of classes, and encapsulation. The use of comments and meaningful variable names enhances readability. However, the code is quite lengthy and could benefit from further modularization to improve maintainability. Additionally, some methods are quite long and could be broken down into smaller, more manageable pieces.","tokens":4624,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndBlacksmith.java","name":"WndBlacksmith.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndBlacksmith.java","language":"java","measures":[{"metric":"complexity","value":"81","bestValue":false},{"metric":"code_smells","value":"29","bestValue":false},{"metric":"cognitive_complexity","value":"65","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"210","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"544","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical flow. The comments and licensing information are clear. However, the layoutButtons method is quite complex and could benefit from further refactoring to improve readability and maintainability. Overall, the code is readable and of high quality, but there is room for improvement in simplifying complex methods.","tokens":1512,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZe","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndUseItem.java","name":"WndUseItem.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndUseItem.java","language":"java","measures":[{"metric":"complexity","value":"32","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"75","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"76","bestValue":false},{"metric":"comment_lines_density","value":"4.3","bestValue":false},{"metric":"lines","value":"168","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The use of inner classes for encapsulation is appropriate, and the layout logic is clear. Variable names are descriptive, and the code is easy to follow. However, there are some minor areas for improvement, such as adding more comments for clarity and possibly breaking down the layout method for better readability.","tokens":972,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoMob.java","name":"WndInfoMob.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoMob.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"94","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper indentation, meaningful variable names, and clear logic flow. The use of constants for dimensions enhances readability. However, the class lacks comments explaining the purpose of key sections, which could improve understandability for new developers. Overall, it is clean and maintainable.","tokens":700,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndList.java","name":"WndList.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndList.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"63","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear class and method definitions, proper use of access modifiers, and meaningful variable names. The use of comments and documentation is also commendable. However, the code could benefit from further modularization to improve readability and maintainability, especially in the longer methods. Additionally, some parts of the code could be simplified to enhance clarity.","tokens":5414,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZj","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndJournal.java","name":"WndJournal.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndJournal.java","language":"java","measures":[{"metric":"complexity","value":"115","bestValue":false},{"metric":"code_smells","value":"36","bestValue":false},{"metric":"cognitive_complexity","value":"152","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"314","bestValue":false},{"metric":"comment_lines_density","value":"0.9","bestValue":false},{"metric":"lines","value":"656","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments is appropriate and helps in understanding the logic. However, the class is quite long and could benefit from breaking down into smaller methods or classes to improve readability. Additionally, some inline comments explaining complex logic would be helpful.","tokens":1881,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndTextInput.java","name":"WndTextInput.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndTextInput.java","language":"java","measures":[{"metric":"complexity","value":"28","bestValue":false},{"metric":"code_smells","value":"11","bestValue":false},{"metric":"cognitive_complexity","value":"20","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"84","bestValue":false},{"metric":"comment_lines_density","value":"4.8","bestValue":false},{"metric":"lines","value":"225","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and has detailed comments. The use of nested classes for different tabs is appropriate and enhances readability. However, the code could benefit from further modularization to reduce the size of the main class and improve maintainability. Additionally, some methods are quite long and could be broken down into smaller, more manageable pieces.","tokens":3318,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZg","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndHeroInfo.java","name":"WndHeroInfo.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndHeroInfo.java","language":"java","measures":[{"metric":"complexity","value":"37","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"153","bestValue":false},{"metric":"comment_lines_density","value":"0.3","bestValue":false},{"metric":"lines","value":"390","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and consistent formatting enhances readability. However, the code could benefit from further modularization to reduce complexity in some methods, and the use of magic numbers (e.g., 1, 6, 18) should be avoided by defining them as constants.","tokens":2341,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndTradeItem.java","name":"WndTradeItem.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndTradeItem.java","language":"java","measures":[{"metric":"complexity","value":"38","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"65","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"114","bestValue":false},{"metric":"comment_lines_density","value":"2.4","bestValue":false},{"metric":"lines","value":"283","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear naming conventions and proper use of access modifiers. The comments and license information are comprehensive. However, the code could benefit from additional comments explaining the purpose of certain methods and logic, especially for those unfamiliar with the project. Overall, it is readable and maintainable.","tokens":1074,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndSupportPrompt.java","name":"WndSupportPrompt.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndSupportPrompt.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"31","bestValue":false},{"metric":"comment_lines_density","value":"3.2","bestValue":false},{"metric":"lines","value":"97","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and licensing information is appropriate. However, the class is relatively simple and does not demonstrate complex logic or error handling, which limits the ability to fully assess the quality.","tokens":539,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoPlant.java","name":"WndInfoPlant.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndInfoPlant.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"1","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"38","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for licensing. The use of inner classes for different types of tabs is appropriate. However, the code could benefit from additional comments explaining the logic, especially in more complex methods like resize and layout. The use of magic numbers (e.g., 25 for tab height) could be replaced with constants for better readability.","tokens":2052,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndTabbed.java","name":"WndTabbed.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndTabbed.java","language":"java","measures":[{"metric":"complexity","value":"41","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"27","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"98","bestValue":false},{"metric":"comment_lines_density","value":"1.9","bestValue":false},{"metric":"lines","value":"292","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as exception handling and modular design. The use of comments and clear method names enhances readability. However, the class could benefit from more detailed comments explaining the purpose of each method and the overall functionality. Additionally, the use of magic strings like \u0027journal.dat\u0027 could be replaced with constants for better maintainability.","tokens":702,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Journal.java","name":"Journal.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Journal.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"2.4","bestValue":false},{"metric":"lines","value":"82","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using enums and collections effectively. The use of static blocks for initialization is clear, and the methods are concise and purposeful. However, there are some minor readability issues, such as inconsistent spacing and lack of comments explaining the logic in certain parts. Overall, the code is maintainable and understandable.","tokens":1691,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Catalog.java","name":"Catalog.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Catalog.java","language":"java","measures":[{"metric":"complexity","value":"40","bestValue":false},{"metric":"code_smells","value":"22","bestValue":false},{"metric":"cognitive_complexity","value":"60","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"92","bestValue":false},{"metric":"comment_lines_density","value":"2.8","bestValue":false},{"metric":"lines","value":"197","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments where necessary. The use of enums and abstract classes is appropriate. However, there are some areas for improvement, such as the lack of detailed comments for some methods and the potential for optimizing the handling of records. Overall, the code is readable and maintainable.","tokens":1793,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBY0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Notes.java","name":"Notes.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Notes.java","language":"java","measures":[{"metric":"complexity","value":"43","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"66","bestValue":false},{"metric":"comment_lines_density","value":"0.5","bestValue":false},{"metric":"lines","value":"267","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using enums, constants, and encapsulation. The use of meaningful variable names and comments enhances readability. However, the class is quite large and could benefit from further modularization. Some methods are repetitive and could be refactored to reduce redundancy. Overall, the code is clean and maintainable but has room for improvement in terms of organization and refactoring.","tokens":3554,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBY1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Document.java","name":"Document.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Document.java","language":"java","measures":[{"metric":"complexity","value":"123","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"101","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"155","bestValue":false},{"metric":"comment_lines_density","value":"2.1","bestValue":false},{"metric":"lines","value":"355","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class could benefit from more detailed JavaDoc comments for methods and a few more inline comments to explain complex logic. The use of magic numbers and some long method chains slightly reduce readability.","tokens":1305,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/CustomTilemap.java","name":"CustomTilemap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/CustomTilemap.java","language":"java","measures":[{"metric":"complexity","value":"18","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"39","bestValue":false},{"metric":"comment_lines_density","value":"5.9","bestValue":false},{"metric":"lines","value":"144","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of inheritance. The comments and licensing information are comprehensive. However, the code could benefit from additional inline comments explaining the logic within the getTileVisual method, especially the conditions and return values.","tokens":632,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYt","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/RaisedTerrainTilemap.java","name":"RaisedTerrainTilemap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/RaisedTerrainTilemap.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"56","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments and licensing information are clear. Variable and method names are descriptive, enhancing readability. However, the logic within the getTileVisual method could be simplified for better readability, and the use of magic numbers could be replaced with named constants.","tokens":742,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYr","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/GridTileMap.java","name":"GridTileMap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/GridTileMap.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"65","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class could benefit from additional comments explaining the logic within methods, especially for complex conditions. The use of magic numbers could be replaced with named constants for better clarity.","tokens":1189,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/TerrainFeaturesTilemap.java","name":"TerrainFeaturesTilemap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/TerrainFeaturesTilemap.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"24","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"42","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"112","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and descriptive. However, the method getTileVisual is quite long and could benefit from further refactoring to improve readability and maintainability. Additionally, the use of magic numbers and some complex conditional logic could be simplified.","tokens":1582,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/DungeonWallsTilemap.java","name":"DungeonWallsTilemap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/DungeonWallsTilemap.java","language":"java","measures":[{"metric":"complexity","value":"49","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"61","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"47","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"123","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants, comments, and clear method names. The use of SparseArray and HashSet for efficient lookups is commendable. However, the code is quite lengthy and complex, which might make it harder to maintain. Some methods could benefit from additional comments for clarity. Overall, the readability and quality are high, but there\u0027s room for minor improvements.","tokens":6831,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/DungeonTileSheet.java","name":"DungeonTileSheet.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/DungeonTileSheet.java","language":"java","measures":[{"metric":"complexity","value":"57","bestValue":false},{"metric":"code_smells","value":"20","bestValue":false},{"metric":"cognitive_complexity","value":"52","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"192","bestValue":false},{"metric":"comment_lines_density","value":"11.3","bestValue":false},{"metric":"lines","value":"508","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants, synchronized methods, and clear comments. The logic is complex but well-documented, making it easier to understand. However, the code could benefit from further modularization to improve readability and maintainability. Some comments are overly detailed, which might clutter the code.","tokens":2334,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/WallBlockingTilemap.java","name":"WallBlockingTilemap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/WallBlockingTilemap.java","language":"java","measures":[{"metric":"complexity","value":"81","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"96","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"57","bestValue":false},{"metric":"comment_lines_density","value":"15.7","bestValue":false},{"metric":"lines","value":"239","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments explaining complex logic. The use of synchronized methods ensures thread safety. However, the code could benefit from more detailed comments in some areas and possibly breaking down larger methods into smaller, more manageable ones for better readability.","tokens":1492,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/DungeonTilemap.java","name":"DungeonTilemap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/DungeonTilemap.java","language":"java","measures":[{"metric":"complexity","value":"23","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"38","bestValue":false},{"metric":"comment_lines_density","value":"7.6","bestValue":false},{"metric":"lines","value":"156","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses meaningful variable names and has clear method responsibilities. However, the nested if-else statements in the getTileVisual method could be refactored for better readability. Additionally, comments explaining the logic in complex sections would improve understandability.","tokens":1244,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/DungeonTerrainTilemap.java","name":"DungeonTerrainTilemap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/DungeonTerrainTilemap.java","language":"java","measures":[{"metric":"complexity","value":"23","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"29","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"37","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"115","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method naming. The comments are helpful and provide context. However, there are some minor issues like inconsistent use of Boolean vs boolean and some methods could benefit from additional comments for clarity. Overall, the code is readable and maintainable.","tokens":1321,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBag","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/QuickSlot.java","name":"QuickSlot.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/QuickSlot.java","language":"java","measures":[{"metric":"complexity","value":"33","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"28","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"46","bestValue":false},{"metric":"comment_lines_density","value":"8.5","bestValue":false},{"metric":"lines","value":"160","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and encapsulation. The class and method names are descriptive, and the logic is clear. However, there are some minor areas for improvement, such as adding more comments for better readability and possibly breaking down the activate method for better clarity. Overall, the code is of high quality and easy to understand.","tokens":914,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Rotberry.java","name":"Rotberry.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Rotberry.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"85","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, encapsulation, and clear method definitions. The comments and variable names are descriptive, enhancing readability. However, the nested class structure and some complex logic within methods could be simplified for better clarity. Overall, it demonstrates a high level of quality and readability.","tokens":1459,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Sungrass.java","name":"Sungrass.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Sungrass.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"21","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"48","bestValue":false},{"metric":"comment_lines_density","value":"0.8","bestValue":false},{"metric":"lines","value":"172","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical organization. The use of comments and licensing information is also commendable. However, the code could benefit from additional inline comments for complex logic and better handling of magic numbers. Overall, it is readable and maintainable.","tokens":1998,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Plant.java","name":"Plant.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Plant.java","language":"java","measures":[{"metric":"complexity","value":"44","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"32","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"66","bestValue":false},{"metric":"comment_lines_density","value":"0.6","bestValue":false},{"metric":"lines","value":"246","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and proper indentation enhances readability. However, the nested class could be better documented, and there could be more comments explaining the logic within the activate method.","tokens":690,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Stormvine.java","name":"Stormvine.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Stormvine.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"59","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and encapsulation. The class and method names are clear and descriptive. The use of comments is minimal but the code is self-explanatory. However, the nested if-else statements could be refactored for better readability. Overall, the code is clean and maintainable.","tokens":902,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Blindweed.java","name":"Blindweed.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Blindweed.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"73","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper package declarations, imports, and class definitions. The use of comments and clear method names enhances readability. However, the code could benefit from additional comments explaining the logic within the activate method and the Seed class. Overall, it is clean and maintainable.","tokens":809,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaL","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Firebloom.java","name":"Firebloom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Firebloom.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"66","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and inner classes. The comments and licensing information are clear. However, the code could benefit from additional comments explaining the logic within the activate method and the use of PathFinder. Overall, it is readable and maintainable.","tokens":784,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Icecap.java","name":"Icecap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Icecap.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"66","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and inner classes. The comments and licensing information are clear. However, the code could benefit from additional comments explaining the logic within the methods for better readability.","tokens":729,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Mageroyal.java","name":"Mageroyal.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Mageroyal.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"64","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper class and method definitions, use of comments, and clear variable names. The use of inner classes is appropriate, and the logic is easy to follow. However, there is a FIXME comment indicating some code duplication, which could be improved. Overall, the readability and quality are high, but there\u0027s room for minor improvements.","tokens":1631,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Swiftthistle.java","name":"Swiftthistle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Swiftthistle.java","language":"java","measures":[{"metric":"complexity","value":"36","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"33","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"66","bestValue":false},{"metric":"comment_lines_density","value":"1.4","bestValue":false},{"metric":"lines","value":"205","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper package and import statements. The class and method names are descriptive, and the use of comments is appropriate. However, the code could benefit from additional comments explaining the logic within methods for better readability.","tokens":546,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/BlandfruitBush.java","name":"BlandfruitBush.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/BlandfruitBush.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"3","bestValue":false},{"metric":"comment_lines_density","value":"5.3","bestValue":false},{"metric":"lines","value":"47","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear class and method definitions, and appropriate comments. The use of inner classes is logical and the code is easy to follow. However, there are minor areas for improvement, such as more detailed comments within methods and better handling of magic numbers.","tokens":1312,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Earthroot.java","name":"Earthroot.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Earthroot.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"42","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"159","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are descriptive, and the use of comments and whitespace enhances readability. The logic is clear and concise. However, the code could benefit from additional comments explaining the purpose of certain operations, especially for those unfamiliar with the game\u0027s mechanics.","tokens":805,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Sorrowmoss.java","name":"Sorrowmoss.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Sorrowmoss.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"65","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and inner classes. The comments and licensing information are clear. However, the code could benefit from additional comments explaining the logic within the methods for better readability. Overall, it is clean and maintainable.","tokens":822,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Starflower.java","name":"Starflower.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Starflower.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"77","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. However, the code could benefit from additional comments explaining the logic within the activate method, especially for non-obvious operations like interfloor teleportation and the use of CellEmitter.","tokens":923,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Fadeleaf.java","name":"Fadeleaf.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Fadeleaf.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"83","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants for keys, clear method names, and comments for clarity. The use of static variables and methods is appropriate for the context. However, the class is quite large and could benefit from further modularization to improve readability and maintainability. Additionally, some variable names could be more descriptive.","tokens":2610,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Statistics.java","name":"Statistics.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Statistics.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"69","bestValue":false},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"104","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"248","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of constants. The comments are helpful, and the code is modular. However, the use of fully qualified class names in method calls can reduce readability. Additionally, some methods could benefit from more detailed comments explaining their purpose.","tokens":1721,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBah","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ShatteredPixelDungeon.java","name":"ShatteredPixelDungeon.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ShatteredPixelDungeon.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"42","bestValue":false},{"metric":"comment_lines_density","value":"6.6","bestValue":false},{"metric":"lines","value":"166","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using synchronized methods for thread safety and handling exceptions. The comments are clear and provide useful information. The use of constants and method names are descriptive, enhancing readability. However, the code could benefit from more detailed inline comments explaining complex logic, and the use of magic numbers could be replaced with named constants for better clarity.","tokens":1248,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBac","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/services/news/News.java","name":"News.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/services/news/News.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"18","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"37","bestValue":false},{"metric":"comment_lines_density","value":"7.5","bestValue":false},{"metric":"lines","value":"134","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method naming. The use of comments is minimal but the code is self-explanatory. The class handles update checks and reviews efficiently. However, the readability could be improved with more comments explaining the purpose of certain methods and variables. Additionally, the use of magic numbers (e.g., CHECK_DELAY) could be replaced with named constants for better clarity.","tokens":956,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaa","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/services/updates/Updates.java","name":"Updates.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/services/updates/Updates.java","language":"java","measures":[{"metric":"complexity","value":"24","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"2.6","bestValue":false},{"metric":"lines","value":"119","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of inheritance. The comments and licensing information are properly included. However, the code could benefit from more detailed comments explaining the purpose of each method and variable. Additionally, the magic numbers in the animation frames could be replaced with named constants for better readability.","tokens":837,"sonarData":{"component":{"id":"AY2Di9ryW1YJaXpvKngY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/FungalSentrySprite.java","name":"FungalSentrySprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/FungalSentrySprite.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"1.8","bestValue":false},{"metric":"lines","value":"100","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes comments for licensing, which is good practice. The class and method names are clear and descriptive. However, the code could benefit from additional comments explaining the purpose of each animation and the choice of frame indices. Overall, it demonstrates good readability and quality.","tokens":640,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ShieldedSprite.java","name":"ShieldedSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ShieldedSprite.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes meaningful variable names. The use of comments for licensing is clear. However, the class could benefit from additional comments explaining the purpose of each animation and method. Overall, it demonstrates good practices but lacks some inline documentation for better readability.","tokens":686,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/AcidicSprite.java","name":"AcidicSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/AcidicSprite.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"58","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments is minimal but the code is self-explanatory. The only minor issue is the hardcoded frame indices which could be abstracted for better maintainability.","tokens":752,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBYM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SuccubusSprite.java","name":"SuccubusSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SuccubusSprite.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"60","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of comments. The class is cohesive, focusing on the DM300Sprite\u0027s behavior. However, the code could benefit from additional comments explaining the purpose of some methods and variables, especially for those unfamiliar with the game\u0027s context. Overall, it is readable and maintainable.","tokens":1482,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBX9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/DM300Sprite.java","name":"DM300Sprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/DM300Sprite.java","language":"java","measures":[{"metric":"complexity","value":"29","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"16","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"61","bestValue":false},{"metric":"comment_lines_density","value":"0.8","bestValue":false},{"metric":"lines","value":"183","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes appropriate comments for licensing. The class is concise and focused on its purpose. However, it could benefit from additional comments explaining the logic behind the animations and the blood method. Overall, it demonstrates good practices and readability.","tokens":658,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBYC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/BeeSprite.java","name":"BeeSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/BeeSprite.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"56","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments is appropriate, and the logic is straightforward. However, the code could benefit from additional comments explaining the purpose of certain operations, especially for those unfamiliar with the game context. Overall, it is readable and maintainable.","tokens":590,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBYE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/DiscardedItemSprite.java","name":"DiscardedItemSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/DiscardedItemSprite.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and use of comments for licensing. The naming conventions are consistent and meaningful. However, the code could benefit from additional comments explaining the logic, especially in the attack method. The use of magic numbers for frame indices could be replaced with named constants for better readability.","tokens":827,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GnollTricksterSprite.java","name":"GnollTricksterSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GnollTricksterSprite.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"81","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments is minimal but the code is self-explanatory. The only minor issue is the lack of detailed comments explaining the purpose of each animation, which could improve readability for new developers.","tokens":678,"sonarData":{"component":{"id":"AY2Di9ryW1YJaXpvKnga","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GnollSapperSprite.java","name":"GnollSapperSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GnollSapperSprite.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"62","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions and proper use of inheritance. The comments and licensing information are comprehensive. However, the code could benefit from more inline comments explaining the purpose of specific blocks, especially for those unfamiliar with the game\u0027s context. Overall, it is readable and maintainable.","tokens":755,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/MonkSprite.java","name":"MonkSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/MonkSprite.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"70","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. However, the code could benefit from more detailed comments explaining the purpose of each method and variable. Additionally, the use of magic numbers in the animation frames could be replaced with named constants for better readability.","tokens":884,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/BlacksmithSprite.java","name":"BlacksmithSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/BlacksmithSprite.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"86","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments and licensing information are clear. However, the animation frame sequences could be better documented for readability. Overall, the code is clean and maintainable.","tokens":896,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXm","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ImpSprite.java","name":"ImpSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ImpSprite.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"74","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for licensing. The use of abstract methods and inner classes is appropriate. However, the code could benefit from additional comments explaining the logic, especially in the update and die methods. The use of magic numbers could be replaced with named constants for better readability.","tokens":1364,"sonarData":{"component":{"id":"AY2Di9ryW1YJaXpvKngd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CrystalSpireSprite.java","name":"CrystalSpireSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CrystalSpireSprite.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"55","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"163","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants for frame dimensions and separating concerns with methods like updateArmor. The use of comments is minimal but the code is self-explanatory. The class and method names are clear and descriptive. However, the code could benefit from additional comments for better readability and maintainability.","tokens":806,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/MirrorSprite.java","name":"MirrorSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/MirrorSprite.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"2.5","bestValue":false},{"metric":"lines","value":"76","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions, proper use of inheritance, and encapsulation. The comments and licensing information are well-documented. However, the readability could be slightly improved with more detailed comments within the methods to explain the logic, especially for non-trivial operations like animations and callbacks.","tokens":960,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/DM200Sprite.java","name":"DM200Sprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/DM200Sprite.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"28","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"105","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes clear method names and comments. The use of animations is straightforward and the logic is easy to follow. However, the class could benefit from additional comments explaining the purpose of each animation and the significance of the blood color value.","tokens":661,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/EarthGuardianSprite.java","name":"EarthGuardianSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/EarthGuardianSprite.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"57","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and encapsulation. The comments and licensing information are clear. The naming conventions are consistent and meaningful. However, the code could benefit from additional comments explaining the purpose of each method and the logic behind the animations. Overall, it is readable and maintainable.","tokens":718,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBX-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GuardSprite.java","name":"GuardSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GuardSprite.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"60","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear, and the use of comments is appropriate. The code is concise and easy to read. However, the use of magic numbers for frame indices could be improved by defining constants for better readability and maintainability.","tokens":637,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/WraithSprite.java","name":"WraithSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/WraithSprite.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"56","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes comments for licensing. The class and method names are descriptive, and the logic is straightforward. However, there is a minor typo in the comment within the die method (\u0027dieing\u0027 should be \u0027dying\u0027). Additionally, more comments explaining the purpose of each method could improve readability.","tokens":772,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GhoulSprite.java","name":"GhoulSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GhoulSprite.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"2.9","bestValue":false},{"metric":"lines","value":"70","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The class and method names are clear and descriptive. However, the logic within the update method could be slightly more readable with better variable naming and comments explaining the purpose of the calculations. Overall, the code is clean and maintainable.","tokens":609,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/PrismaticSprite.java","name":"PrismaticSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/PrismaticSprite.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"5","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"47","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of classes and methods. The use of comments and clear variable names enhances readability. However, the class could benefit from additional comments explaining the purpose of each method and variable, especially for those unfamiliar with the specific game framework being used.","tokens":633,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SheepSprite.java","name":"SheepSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SheepSprite.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"50","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments and licensing information are clear. The use of descriptive method names and organized animation setup enhances readability. However, the code could benefit from additional comments explaining the purpose of each animation and method for better maintainability.","tokens":767,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBX2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SkeletonSprite.java","name":"SkeletonSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SkeletonSprite.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"66","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes clear method definitions and comments. The use of descriptive variable names and the organization of animations are commendable. However, the class could benefit from additional comments explaining the purpose of each animation and method for better maintainability.","tokens":666,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SwarmSprite.java","name":"SwarmSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SwarmSprite.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"56","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments is appropriate, and the code is easy to read and understand. However, the class could benefit from additional comments explaining the purpose of each animation and the significance of the blood color value.","tokens":632,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBX5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/RotLasherSprite.java","name":"RotLasherSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/RotLasherSprite.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"56","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and consistent formatting. The use of comments and constants enhances readability. However, the class is quite large and complex, which can make it harder to maintain and understand. Some methods could be refactored for better clarity and separation of concerns.","tokens":5387,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBYJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CharSprite.java","name":"CharSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CharSprite.java","language":"java","measures":[{"metric":"complexity","value":"163","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"120","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"326","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"790","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides and proper use of inheritance. The class and method names are descriptive, and the logic is straightforward. However, the code could benefit from additional comments explaining the purpose of certain values and operations, which would improve readability for future maintainers.","tokens":761,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBYF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/NewbornElementalSprite.java","name":"NewbornElementalSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/NewbornElementalSprite.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"74","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides and proper use of animations. The class is cohesive and the methods are concise. However, the comments are minimal and could be improved to enhance readability. Additionally, the use of magic numbers for animation frames could be replaced with named constants for better clarity.","tokens":770,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GhostSprite.java","name":"GhostSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GhostSprite.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"73","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear, and the use of comments is appropriate. The logic is straightforward and easy to follow. However, there is a minor issue with the comment block at the top being overly verbose, which slightly affects readability. Additionally, the use of magic numbers in the code could be improved by defining constants.","tokens":735,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYg","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ShopkeeperSprite.java","name":"ShopkeeperSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ShopkeeperSprite.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"66","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions and appropriate use of inheritance. The comments and licensing information are properly included. However, the readability could be slightly improved with more comments explaining the purpose of each method and some of the logic within the methods. Overall, it is a high-quality code with minor areas for improvement.","tokens":958,"sonarData":{"component":{"id":"AY2Di9ryW1YJaXpvKngW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/FungalSpinnerSprite.java","name":"FungalSpinnerSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/FungalSpinnerSprite.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"28","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"103","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes detailed comments and proper use of access modifiers. The naming conventions are clear and consistent. However, there are some areas marked with FIXME comments indicating potential improvements, and the code could benefit from further refactoring to enhance readability and maintainability.","tokens":3200,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ItemSprite.java","name":"ItemSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ItemSprite.java","language":"java","measures":[{"metric":"complexity","value":"75","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"57","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"152","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"404","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles with clear class hierarchies and method overrides. The use of comments and consistent naming conventions enhances readability. However, the code could benefit from additional inline comments explaining complex logic, and some methods could be refactored for better clarity and maintainability.","tokens":1791,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ElementalSprite.java","name":"ElementalSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ElementalSprite.java","language":"java","measures":[{"metric":"complexity","value":"29","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"65","bestValue":false},{"metric":"comment_lines_density","value":"0.5","bestValue":false},{"metric":"lines","value":"257","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance and method overriding. The use of constants for time values improves readability. However, the code could benefit from additional comments explaining the purpose of certain methods and variables, especially for those unfamiliar with the game\u0027s context. Overall, it is clean and maintainable.","tokens":868,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/MobSprite.java","name":"MobSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/MobSprite.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"85","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments is appropriate and helps in understanding the purpose of certain methods. However, the code could benefit from more detailed comments explaining the logic within methods. Additionally, the use of magic numbers could be replaced with named constants for better readability.","tokens":1558,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBX1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/HeroSprite.java","name":"HeroSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/HeroSprite.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"56","bestValue":false},{"metric":"comment_lines_density","value":"4.1","bestValue":false},{"metric":"lines","value":"182","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear and descriptive variable names, and the methods are concise and focused on single responsibilities. The use of comments is minimal but the code is self-explanatory. However, there could be more comments for better readability and understanding. The use of magic numbers (e.g., \u0027c \u003d 21\u0027) could be replaced with named constants for better clarity.","tokens":1000,"sonarData":{"component":{"id":"AYh9pBdxXMB54cnrmw_j","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/PhantomPiranhaSprite.java","name":"PhantomPiranhaSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/PhantomPiranhaSprite.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"32","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"111","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear method names and has appropriate comments for licensing. The use of encapsulation and method overriding is well-done. However, there are minor issues such as redundant calls to play(idle) in updateAnims() and some methods could benefit from additional comments for clarity. Overall, the code is readable and maintainable.","tokens":1270,"sonarData":{"component":{"id":"AY2Di9ryW1YJaXpvKngb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GnollGeomancerSprite.java","name":"GnollGeomancerSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GnollGeomancerSprite.java","language":"java","measures":[{"metric":"complexity","value":"26","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"15","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"53","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"152","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes comments that explain the purpose of the frame sequences. The use of descriptive variable names and the clear organization of animations contribute to its readability. However, the class could benefit from additional comments explaining the logic behind the frame sequences and the choice of animation speeds.","tokens":739,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SnakeSprite.java","name":"SnakeSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SnakeSprite.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"4.8","bestValue":false},{"metric":"lines","value":"54","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes clear method calls and variable names. The use of comments and licensing information is appropriate. However, the class could benefit from additional comments explaining the purpose of each animation and the significance of the frame indices.","tokens":628,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/AlbinoSprite.java","name":"AlbinoSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/AlbinoSprite.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. However, the code could benefit from more detailed comments explaining the purpose of each method and variable. Additionally, the use of magic numbers (e.g., 5/16f, 0xFFFFFF88) could be replaced with named constants for better readability.","tokens":912,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/PylonSprite.java","name":"PylonSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/PylonSprite.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"32","bestValue":false},{"metric":"comment_lines_density","value":"3.1","bestValue":false},{"metric":"lines","value":"104","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear method names and has appropriate comments for licensing. However, it could benefit from additional inline comments to explain complex logic, and some methods could be refactored for better readability. Overall, it is maintainable and understandable.","tokens":1385,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBYL","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/NecromancerSprite.java","name":"NecromancerSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/NecromancerSprite.java","language":"java","measures":[{"metric":"complexity","value":"27","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"26","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"57","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"154","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear and descriptive variable names, and the methods are concise and focused. The use of comments is minimal but the code is self-explanatory. The class adheres to the Single Responsibility Principle. However, the code could benefit from additional comments for better readability and understanding of the logic, especially for complex operations.","tokens":1213,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBX6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/EyeSprite.java","name":"EyeSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/EyeSprite.java","language":"java","measures":[{"metric":"complexity","value":"18","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"51","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"141","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments is minimal but the code is self-explanatory. The only minor issue is the hardcoded values in the animations, which could be improved by using constants for better readability and maintainability.","tokens":736,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/YogSprite.java","name":"YogSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/YogSprite.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"68","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The class and method names are clear and descriptive. The use of comments is minimal but the code is self-explanatory. The use of external libraries is appropriate and the logic is straightforward. However, the code could benefit from more comments explaining the purpose of certain blocks, and the use of magic numbers (e.g., 19, 16) could be replaced with named constants for better readability.","tokens":1081,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/LotusSprite.java","name":"LotusSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/LotusSprite.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"15","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"40","bestValue":false},{"metric":"comment_lines_density","value":"1.3","bestValue":false},{"metric":"lines","value":"124","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. However, the code could benefit from additional comments explaining the logic within methods, especially for complex operations like the \u0027zap\u0027 method. Overall, it is readable and maintainable.","tokens":1018,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBYD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/DM100Sprite.java","name":"DM100Sprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/DM100Sprite.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"104","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments and licensing information are clear. However, the code could benefit from more detailed comments explaining the purpose of each method and variable. Additionally, the magic numbers used in the animation frames could be replaced with named constants for better readability.","tokens":932,"sonarData":{"component":{"id":"AY2Di9ryW1YJaXpvKngc","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/FungalCoreSprite.java","name":"FungalCoreSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/FungalCoreSprite.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"30","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"98","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes clear method calls and variable names. The use of comments for licensing is appropriate. However, the class could benefit from additional comments explaining the purpose of each animation and the significance of the frame indices. Overall, it demonstrates good practices but lacks some inline documentation for better clarity.","tokens":671,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/KingSprite.java","name":"KingSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/KingSprite.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear class and method definitions, proper use of inheritance, and encapsulation. The comments and licensing information are clear. However, the code could benefit from more detailed comments explaining the purpose of each method and variable. Additionally, the use of magic numbers for texture offsets and colors could be improved by defining them as constants.","tokens":1033,"sonarData":{"component":{"id":"AY2Di9ryW1YJaXpvKngX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CrystalGuardianSprite.java","name":"CrystalGuardianSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CrystalGuardianSprite.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"27","bestValue":false},{"metric":"comment_lines_density","value":"1.4","bestValue":false},{"metric":"lines","value":"117","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions and appropriate use of inheritance. The comments and licensing information are properly included. However, the class could benefit from additional comments explaining the purpose of each method and variable for better readability. The use of magic numbers in the animation frames could be replaced with named constants for clarity.","tokens":765,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/PiranhaSprite.java","name":"PiranhaSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/PiranhaSprite.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes appropriate comments. The use of descriptive method and variable names enhances readability. However, the class could benefit from additional comments explaining the purpose of each animation and the significance of the blood method\u0027s return value.","tokens":632,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXc","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CrabSprite.java","name":"CrabSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CrabSprite.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"56","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions and appropriate use of comments. The class and method names are descriptive, and the logic is straightforward. However, the use of magic numbers in the tierFrames array and animation frame indices could be improved by defining constants for better readability. Overall, the code is clean and maintainable.","tokens":860,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYa","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/StatueSprite.java","name":"StatueSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/StatueSprite.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"2.9","bestValue":false},{"metric":"lines","value":"73","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes clear method calls and object instantiations. The use of comments and licensing information is appropriate. However, the class could benefit from additional comments explaining the purpose of each animation and the overall functionality of the class.","tokens":635,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXt","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/BruteSprite.java","name":"BruteSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/BruteSprite.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes clear method names and comments. The use of animations is straightforward and the logic is simple. However, it lacks inline comments explaining the purpose of each animation frame, which could improve readability for future maintainers.","tokens":658,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SlimeSprite.java","name":"SlimeSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SlimeSprite.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"57","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes clear method calls and variable names. The use of comments and licensing information is appropriate. However, the class could benefit from additional comments explaining the purpose of each animation and the overall functionality of the class.","tokens":630,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBX0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/RatSprite.java","name":"RatSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/RatSprite.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The use of abstract methods and inner classes for different Shaman types is clean. However, the readability could be improved with more comments explaining the purpose of each method and variable. The use of magic numbers for texture offsets could also be replaced with named constants for better clarity.","tokens":1018,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXe","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ShamanSprite.java","name":"ShamanSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ShamanSprite.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"27","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"121","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments and licensing information are clear. Variable names are meaningful, and the logic is straightforward. However, the code could benefit from additional comments explaining the purpose of certain calculations, such as the sine wave adjustments in the update method.","tokens":853,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SpawnerSprite.java","name":"SpawnerSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SpawnerSprite.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"87","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions and proper use of inheritance. The comments and licensing information are comprehensive. However, the class could benefit from additional comments explaining the purpose of each method and variable, and the use of magic numbers (e.g., frame indices) could be replaced with named constants for better readability.","tokens":761,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXa","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SeniorSprite.java","name":"SeniorSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SeniorSprite.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"70","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of comments and package declarations. The class and method names are descriptive, and the logic is straightforward. However, it lacks inline comments explaining the purpose of specific blocks of code, which could improve readability for future maintainers.","tokens":651,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYe","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/BanditSprite.java","name":"BanditSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/BanditSprite.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"50","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and the methods are clearly defined. The use of comments and licensing information is appropriate. However, the readability could be slightly improved with more descriptive variable names and additional comments explaining the purpose of each animation.","tokens":653,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GreatCrabSprite.java","name":"GreatCrabSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GreatCrabSprite.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"57","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and meaningful. However, the code could benefit from additional comments explaining the purpose of some methods and variables, especially for complex logic. The use of magic numbers could be replaced with named constants for better readability.","tokens":1558,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXj","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/WardSprite.java","name":"WardSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/WardSprite.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"60","bestValue":false},{"metric":"comment_lines_density","value":"5.2","bestValue":false},{"metric":"lines","value":"166","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, clear method definitions, and appropriate use of inheritance and polymorphism. The naming conventions are consistent and meaningful. However, the code could benefit from additional comments explaining the purpose of certain methods and variables, especially for those unfamiliar with the specific game context.","tokens":985,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXr","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/DM201Sprite.java","name":"DM201Sprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/DM201Sprite.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"29","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"107","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions, proper use of inheritance, and encapsulation. The comments and licensing information are clear. However, the code could benefit from additional inline comments to explain complex logic, and the use of magic numbers could be replaced with named constants for better readability.","tokens":1122,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GolemSprite.java","name":"GolemSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GolemSprite.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"41","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"136","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions and appropriate use of comments. The class and method names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining the logic within methods, especially for complex operations like animations and callbacks.","tokens":829,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBYI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/WarlockSprite.java","name":"WarlockSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/WarlockSprite.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"82","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants, clear method names, and comments. The use of HashMap for angular speeds is efficient. However, the code could benefit from more comments explaining complex logic, and the use of magic numbers (e.g., 135, 90) should be avoided or explained. Overall, the readability and quality are high.","tokens":1955,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBYG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/MissileSprite.java","name":"MissileSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/MissileSprite.java","language":"java","measures":[{"metric":"complexity","value":"23","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"18","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"62","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"186","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for clarity. The use of nested classes for different types of MimicSprites is a good design choice. However, the code could benefit from more detailed comments explaining the purpose of each method and the logic behind certain calculations, such as the perspectiveRaise and shadowOffset values.","tokens":963,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/MimicSprite.java","name":"MimicSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/MimicSprite.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"29","bestValue":false},{"metric":"comment_lines_density","value":"3.1","bestValue":false},{"metric":"lines","value":"106","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper encapsulation and clear method responsibilities. The use of comments and meaningful variable names enhances readability. However, the class could benefit from additional comments explaining the purpose of certain methods and logic, especially for those unfamiliar with the game\u0027s context. Overall, it is clean and maintainable.","tokens":1006,"sonarData":{"component":{"id":"AY2Di9ryW1YJaXpvKngZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GnollGuardSprite.java","name":"GnollGuardSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GnollGuardSprite.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"37","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"114","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and meaningful. However, the code could benefit from additional comments explaining the logic, especially in the resetAnims method. Overall, it is readable and maintainable.","tokens":809,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBX3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/RatKingSprite.java","name":"RatKingSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/RatKingSprite.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"79","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and uses meaningful variable names. The class is concise and focused on its purpose. However, there are minor areas for improvement, such as adding comments for better understanding and handling potential exceptions. Overall, it demonstrates good coding practices.","tokens":612,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/BatSprite.java","name":"BatSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/BatSprite.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and licensing information is appropriate. However, the code could benefit from additional comments explaining the purpose of each method and the significance of the frame indices in the animations. Overall, it is readable and maintainable.","tokens":694,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBYN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/LarvaSprite.java","name":"LarvaSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/LarvaSprite.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"63","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles with clear class hierarchies and method overrides. The use of comments and meaningful variable names enhances readability. However, the code could benefit from additional comments explaining the purpose of certain methods and logic, especially for those unfamiliar with the game\u0027s context. Overall, it demonstrates good coding practices and maintainability.","tokens":2026,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/FistSprite.java","name":"FistSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/FistSprite.java","language":"java","measures":[{"metric":"complexity","value":"34","bestValue":false},{"metric":"code_smells","value":"15","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"77","bestValue":false},{"metric":"comment_lines_density","value":"0.5","bestValue":false},{"metric":"lines","value":"307","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes clear method definitions and comments. The use of constants and the separation of animations into different states enhance readability. However, the class could benefit from additional comments explaining the purpose of each animation state and the significance of the \u0027c\u0027 variable.","tokens":655,"sonarData":{"component":{"id":"AYh9pBdxXMB54cnrmw_k","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/TormentedSpiritSprite.java","name":"TormentedSpiritSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/TormentedSpiritSprite.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"58","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions, proper use of inheritance, and encapsulation. The comments and licensing information are well-documented. However, the readability could be slightly improved with more comments explaining the logic within methods, especially for complex operations like animations and attack handling.","tokens":916,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBX8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ScorpioSprite.java","name":"ScorpioSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ScorpioSprite.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"24","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"100","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear, and the use of comments is appropriate. The code is concise and easy to read. However, it could benefit from additional comments explaining the purpose of each animation and the significance of the variable \u0027c\u0027. Overall, it demonstrates good readability and quality.","tokens":681,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CausticSlimeSprite.java","name":"CausticSlimeSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CausticSlimeSprite.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"54","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The class and method names are descriptive, and the use of comments is appropriate. However, there are some minor readability issues, such as the lack of spacing in some areas and the use of magic numbers. Overall, the code is maintainable and understandable.","tokens":1399,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYc","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SpectralNecromancerSprite.java","name":"SpectralNecromancerSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SpectralNecromancerSprite.java","language":"java","measures":[{"metric":"complexity","value":"26","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"24","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"57","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"155","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and encapsulation. The comments and TODO indicate areas for improvement, which is good practice. However, the readability could be slightly improved with more detailed comments explaining the purpose of each method and variable. The use of magic numbers in animations could be replaced with named constants for better clarity.","tokens":958,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SpinnerSprite.java","name":"SpinnerSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/SpinnerSprite.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"28","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"103","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of inheritance. The use of comments and consistent formatting enhances readability. However, the class could benefit from additional comments explaining the purpose of each method and variable, especially for those unfamiliar with the context of the game.","tokens":887,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBYH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/RipperSprite.java","name":"RipperSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/RipperSprite.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"27","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"94","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and licensing information is appropriate. However, the code could benefit from additional comments explaining the purpose of each method and the significance of the frame indices in the animations. Overall, it is readable and maintainable.","tokens":772,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/UndeadSprite.java","name":"UndeadSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/UndeadSprite.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"66","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, clear method definitions, and appropriate use of inheritance and overriding. However, the animation frame setup could be more readable with better variable naming or comments explaining the frame sequence. Overall, it is clean and maintainable.","tokens":797,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBX7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/WandmakerSprite.java","name":"WandmakerSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/WandmakerSprite.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"73","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of comments and package declarations. The class and method names are descriptive, and the logic is straightforward. However, it could benefit from additional comments explaining the purpose of each animation and the significance of the frame indices.","tokens":652,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXg","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ThiefSprite.java","name":"ThiefSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ThiefSprite.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"50","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes clear method calls and variable names. The use of comments and licensing information is appropriate. However, the class could benefit from additional comments explaining the purpose of each animation and possibly some error handling.","tokens":631,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GnollSprite.java","name":"GnollSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GnollSprite.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of animations and emitters is well-handled. However, the class is quite large and could benefit from further modularization. Additionally, some methods could use more comments to explain complex logic, especially in the pumpUp method.","tokens":1761,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBX_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GooSprite.java","name":"GooSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/GooSprite.java","language":"java","measures":[{"metric":"complexity","value":"33","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"21","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"74","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"205","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The class and method names are clear and descriptive. However, there are some minor issues like the lack of comments explaining the purpose of certain methods and the use of magic numbers in the die animation frames. Overall, the readability and quality are high.","tokens":867,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBX4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/RotHeartSprite.java","name":"RotHeartSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/RotHeartSprite.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"1.8","bestValue":false},{"metric":"lines","value":"100","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The class is cohesive, focusing on the behavior of the FetidRatSprite. Variable and method names are clear and descriptive. However, the code could benefit from additional comments explaining the purpose of certain methods and variables, especially for those unfamiliar with the game\u0027s context.","tokens":817,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBYB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/FetidRatSprite.java","name":"FetidRatSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/FetidRatSprite.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"22","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"85","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments is minimal but the code is self-explanatory. Variable and method names are descriptive. However, the code could benefit from additional comments for complex logic, and some methods could be broken down further for better readability.","tokens":1522,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBW6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/CircleArc.java","name":"CircleArc.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/CircleArc.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"66","bestValue":false},{"metric":"comment_lines_density","value":"2.4","bestValue":false},{"metric":"lines","value":"197","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as early returns and null checks. The use of constants and encapsulation is appropriate. However, there are minor readability issues, such as the lack of spacing in some parts and the repetitive code blocks that could be refactored to reduce redundancy. Overall, the code is clear and maintainable.","tokens":1310,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Splash.java","name":"Splash.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Splash.java","language":"java","measures":[{"metric":"complexity","value":"18","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"57","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"137","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of constructors, method overriding, and encapsulation. Variable names are meaningful, and the logic is clear. However, the comments are minimal, and there is a slight lack of documentation which could improve readability for new developers.","tokens":740,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXL","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/CheckedCell.java","name":"CheckedCell.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/CheckedCell.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"2.6","bestValue":false},{"metric":"lines","value":"69","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes comments for clarity. The use of constants and method overrides is appropriate. However, the class could benefit from additional comments explaining the purpose of each method and the overall functionality of the class. The use of magic numbers could also be minimized by defining more constants.","tokens":638,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/ShadowBox.java","name":"ShadowBox.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/ShadowBox.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"4.3","bestValue":false},{"metric":"lines","value":"53","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants, clear method names, and proper encapsulation. The comments and licensing information are clear. However, the class could benefit from additional comments explaining the purpose of certain methods and variables for better readability. Overall, it is clean and maintainable.","tokens":668,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBW9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Ripple.java","name":"Ripple.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Ripple.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"64","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of enums for phases and constants for timing values enhances readability. However, the code could benefit from more comments explaining the logic, especially in the update method. Additionally, variable names are clear but could be more descriptive in some cases.","tokens":939,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Enchanting.java","name":"Enchanting.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Enchanting.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"35","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"112","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, clear method names, and appropriate comments. The use of mathematical functions is correct and the logic is easy to follow. However, the code could benefit from additional comments explaining the purpose of certain variables and methods, and the magic numbers could be replaced with named constants for better readability.","tokens":785,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/ShieldHalo.java","name":"ShieldHalo.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/ShieldHalo.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"81","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and method overloading. The use of constants and clear method names enhances readability. However, the class could benefit from additional comments explaining the purpose of certain methods and variables. The logic is straightforward, but some parts could be more modular to improve maintainability.","tokens":923,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Surprise.java","name":"Surprise.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Surprise.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"28","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"99","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The use of comments and clear naming conventions enhances readability. The nested Effect class is logically organized. However, the code could benefit from additional comments explaining the purpose of certain methods and variables, and there are some minor formatting inconsistencies.","tokens":1071,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Pushing.java","name":"Pushing.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Pushing.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"18","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"40","bestValue":false},{"metric":"comment_lines_density","value":"1.2","bestValue":false},{"metric":"lines","value":"136","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The use of inheritance for different EmoIcon types is clear and logical. Variable names are descriptive, and the code is easy to follow. However, there are minor issues such as inconsistent spacing and lack of comments explaining the purpose of some methods and variables, which could improve readability.","tokens":1057,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBW8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/EmoIcon.java","name":"EmoIcon.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/EmoIcon.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"38","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"127","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and method overloading. The use of constants and clear method names enhances readability. However, the class could benefit from additional comments explaining the purpose of certain methods and variables. Overall, the code is clean and maintainable but lacks some inline documentation.","tokens":936,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Wound.java","name":"Wound.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Wound.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"28","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"99","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The use of nested static classes for different types of beams is clear and logical. Variable names are meaningful, and the code is generally easy to follow. However, the class could benefit from additional comments explaining the purpose of some methods and variables, and the use of magic numbers could be reduced.","tokens":900,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Beam.java","name":"Beam.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Beam.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"22","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"95","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants for types, encapsulating behavior in methods, and using switch cases for different types. The comments and licensing information are clear. However, the class is quite large and complex, which can make it harder to maintain and understand. Some methods are lengthy and could benefit from further refactoring to improve readability.","tokens":4358,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Speck.java","name":"Speck.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Speck.java","language":"java","measures":[{"metric":"complexity","value":"117","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"61","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"258","bestValue":false},{"metric":"comment_lines_density","value":"0.5","bestValue":false},{"metric":"lines","value":"532","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes meaningful comments and uses descriptive variable names. The use of enums for phases and constants for indices enhances readability. However, there are some minor issues such as the FIXME comment indicating underuse and potential improvements. Additionally, the code could benefit from more detailed comments explaining the logic in complex methods.","tokens":1242,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/SpellSprite.java","name":"SpellSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/SpellSprite.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"46","bestValue":false},{"metric":"comment_lines_density","value":"0.9","bestValue":false},{"metric":"lines","value":"156","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are descriptive, and the logic is clear. However, there are minor areas for improvement, such as adding more comments for better understanding and handling edge cases more robustly. Overall, the readability and quality are high.","tokens":740,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWg","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/IceBlock.java","name":"IceBlock.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/IceBlock.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"74","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The use of comments is appropriate, and the methods are concise and clear. The naming conventions are consistent and meaningful. However, there are some areas where readability could be improved, such as more detailed comments on complex logic and better handling of magic numbers. Overall, the code is of high quality and easy to understand.","tokens":1398,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Lightning.java","name":"Lightning.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Lightning.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"50","bestValue":false},{"metric":"comment_lines_density","value":"2.8","bestValue":false},{"metric":"lines","value":"167","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of constants. The class is cohesive and the logic is easy to follow. However, the use of magic numbers (e.g., 0xCC0000, 0.8f) could be improved by defining them as constants with descriptive names. Overall, the readability and quality are high.","tokens":872,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/BloodParticle.java","name":"BloodParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/BloodParticle.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"22","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"89","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of constants. The comments and licensing information are comprehensive. However, the code could benefit from additional inline comments explaining the purpose of certain calculations and logic, especially for those unfamiliar with particle systems.","tokens":908,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/CorrosionParticle.java","name":"CorrosionParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/CorrosionParticle.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"3.7","bestValue":false},{"metric":"lines","value":"93","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and concise logic. The use of comments and licensing information is also appropriate. However, the code could benefit from additional inline comments to explain the purpose of certain operations, especially for those unfamiliar with the specific libraries used.","tokens":690,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/WoolParticle.java","name":"WoolParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/WoolParticle.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"58","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants, clear method names, and proper encapsulation. The use of inner classes for different particle behaviors is efficient. However, the class could benefit from additional comments explaining the purpose of each method and the overall class functionality. The readability is good, but slight improvements in documentation would enhance it further.","tokens":956,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/EarthParticle.java","name":"EarthParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/EarthParticle.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"99","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants and separating concerns with different factories. The comments and licensing information are clear. However, the class could benefit from more detailed inline comments explaining the purpose of certain methods and variables. Additionally, the use of magic numbers in the reset method could be improved by defining them as constants.","tokens":808,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBW2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/LeafParticle.java","name":"LeafParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/LeafParticle.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"73","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and proper naming conventions enhances readability. However, the class could benefit from additional inline comments explaining the purpose of certain calculations and logic, especially in the update method. Overall, it is a high-quality and readable piece of code.","tokens":710,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWr","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/FlameParticle.java","name":"FlameParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/FlameParticle.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"68","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and licensing information is appropriate. The class and method names are descriptive, and the logic is straightforward. However, the code could benefit from additional comments explaining the purpose of certain methods and variables for better readability.","tokens":709,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/ElmoParticle.java","name":"ElmoParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/ElmoParticle.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"68","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and licensing information is appropriate. However, the code could benefit from additional inline comments to explain the purpose of certain calculations and logic, which would improve readability for other developers.","tokens":708,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWm","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/BlastParticle.java","name":"BlastParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/BlastParticle.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"66","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and licensing information is appropriate. However, the class could benefit from additional comments explaining the purpose of each method and variable. The naming conventions are clear, but the logic within the reset method could be more modular to enhance readability.","tokens":681,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/ChallengeParticle.java","name":"ChallengeParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/ChallengeParticle.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"69","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and use of constants. The comments and licensing information are clear. Variable and method names are descriptive, enhancing readability. However, the use of static mutable fields like \u0027angle\u0027 and \u0027speed\u0027 could lead to potential issues in a multi-threaded environment. Overall, the code is clean and maintainable.","tokens":966,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWt","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/WindParticle.java","name":"WindParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/WindParticle.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"101","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of constants. The class is cohesive, focusing on particle behavior. However, the comments could be more descriptive, and there is a slight overuse of magic numbers in the reset methods. Overall, the code is readable and maintainable.","tokens":893,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/PurpleParticle.java","name":"PurpleParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/PurpleParticle.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"3.9","bestValue":false},{"metric":"lines","value":"87","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The use of comments and clear method names enhances readability. The class is concise and focused on its purpose. However, the use of magic numbers (e.g., 0xCCCCCC, 2f, 360) without explanation could be improved by defining them as constants with descriptive names.","tokens":709,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBW1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/WebParticle.java","name":"WebParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/WebParticle.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"65","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and appropriate comments. The use of constants and the separation of concerns are also commendable. However, the code could benefit from additional comments explaining the purpose of certain methods and variables, which would improve readability for new developers.","tokens":769,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBW3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/RainbowParticle.java","name":"RainbowParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/RainbowParticle.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"2.4","bestValue":false},{"metric":"lines","value":"79","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and consistent naming conventions enhances readability. However, the code could benefit from additional comments explaining the purpose of certain methods and variables, especially for those unfamiliar with the specific game mechanics.","tokens":917,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/PoisonParticle.java","name":"PoisonParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/PoisonParticle.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"3.6","bestValue":false},{"metric":"lines","value":"92","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The use of comments and clear method names enhances readability. The class is concise and focused on its purpose. However, the code could benefit from additional comments explaining the logic within methods and the purpose of certain variables, especially for those unfamiliar with the context.","tokens":697,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/PitfallParticle.java","name":"PitfallParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/PitfallParticle.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"64","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of constants and factory methods enhances readability. However, the class could benefit from additional comments explaining the purpose of certain methods and variables, especially for those unfamiliar with the specific particle system. Overall, the code is clean and maintainable.","tokens":890,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/SmokeParticle.java","name":"SmokeParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/SmokeParticle.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"84","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, clear method names, and appropriate comments. The use of inner classes and method overrides is correct. However, the code could benefit from additional comments explaining the logic, especially in the update method, to improve readability for future maintainers.","tokens":684,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/SnowParticle.java","name":"SnowParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/SnowParticle.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"59","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, clear method names, and appropriate comments. The use of inner classes and static factory methods is well-implemented. However, the code could benefit from additional comments explaining the logic within methods and more descriptive variable names to improve readability further.","tokens":895,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/FlowParticle.java","name":"FlowParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/FlowParticle.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"96","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and consistent naming conventions enhances readability. However, the code could benefit from additional inline comments explaining the purpose of certain calculations and logic, especially in the reset methods. Overall, it is clean and maintainable.","tokens":1037,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/SparkParticle.java","name":"SparkParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/SparkParticle.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"27","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"108","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and encapsulation. The comments and licensing information are clear. The naming conventions are consistent and meaningful. However, the code could benefit from additional comments explaining the purpose of certain methods and variables, which would improve readability for other developers.","tokens":705,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/SacrificialParticle.java","name":"SacrificialParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/SacrificialParticle.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"68","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants, overriding methods, and clear method names. The use of inner classes for different particle effects is appropriate. However, the code could benefit from additional comments explaining the purpose of certain calculations and logic, especially in the update method. Overall, it is readable and maintainable.","tokens":1046,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/ShadowParticle.java","name":"ShadowParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/ShadowParticle.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"97","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class could benefit from additional inline comments explaining the purpose of certain calculations, especially in the update method. Overall, it is clean and maintainable.","tokens":744,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBW0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/EnergyParticle.java","name":"EnergyParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/EnergyParticle.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"69","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, clear method names, and logical flow. The use of comments and licensing information is appropriate. However, the code could benefit from additional inline comments to explain the purpose of certain calculations and variables, which would improve readability for future maintainers.","tokens":732,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBWj","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/ShaftParticle.java","name":"ShaftParticle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/ShaftParticle.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"70","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper naming conventions and clear method functionality. The use of comments for licensing is appropriate. However, the class could benefit from additional comments explaining the purpose of the methods and variables for better readability. The logic within the update method is concise but could be slightly more documented for clarity.","tokens":602,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/TargetedCell.java","name":"TargetedCell.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/TargetedCell.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"54","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of encapsulation, clear variable naming, and comments for licensing. The logic is straightforward and easy to follow. However, there are minor areas for improvement, such as adding more comments to explain the purpose of certain calculations and potentially breaking down the update method for better readability.","tokens":972,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBW7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Chains.java","name":"Chains.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Chains.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"104","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of encapsulation and clear method definitions. The comments and variable names are descriptive, enhancing readability. However, the use of magic numbers and lack of inline comments explaining complex logic slightly reduce the readability. Overall, it is a high-quality code.","tokens":1510,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Flare.java","name":"Flare.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Flare.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"66","bestValue":false},{"metric":"comment_lines_density","value":"0.8","bestValue":false},{"metric":"lines","value":"185","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The class and method names are clear and descriptive. The use of comments is minimal but the code is self-explanatory. The nested Effect class is well-encapsulated. However, the code could benefit from additional comments for clarity, especially for complex logic, and better exception handling.","tokens":1071,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Swap.java","name":"Swap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Swap.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"37","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"129","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class is quite large and could benefit from further modularization. Additionally, some magic numbers are present, which could be replaced with named constants for better clarity.","tokens":1978,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBW-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/FloatingText.java","name":"FloatingText.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/FloatingText.java","language":"java","measures":[{"metric":"complexity","value":"30","bestValue":false},{"metric":"code_smells","value":"77","bestValue":false},{"metric":"cognitive_complexity","value":"40","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"77","bestValue":false},{"metric":"comment_lines_density","value":"3.2","bestValue":false},{"metric":"lines","value":"248","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of enums for state management and static blocks for initialization is commendable. However, the code could benefit from more comments explaining the logic, especially in the highlight method. Additionally, the use of magic numbers could be reduced by defining them as constants.","tokens":1671,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/BadgeBanner.java","name":"BadgeBanner.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/BadgeBanner.java","language":"java","measures":[{"metric":"complexity","value":"24","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"24","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"81","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"219","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, consistent formatting, and appropriate use of constants. The class is well-documented, and the logic is easy to follow. However, the class is quite large and could benefit from further modularization to improve readability and maintainability. Additionally, some comments explaining complex logic would be helpful.","tokens":5056,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/MagicMissile.java","name":"MagicMissile.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/MagicMissile.java","language":"java","measures":[{"metric":"complexity","value":"86","bestValue":false},{"metric":"code_smells","value":"16","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"230","bestValue":false},{"metric":"comment_lines_density","value":"1.2","bestValue":false},{"metric":"lines","value":"643","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical flow. The comments and licensing information are clear. However, the code could benefit from additional comments explaining the purpose of certain calculations and the overall logic, especially for the phase handling in the update method.","tokens":740,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBW_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/TorchHalo.java","name":"TorchHalo.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/TorchHalo.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"74","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses enums for phases, constants for timing, and has clear method names. The use of comments and proper indentation enhances readability. However, there are some areas for improvement, such as potential code duplication in the constructors and the update method, which could be refactored for better maintainability.","tokens":1294,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Transmuting.java","name":"Transmuting.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Transmuting.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"59","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"155","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and consistent formatting. The use of comments for licensing is appropriate. However, the class lacks inline comments explaining the logic within methods, which could improve readability. The methods are concise and focused, but additional documentation would benefit maintainability.","tokens":748,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/CellEmitter.java","name":"CellEmitter.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/CellEmitter.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. The use of enums for effect types and a switch statement for handling different cases is clear and concise. The comments and licensing information are properly included. However, the method could benefit from additional comments explaining the purpose of each case, and the magic numbers in the uvRect method calls could be replaced with named constants for better readability.","tokens":825,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Effects.java","name":"Effects.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Effects.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"75","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments is appropriate, and the code is easy to read and understand. However, there is a minor typo in the comment at the end (\u0027classh\u0027 instead of \u0027class\u0027). Additionally, the code could benefit from more detailed comments explaining the purpose of each method.","tokens":591,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/DarkBlock.java","name":"DarkBlock.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/DarkBlock.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"62","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear class and method definitions, proper use of inheritance, and encapsulation. The comments and licensing information are well-documented. However, the use of magic numbers and lack of inline comments explaining the logic behind certain calculations slightly reduce readability.","tokens":978,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBW5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Identification.java","name":"Identification.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Identification.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"27","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"106","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical flow. The comments and licensing information are clear. However, the code could benefit from additional comments explaining the purpose of certain blocks, especially the nested loops and conditions within the emit method. Overall, it is readable and maintainable.","tokens":788,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/BlobEmitter.java","name":"BlobEmitter.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/BlobEmitter.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"73","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method naming. The use of constants and helper methods enhances readability. However, the class could benefit from additional comments explaining the purpose of certain arrays and methods. The nested class is well-implemented but could use more documentation. Overall, the code is clean and maintainable.","tokens":1345,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Degradation.java","name":"Degradation.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Degradation.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"31","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"158","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It uses clear naming conventions and follows standard Java practices. The use of enums for type safety and the switch statement for handling different cases is appropriate. However, the class could benefit from additional comments explaining the purpose of each case in the switch statement. Overall, the code is of high quality but could be slightly improved with more documentation.","tokens":721,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/BannerSprites.java","name":"BannerSprites.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/BannerSprites.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"59","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of constants and descriptive variable names enhances readability. However, the code could benefit from additional comments explaining the purpose of certain methods and logic, especially for complex operations. Overall, it is clean and maintainable but could be improved with more documentation.","tokens":1577,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBXX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Fireball.java","name":"Fireball.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Fireball.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"54","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"178","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of constants, and logical organization. The comments and licensing information are clear. However, the code could benefit from additional inline comments for complex logic and a bit more modularization to improve readability and maintainability.","tokens":2296,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSL","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/CityLevel.java","name":"CityLevel.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/CityLevel.java","language":"java","measures":[{"metric":"complexity","value":"39","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"56","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"239","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions, proper use of inheritance, and meaningful variable names. The use of comments and licensing information is also appropriate. However, the code could benefit from additional inline comments to explain complex logic, and some methods could be broken down further for better readability.","tokens":1615,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/LastShopLevel.java","name":"LastShopLevel.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/LastShopLevel.java","language":"java","measures":[{"metric":"complexity","value":"36","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"21","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"54","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"195","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of constants, and logical organization. The use of comments and documentation is minimal but the code is still readable. The nested class and method overrides are used effectively. However, the code could benefit from additional comments for better clarity and understanding, especially for complex logic.","tokens":2248,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/PrisonLevel.java","name":"PrisonLevel.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/PrisonLevel.java","language":"java","measures":[{"metric":"complexity","value":"37","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"21","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"53","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"236","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-documented with clear comments explaining the purpose and functionality of the methods and variables. The logic is straightforward and follows a consistent structure. However, the nested loops and conditionals could be refactored for better readability and maintainability. Additionally, the use of magic numbers and lack of modularization slightly detract from the overall quality.","tokens":1433,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/Patch.java","name":"Patch.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/Patch.java","language":"java","measures":[{"metric":"complexity","value":"36","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"125","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"72","bestValue":false},{"metric":"comment_lines_density","value":"13.4","bestValue":false},{"metric":"lines","value":"145","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of constants and overriding methods enhances readability. However, the class is quite large and could benefit from further modularization. Additionally, some inline comments explaining complex logic would improve understanding for new developers.","tokens":3070,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/CavesLevel.java","name":"CavesLevel.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/CavesLevel.java","language":"java","measures":[{"metric":"complexity","value":"59","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"50","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"83","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"321","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, clear method definitions, and logical organization. The comments and licensing information are clear. However, the readability could be slightly improved with more detailed comments explaining the purpose of each method and some of the logic within the methods. Overall, it is a high-quality and readable piece of code.","tokens":1092,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/DeadEndLevel.java","name":"DeadEndLevel.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/DeadEndLevel.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"1.2","bestValue":false},{"metric":"lines","value":"124","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical organization. The use of constants and static blocks for initialization is appropriate. However, the code is quite lengthy and complex, which can make it harder to follow. Some methods could be broken down into smaller, more manageable pieces to improve readability.","tokens":6319,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/CityBossLevel.java","name":"CityBossLevel.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/CityBossLevel.java","language":"java","measures":[{"metric":"complexity","value":"125","bestValue":false},{"metric":"code_smells","value":"32","bestValue":false},{"metric":"cognitive_complexity","value":"123","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"303","bestValue":false},{"metric":"comment_lines_density","value":"6.8","bestValue":false},{"metric":"lines","value":"680","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and use of constants. The comments and licensing information are clear. However, the code could benefit from more inline comments explaining complex logic, and some methods are quite long, which can affect readability.","tokens":4066,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/LastLevel.java","name":"LastLevel.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/LastLevel.java","language":"java","measures":[{"metric":"complexity","value":"66","bestValue":false},{"metric":"code_smells","value":"13","bestValue":false},{"metric":"cognitive_complexity","value":"72","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"142","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"383","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and consistent formatting enhances readability. However, the large number of imports and nested classes could be simplified or modularized further. Overall, the code is maintainable and understandable.","tokens":3491,"sonarData":{"component":{"id":"AYpLZe7U6QA5VV_wg9B9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/MiningLevel.java","name":"MiningLevel.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/MiningLevel.java","language":"java","measures":[{"metric":"complexity","value":"71","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"54","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"141","bestValue":false},{"metric":"comment_lines_density","value":"1.9","bestValue":false},{"metric":"lines","value":"386","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good naming conventions, making it easy to understand. Constants are clearly defined and grouped logically. The use of comments is minimal but sufficient. The static block for initializing flags is clear and concise. However, the class could benefit from additional comments explaining the purpose of each terrain type and flag, and the discover method could use a comment to explain its functionality.","tokens":1630,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBST","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/Terrain.java","name":"Terrain.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/Terrain.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"39","bestValue":false},{"metric":"comment_lines_density","value":"6.0","bestValue":false},{"metric":"lines","value":"134","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and logical grouping of code blocks enhances readability. However, the class is quite large and could benefit from further modularization. Some methods are lengthy and could be broken down into smaller, more manageable pieces. Overall, the code is readable and maintainable.","tokens":4318,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/HallsBossLevel.java","name":"HallsBossLevel.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/HallsBossLevel.java","language":"java","measures":[{"metric":"complexity","value":"86","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"78","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"179","bestValue":false},{"metric":"comment_lines_density","value":"1.0","bestValue":false},{"metric":"lines","value":"478","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear method names and logical class hierarchies. The use of comments and licensing information is appropriate. However, the code could benefit from additional inline comments to explain complex logic, and some method names could be more descriptive. Overall, it is readable and maintainable.","tokens":1239,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/SewerBossExitRoom.java","name":"SewerBossExitRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/SewerBossExitRoom.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"39","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"138","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and logical flow. The use of comments and consistent formatting enhances readability. However, the code could benefit from additional comments explaining the purpose of certain calculations and conditions, which would make it easier for other developers to understand the logic behind the implementation.","tokens":982,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQ7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/ThinPillarsGooRoom.java","name":"ThinPillarsGooRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/ThinPillarsGooRoom.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"22","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"72","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of inheritance. The comments and licensing information are clear. However, the nested loops and conditionals in the GooNest class could be refactored for better readability. Overall, the code is maintainable and understandable.","tokens":1256,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQ-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/GooBossRoom.java","name":"GooBossRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/GooBossRoom.java","language":"java","measures":[{"metric":"complexity","value":"36","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"31","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"37","bestValue":false},{"metric":"comment_lines_density","value":"4.9","bestValue":false},{"metric":"lines","value":"125","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and descriptive. However, the readability could be slightly improved by adding more comments explaining the logic within the \u0027paint\u0027 method, especially for the calculations and the purpose of each \u0027Painter.fill\u0027 call.","tokens":975,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQ_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/WalledGooRoom.java","name":"WalledGooRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/WalledGooRoom.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"72","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and logical organization. The use of comments and consistent formatting enhances readability. However, the code could benefit from additional comments explaining the purpose of certain calculations and the overall logic of the paint method. The use of magic numbers for dimensions could be replaced with named constants for better clarity.","tokens":806,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQ9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/ThickPillarsGooRoom.java","name":"ThickPillarsGooRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/ThickPillarsGooRoom.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"59","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. Variable names are descriptive, and the logic is straightforward. However, the readability could be slightly improved by adding more comments explaining the purpose of certain blocks of code, especially the logic for door directions and the setup of the Goo boss.","tokens":872,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQ8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/DiamondGooRoom.java","name":"DiamondGooRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/DiamondGooRoom.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"74","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as overriding methods and using meaningful class and method names. The use of comments and proper indentation enhances readability. However, the logic within the paint method could be further modularized for better clarity and maintainability. Overall, the code is clean and easy to understand.","tokens":813,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/SewerBossEntranceRoom.java","name":"SewerBossEntranceRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/sewerboss/SewerBossEntranceRoom.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"69","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments explaining the logic. The use of helper classes and methods enhances readability. However, the code could benefit from more detailed comments in some areas and better handling of magic numbers. Overall, it is clean and maintainable.","tokens":1569,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/ToxicGasRoom.java","name":"ToxicGasRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/ToxicGasRoom.java","language":"java","measures":[{"metric":"complexity","value":"26","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"32","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"59","bestValue":false},{"metric":"comment_lines_density","value":"4.5","bestValue":false},{"metric":"lines","value":"162","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of methods and clear separation of concerns. The comments and variable names are descriptive, enhancing readability. However, the nested if-else statements could be refactored for better clarity, and some magic numbers are present without explanation. Overall, the code is maintainable and understandable.","tokens":1450,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/LaboratoryRoom.java","name":"LaboratoryRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/LaboratoryRoom.java","language":"java","measures":[{"metric":"complexity","value":"24","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"32","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"48","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"133","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, method overrides, and clear method names. The comments and licensing information are clear. However, the code could benefit from additional comments explaining the logic within the methods, especially the paint method. The use of magic numbers could be replaced with named constants for better readability.","tokens":854,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/RunestoneRoom.java","name":"RunestoneRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/RunestoneRoom.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"75","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and consistent formatting. The use of comments and constants enhances readability. However, the class is quite large and could benefit from further modularization. Additionally, some methods could use more detailed comments to explain their purpose and logic.","tokens":1962,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/SpecialRoom.java","name":"SpecialRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/SpecialRoom.java","language":"java","measures":[{"metric":"complexity","value":"35","bestValue":false},{"metric":"code_smells","value":"14","bestValue":false},{"metric":"cognitive_complexity","value":"30","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"67","bestValue":false},{"metric":"comment_lines_density","value":"5.4","bestValue":false},{"metric":"lines","value":"212","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The class and method names are descriptive, making the code easy to understand. However, the nested class and some inline logic could be refactored for better readability. Overall, the code is maintainable and adheres to standard conventions.","tokens":1147,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/DemonSpawnerRoom.java","name":"DemonSpawnerRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/DemonSpawnerRoom.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"41","bestValue":false},{"metric":"comment_lines_density","value":"1.2","bestValue":false},{"metric":"lines","value":"124","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and meaningful. However, the code could benefit from additional comments explaining the logic within the methods, especially for complex operations. The use of magic numbers could be replaced with named constants for better readability.","tokens":1154,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/CryptRoom.java","name":"CryptRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/CryptRoom.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"5.0","bestValue":false},{"metric":"lines","value":"96","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method definitions, and appropriate comments. The logic is clear and the use of helper classes like HiddenWell is well-implemented. However, the readability could be slightly improved with more comments explaining the purpose of certain blocks and variables, especially for those unfamiliar with the game\u0027s context.","tokens":1219,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/WeakFloorRoom.java","name":"WeakFloorRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/WeakFloorRoom.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"20","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"32","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"101","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of helper methods. The naming conventions are consistent and descriptive. However, the code could benefit from additional comments explaining the logic, especially in the \u0027paint\u0027 method. The use of magic numbers could be replaced with named constants for better readability.","tokens":911,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/LibraryRoom.java","name":"LibraryRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/LibraryRoom.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"76","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The use of comments and clear method names enhances readability. The logic is straightforward and easy to follow. However, the code could benefit from additional comments explaining the purpose of certain blocks, especially the conditional statements handling the door positions. Overall, it is of high quality but has room for minor improvements.","tokens":888,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/StatueRoom.java","name":"StatueRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/StatueRoom.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"75","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and meaningful. However, the code could benefit from additional comments for complex logic sections and some methods could be broken down further for better readability. Overall, it is a high-quality code with minor areas for improvement.","tokens":3956,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/SentryRoom.java","name":"SentryRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/SentryRoom.java","language":"java","measures":[{"metric":"complexity","value":"77","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"94","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"186","bestValue":false},{"metric":"comment_lines_density","value":"2.8","bestValue":false},{"metric":"lines","value":"448","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of constants, method overriding, and clear separation of concerns. The comments and licensing information are clear. However, the readability could be slightly improved by adding more comments within the methods to explain the logic, especially in the paint method. Additionally, the use of magic numbers could be reduced by defining more constants.","tokens":1307,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/PoolRoom.java","name":"PoolRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/PoolRoom.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"46","bestValue":false},{"metric":"comment_lines_density","value":"3.7","bestValue":false},{"metric":"lines","value":"130","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and use of helper methods. The naming conventions are clear and descriptive. However, the use of magic numbers and lack of comments explaining the logic could hinder readability for someone unfamiliar with the codebase. Overall, it is of high quality but could benefit from minor improvements in documentation and clarity.","tokens":854,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/StorageRoom.java","name":"StorageRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/StorageRoom.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"76","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method definitions, and meaningful variable names. The logic is straightforward and easy to follow. However, the use of magic numbers and lack of comments explaining the purpose of certain blocks could be improved for better readability and maintainability.","tokens":1062,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/ArmoryRoom.java","name":"ArmoryRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/ArmoryRoom.java","language":"java","measures":[{"metric":"complexity","value":"18","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"18","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"30","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"88","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and descriptive. However, the code could benefit from further modularization to reduce complexity in methods like placeItems and generateItems. Additionally, some inline comments explaining complex logic would improve readability.","tokens":3593,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/ShopRoom.java","name":"ShopRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/ShopRoom.java","language":"java","measures":[{"metric":"complexity","value":"80","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"82","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"187","bestValue":false},{"metric":"comment_lines_density","value":"4.1","bestValue":false},{"metric":"lines","value":"378","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and method extraction. The use of comments and clear method names enhances readability. However, the code could benefit from additional comments explaining the logic within the \u0027paint\u0027 method, especially the randomization and placement logic. Overall, it is clean and maintainable but could use minor improvements in documentation.","tokens":1190,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/CrystalVaultRoom.java","name":"CrystalVaultRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/CrystalVaultRoom.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"102","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, meaningful variable names, and clear logic flow. The use of helper methods like \u0027Painter.fill\u0027 and \u0027Painter.set\u0027 improves readability. However, the nested loops and conditionals could be refactored for better clarity and maintainability. Overall, the code is readable and of good quality.","tokens":928,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRc","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/TreasuryRoom.java","name":"TreasuryRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/TreasuryRoom.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"15","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"72","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and descriptive. However, the code could benefit from additional comments explaining the logic in more detail, especially for complex operations. The use of magic numbers could be replaced with named constants for better readability.","tokens":1315,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/SacrificeRoom.java","name":"SacrificeRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/SacrificeRoom.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"31","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"46","bestValue":false},{"metric":"comment_lines_density","value":"5.7","bestValue":false},{"metric":"lines","value":"107","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments explaining the logic. The use of switch-case and loops is appropriate. However, the readability could be slightly improved by breaking down the \u0027paint\u0027 method into smaller methods. Overall, the code is maintainable and understandable.","tokens":1267,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRL","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/PitRoom.java","name":"PitRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/PitRoom.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"36","bestValue":false},{"metric":"comment_lines_density","value":"6.2","bestValue":false},{"metric":"lines","value":"115","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper indentation, meaningful variable names, and clear logic flow. The use of comments and licensing information is also appropriate. However, the readability could be slightly improved by adding more comments within the methods to explain the purpose of specific blocks of code. Additionally, the method plantPos could benefit from a more descriptive name.","tokens":902,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRa","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/GardenRoom.java","name":"GardenRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/GardenRoom.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"72","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of classes, methods, and comments. The logic is clear and the use of helper methods like \u0027prize\u0027 enhances readability. However, the nested if-else statements and switch-case could be refactored for better readability. The use of magic numbers (e.g., Random.Int(4)) could be replaced with named constants for clarity.","tokens":1746,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/TrapsRoom.java","name":"TrapsRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/TrapsRoom.java","language":"java","measures":[{"metric":"complexity","value":"19","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"24","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"57","bestValue":false},{"metric":"comment_lines_density","value":"6.8","bestValue":false},{"metric":"lines","value":"158","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and descriptive. However, the code could benefit from additional comments explaining the logic in more detail, especially for complex sections. The use of magic numbers could be replaced with named constants for better readability.","tokens":1647,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/CrystalChoiceRoom.java","name":"CrystalChoiceRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/CrystalChoiceRoom.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"55","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"139","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants, clear method names, and proper encapsulation. The use of comments and licensing information is also commendable. However, the readability could be slightly improved by adding more inline comments to explain the logic, especially around the random water selection and seeding process.","tokens":744,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/MagicWellRoom.java","name":"MagicWellRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/MagicWellRoom.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"60","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments explaining key logic. The use of constants and enums improves readability. However, the nested if-else blocks could be refactored for better clarity, and some magic numbers are present without explanation. Overall, the code is readable and maintainable but has room for minor improvements.","tokens":1564,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/MineGiantRoom.java","name":"MineGiantRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/MineGiantRoom.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"41","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"61","bestValue":false},{"metric":"comment_lines_density","value":"2.9","bestValue":false},{"metric":"lines","value":"150","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. Variable and method names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining the logic within methods, especially for complex operations. Overall, it demonstrates high quality and readability.","tokens":1324,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/BlacksmithRoom.java","name":"BlacksmithRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/BlacksmithRoom.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"41","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"144","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes clear comments, meaningful variable names, and logical organization. The use of inheritance and method overrides is appropriate. However, the complexity of the paint method could be reduced for better readability, and some inline comments explaining the logic would be beneficial.","tokens":1707,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/MineEntrance.java","name":"MineEntrance.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/MineEntrance.java","language":"java","measures":[{"metric":"complexity","value":"35","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"49","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"64","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"180","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The use of descriptive method names and logical flow enhances readability. However, the complexity of the paint method could be reduced by breaking it into smaller methods. Additionally, the use of magic numbers could be replaced with named constants for better clarity.","tokens":2201,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/MineLargeRoom.java","name":"MineLargeRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/MineLargeRoom.java","language":"java","measures":[{"metric":"complexity","value":"48","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"85","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"104","bestValue":false},{"metric":"comment_lines_density","value":"2.9","bestValue":false},{"metric":"lines","value":"227","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The logic is complex but well-organized, making it relatively easy to follow. However, the code could benefit from additional comments explaining the purpose of certain blocks and more descriptive variable names to enhance readability further.","tokens":2082,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/RotGardenRoom.java","name":"RotGardenRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/RotGardenRoom.java","language":"java","measures":[{"metric":"complexity","value":"41","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"68","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"97","bestValue":false},{"metric":"comment_lines_density","value":"4.4","bestValue":false},{"metric":"lines","value":"204","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and appropriate use of comments. The use of constants and enums for quest types enhances readability. However, the code could benefit from additional comments explaining the logic, especially in the paint method. The random plant comment suggests incomplete functionality, which slightly detracts from the overall quality.","tokens":891,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/MineSecretRoom.java","name":"MineSecretRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/MineSecretRoom.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"2.5","bestValue":false},{"metric":"lines","value":"74","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as overriding methods, using constants, and maintaining readability with clear method names and comments. The use of external libraries and proper package organization is evident. However, the nested if-else blocks and loops could be refactored for better readability and maintainability. Overall, the code is of high quality but has room for minor improvements.","tokens":1138,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngL","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/MineSmallRoom.java","name":"MineSmallRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/MineSmallRoom.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"39","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"37","bestValue":false},{"metric":"comment_lines_density","value":"1.4","bestValue":false},{"metric":"lines","value":"108","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of nested loops in the canConnect method could be optimized for better readability. Overall, the code is maintainable and understandable, but there is room for minor improvements.","tokens":1593,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/MassGraveRoom.java","name":"MassGraveRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/MassGraveRoom.java","language":"java","measures":[{"metric":"complexity","value":"28","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"34","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"66","bestValue":false},{"metric":"comment_lines_density","value":"2.5","bestValue":false},{"metric":"lines","value":"165","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as overriding methods, using constants, and encapsulating functionality within inner classes. The use of comments and clear method names enhances readability. However, the code could benefit from additional comments explaining the purpose of certain operations, and there is some redundancy in the item spawning logic that could be refactored.","tokens":1096,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/RitualSiteRoom.java","name":"RitualSiteRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/quest/RitualSiteRoom.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"111","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments and licensing information are clear. The logic within the methods is straightforward and easy to follow. However, the code could benefit from additional comments explaining the purpose of certain operations, especially within the loops and conditionals.","tokens":704,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQ0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/BridgeRoom.java","name":"BridgeRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/BridgeRoom.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"62","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, clear method definitions, and appropriate use of loops and conditionals. The class and method names are descriptive, enhancing readability. However, the nested loops could be refactored for better readability, and there is a minor redundancy in the Painter.fill call.","tokens":705,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQ5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/MazeConnectionRoom.java","name":"MazeConnectionRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/MazeConnectionRoom.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"3.6","bestValue":false},{"metric":"lines","value":"57","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The comments are helpful for understanding the purpose of the methods. However, the code could benefit from additional comments explaining the logic within the methods, especially for complex calculations. Overall, it is readable and maintainable.","tokens":1319,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/TunnelRoom.java","name":"TunnelRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/TunnelRoom.java","language":"java","measures":[{"metric":"complexity","value":"24","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"28","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"60","bestValue":false},{"metric":"comment_lines_density","value":"10.4","bestValue":false},{"metric":"lines","value":"122","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The use of comments and clear method names enhances readability. However, the FIXME comment indicates a known issue with handling variable connection rooms, which could be improved. The static initialization blocks are clear but could be refactored for better maintainability. Overall, the code is of high quality but has room for minor improvements.","tokens":1047,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQ1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/ConnectionRoom.java","name":"ConnectionRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/ConnectionRoom.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"2.1","bestValue":false},{"metric":"lines","value":"85","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments is minimal but sufficient to understand the purpose of the class and methods. However, the code could benefit from additional comments explaining complex logic, and some methods could be broken down further to improve readability.","tokens":1733,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQ2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/PerimeterRoom.java","name":"PerimeterRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/PerimeterRoom.java","language":"java","measures":[{"metric":"complexity","value":"36","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"43","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"65","bestValue":false},{"metric":"comment_lines_density","value":"10.2","bestValue":false},{"metric":"lines","value":"172","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as overriding methods, using encapsulation, and caching values for efficiency. The comments and licensing information are clear. However, the code could benefit from additional comments explaining the logic within methods, especially for non-obvious calculations and method calls. Overall, it is readable and maintainable.","tokens":777,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQ4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/RingTunnelRoom.java","name":"RingTunnelRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/RingTunnelRoom.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"73","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The naming conventions are clear and descriptive. However, the code could benefit from additional comments explaining the logic, especially within the loops and conditionals. Overall, it is readable and maintains a high level of quality.","tokens":683,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/RingBridgeRoom.java","name":"RingBridgeRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/RingBridgeRoom.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"59","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments and licensing information are clear. However, the readability could be slightly improved with more comments explaining the logic within the methods, especially the \u0027paint\u0027 method. Overall, it is a high-quality code with minor areas for improvement.","tokens":709,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQ3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/WalkwayRoom.java","name":"WalkwayRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/connection/WalkwayRoom.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"62","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides and proper use of comments. The naming conventions are consistent and descriptive. However, the complexity of the paint method could be reduced for better readability. Overall, the code is maintainable and understandable.","tokens":1110,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/BurnedRoom.java","name":"BurnedRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/BurnedRoom.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"39","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"125","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, meaningful variable names, and clear logic. The use of external libraries and methods is appropriate. However, the readability could be slightly improved by adding more comments explaining the purpose of certain blocks of code, especially the logic within the loops.","tokens":889,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/GrassyGraveRoom.java","name":"GrassyGraveRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/GrassyGraveRoom.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments explaining the purpose of methods. The use of abstract methods enforces a contract for subclasses. However, the nested loops and conditionals could be simplified for better readability. The code could also benefit from more detailed comments within complex logic sections.","tokens":1502,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/PatchRoom.java","name":"PatchRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/PatchRoom.java","language":"java","measures":[{"metric":"complexity","value":"30","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"50","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"58","bestValue":false},{"metric":"comment_lines_density","value":"8.9","bestValue":false},{"metric":"lines","value":"140","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. Methods are clearly defined and appropriately named, enhancing readability. The use of comments is minimal but sufficient. However, there is a FIXME comment indicating potential code duplication, which could be improved. Overall, the code is clean and maintainable, but addressing the FIXME and potential refactoring could enhance quality further.","tokens":1361,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/HallwayRoom.java","name":"HallwayRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/HallwayRoom.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"22","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"61","bestValue":false},{"metric":"comment_lines_density","value":"5.9","bestValue":false},{"metric":"lines","value":"136","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and encapsulation. The comments and documentation are clear, and the logic is straightforward. However, the code could benefit from additional comments explaining the purpose of certain blocks, especially the random number generation and conditions. Overall, it is readable and maintainable.","tokens":1291,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/EntranceRoom.java","name":"EntranceRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/EntranceRoom.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"19","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"36","bestValue":false},{"metric":"comment_lines_density","value":"7.1","bestValue":false},{"metric":"lines","value":"125","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of enums for size categories and the handling of probabilities for room sizes are well-implemented. However, the static initialization blocks for \u0027rooms\u0027 and \u0027chances\u0027 could be cleaner, and the FIXME comment indicates a known issue that needs addressing. Overall, the code is readable and maintainable but has room for minor improvements.","tokens":2103,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQj","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/StandardRoom.java","name":"StandardRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/StandardRoom.java","language":"java","measures":[{"metric":"complexity","value":"18","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"68","bestValue":false},{"metric":"comment_lines_density","value":"6.5","bestValue":false},{"metric":"lines","value":"185","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides and concise comments. The class and method names are descriptive, enhancing readability. However, the code could benefit from more detailed comments explaining the logic within methods like \u0027fill\u0027 and \u0027paint\u0027. Overall, it is clean and maintainable but lacks some in-depth documentation.","tokens":780,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/RuinsRoom.java","name":"RuinsRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/RuinsRoom.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"8.7","bestValue":false},{"metric":"lines","value":"78","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical organization. The class adheres to the single responsibility principle and uses inheritance appropriately. However, the readability could be slightly improved by adding more comments to explain complex logic and ensuring consistent formatting. Overall, it is a high-quality code.","tokens":1203,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/ImpShopRoom.java","name":"ImpShopRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/ImpShopRoom.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"5.4","bestValue":false},{"metric":"lines","value":"135","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as overriding methods, using constants, and clear method names. The comments and TODOs are helpful. However, the code could benefit from more detailed comments explaining the logic, especially in the paint method. Additionally, the use of magic numbers could be reduced by defining them as constants.","tokens":1117,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/StudyRoom.java","name":"StudyRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/StudyRoom.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"27","bestValue":false},{"metric":"comment_lines_density","value":"1.8","bestValue":false},{"metric":"lines","value":"92","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and conditional logic. The comments and licensing information are clear. However, the readability could be slightly improved with more detailed comments explaining the purpose of each method and complex logic sections. Overall, it is high-quality and maintainable code.","tokens":918,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/StripedRoom.java","name":"StripedRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/StripedRoom.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"22","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"75","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments is minimal but the logic is straightforward and easy to follow. There are some nested conditions that could be simplified for better readability. Overall, the code is of high quality and maintainable.","tokens":1377,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/CellBlockRoom.java","name":"CellBlockRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/CellBlockRoom.java","language":"java","measures":[{"metric":"complexity","value":"34","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"41","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"59","bestValue":false},{"metric":"comment_lines_density","value":"1.3","bestValue":false},{"metric":"lines","value":"114","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"75","reasoning":"The code is generally well-structured and follows good practices such as method overriding and encapsulation. However, it contains a FIXME comment indicating areas that need improvement, and there are some sections with complex logic that could be refactored for better readability. The use of comments is helpful, but the code could benefit from more modularization to enhance maintainability.","tokens":2716,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQt","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/SewerPipeRoom.java","name":"SewerPipeRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/SewerPipeRoom.java","language":"java","measures":[{"metric":"complexity","value":"70","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"99","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"134","bestValue":false},{"metric":"comment_lines_density","value":"7.9","bestValue":false},{"metric":"lines","value":"294","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The class and method names are descriptive, and the use of comments is appropriate. The logic is clear and easy to follow. However, the code could benefit from additional comments explaining the purpose of specific operations, especially within the paint method. Overall, it demonstrates good readability and quality.","tokens":701,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/CirclePitRoom.java","name":"CirclePitRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/CirclePitRoom.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"63","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using descriptive variable names and comments. The logic is clear and modular, with methods broken down into smaller, manageable pieces. However, the complexity of the paint method could be reduced for better readability. Additionally, some inline comments explaining complex logic would improve understanding.","tokens":3018,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/CavesFissureRoom.java","name":"CavesFissureRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/CavesFissureRoom.java","language":"java","measures":[{"metric":"complexity","value":"76","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"188","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"172","bestValue":false},{"metric":"comment_lines_density","value":"4.0","bestValue":false},{"metric":"lines","value":"314","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. Methods are concise and have clear responsibilities. The use of comments and meaningful variable names enhances readability. However, the nested if-else logic in the splitPlatforms method could be simplified for better readability. Overall, the code is maintainable and easy to understand.","tokens":1274,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQe","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/PlatformRoom.java","name":"PlatformRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/PlatformRoom.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"32","bestValue":false},{"metric":"comment_lines_density","value":"6.9","bestValue":false},{"metric":"lines","value":"117","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as overriding methods, using descriptive method names, and maintaining a clear logical flow. The comments and licensing information are clear. However, the nested if-else blocks in the paint method could be refactored for better readability. Overall, the code is maintainable and understandable.","tokens":1373,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQr","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/PlantsRoom.java","name":"PlantsRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/PlantsRoom.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"15","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"35","bestValue":false},{"metric":"comment_lines_density","value":"7.5","bestValue":false},{"metric":"lines","value":"119","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. Methods are concise and have clear responsibilities. The use of comments and meaningful method names enhances readability. However, the logic within the paint method could be further modularized for better clarity. Overall, the code is clean and maintainable.","tokens":886,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQm","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/AquariumRoom.java","name":"AquariumRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/AquariumRoom.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"2.1","bestValue":false},{"metric":"lines","value":"81","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments. The logic is straightforward and easy to follow. However, the readability could be slightly improved by adding more comments explaining the purpose of certain calculations and conditions. Overall, it is a high-quality code with minor areas for improvement.","tokens":896,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQa","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/FissureRoom.java","name":"FissureRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/FissureRoom.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"7.1","bestValue":false},{"metric":"lines","value":"73","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of inheritance and method overriding. The use of comments and licensing information is clear. However, the class could benefit from additional comments explaining the purpose of the methods and the logic within them, especially for those unfamiliar with the project.","tokens":552,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/EmptyRoom.java","name":"EmptyRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/EmptyRoom.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"5","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"40","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as overriding methods and using inheritance. The class and method names are clear and descriptive. However, there are minor areas for improvement, such as adding more comments for better readability and ensuring consistent formatting. Overall, the code is clean and easy to understand.","tokens":762,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/ExitRoom.java","name":"ExitRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/ExitRoom.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"69","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as overriding methods and using constants. The class and method names are clear and descriptive. However, the code could benefit from additional comments explaining the logic, especially in the paint method. Overall, it is readable and maintainable.","tokens":666,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQc","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/RingRoom.java","name":"RingRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/RingRoom.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"59","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments is minimal but adequate. The FIXME comment indicates potential areas for improvement, which slightly affects the score. Overall, the code is readable and maintainable.","tokens":1242,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/SegmentedLibraryRoom.java","name":"SegmentedLibraryRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/SegmentedLibraryRoom.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"19","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"31","bestValue":false},{"metric":"comment_lines_density","value":"9.4","bestValue":false},{"metric":"lines","value":"110","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides and appropriate use of comments. The class and method names are descriptive, enhancing readability. However, the logic within methods could benefit from additional comments for clarity, especially for those unfamiliar with the specific game mechanics. Overall, the code is clean and maintainable.","tokens":863,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/ChasmRoom.java","name":"ChasmRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/ChasmRoom.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"7.5","bestValue":false},{"metric":"lines","value":"87","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as overriding methods, using constants, and handling null cases. The class and method names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining the logic, especially in the paint method. Overall, it is clean and maintainable.","tokens":761,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/SuspiciousChestRoom.java","name":"SuspiciousChestRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/SuspiciousChestRoom.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as overriding methods and using clear method names. The comments are helpful for understanding the fill method. However, the class could benefit from more detailed comments explaining the purpose of each method and the overall class functionality. Additionally, the use of magic numbers in the fill method could be replaced with named constants for better readability.","tokens":793,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/CaveRoom.java","name":"CaveRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/CaveRoom.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"8.2","bestValue":false},{"metric":"lines","value":"82","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical flow. The use of switch-case for size categories and loops for mine placement is efficient. However, the readability could be slightly improved with more detailed comments explaining the purpose of each method and the logic behind certain calculations. Overall, the code is clean and maintainable.","tokens":912,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/MinefieldRoom.java","name":"MinefieldRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/MinefieldRoom.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"1.9","bestValue":false},{"metric":"lines","value":"88","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides, proper use of comments, and logical flow. The naming conventions are consistent and descriptive. However, the readability could be slightly improved by adding more comments explaining the purpose of complex logic, especially within the paint method. Overall, the code is of high quality and easy to understand.","tokens":1116,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/CircleBasinRoom.java","name":"CircleBasinRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/CircleBasinRoom.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"20","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"40","bestValue":false},{"metric":"comment_lines_density","value":"1.3","bestValue":false},{"metric":"lines","value":"119","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as overriding methods and using descriptive method names. The use of constants and clear method calls enhances readability. However, the class could benefit from additional comments explaining the purpose of certain operations, especially within the paint method. Overall, the code is clean and maintainable.","tokens":710,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/SkullsRoom.java","name":"SkullsRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/SkullsRoom.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"66","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as overriding methods, using constants, and clear method names. The comments are minimal but the logic is straightforward and easy to follow. The use of Random and Painter classes is appropriate. However, the readability could be slightly improved with more comments explaining the purpose of certain calculations and conditions.","tokens":1250,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/PillarsRoom.java","name":"PillarsRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/PillarsRoom.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"32","bestValue":false},{"metric":"comment_lines_density","value":"12.7","bestValue":false},{"metric":"lines","value":"107","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as overriding methods and using meaningful variable names. The logic is clear and the use of helper methods like Painter.fill and Painter.set improves readability. However, the nested loops and calculations for spacing could be simplified or better documented to enhance understanding. Overall, the code is readable and maintainable.","tokens":947,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/StatuesRoom.java","name":"StatuesRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/StatuesRoom.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"84","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. Methods are concise and have clear responsibilities. The use of comments is minimal but sufficient to understand the logic. Variable names are descriptive, and the code adheres to standard Java conventions. However, the nested if-else and do-while loops could be refactored for better readability and maintainability.","tokens":1254,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQg","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/SegmentedRoom.java","name":"SegmentedRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/standard/SegmentedRoom.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"19","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"4.3","bestValue":false},{"metric":"lines","value":"117","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and modularity. The use of comments is appropriate, and the logic is clear. However, the code could benefit from more detailed comments explaining the purpose of some methods and variables. Additionally, the use of magic numbers (e.g., 5 in secretsForFloor) could be replaced with named constants for better readability.","tokens":1296,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretRoom.java","name":"SecretRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretRoom.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"19","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"41","bestValue":false},{"metric":"comment_lines_density","value":"2.5","bestValue":false},{"metric":"lines","value":"128","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions and appropriate use of comments. The logic is easy to follow, and the use of helper classes and methods enhances readability. However, the nested loops and some complex logic could be simplified for better readability. Overall, it demonstrates a high level of quality and maintainability.","tokens":1216,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRm","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretMazeRoom.java","name":"SecretMazeRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretMazeRoom.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"16","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"37","bestValue":false},{"metric":"comment_lines_density","value":"3.8","bestValue":false},{"metric":"lines","value":"119","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and descriptive. However, the readability could be slightly improved by adding more comments to explain the logic in the \u0027paint\u0027 and \u0027addChest\u0027 methods. Overall, the code is of high quality and easy to understand.","tokens":1023,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/RatKingRoom.java","name":"RatKingRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/RatKingRoom.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"5.9","bestValue":false},{"metric":"lines","value":"87","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using descriptive method names and comments. The use of static blocks for initializing the scroll chances is clear and concise. However, the readability could be slightly improved by adding more comments explaining the logic within the \u0027paint\u0027 method, especially the drawing and placement logic. Overall, the code is clean and maintainable.","tokens":1279,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRj","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretLibraryRoom.java","name":"SecretLibraryRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretLibraryRoom.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"30","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"101","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions and appropriate use of comments. The logic is straightforward and easy to follow. However, the readability could be slightly improved by breaking down the paint method into smaller helper methods to reduce complexity and enhance maintainability.","tokens":1217,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretChestChasmRoom.java","name":"SecretChestChasmRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretChestChasmRoom.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"49","bestValue":false},{"metric":"comment_lines_density","value":"1.3","bestValue":false},{"metric":"lines","value":"118","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of external libraries and classes is appropriate. However, the readability could be slightly improved by adding more comments explaining the purpose of certain blocks of code, especially the logic for trap selection and gold distribution.","tokens":998,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretHoardRoom.java","name":"SecretHoardRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretHoardRoom.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"24","bestValue":false},{"metric":"comment_lines_density","value":"3.8","bestValue":false},{"metric":"lines","value":"84","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and descriptive. However, the code could benefit from additional comments explaining the logic, especially for complex operations. The use of magic numbers and the lack of error handling slightly reduce the overall quality.","tokens":860,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretHoneypotRoom.java","name":"SecretHoneypotRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretHoneypotRoom.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"73","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and licensing information is appropriate. However, the nested loops and some method calls could benefit from additional comments for clarity. The logic is straightforward but could be optimized for readability and maintainability.","tokens":1033,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRg","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretGardenRoom.java","name":"SecretGardenRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretGardenRoom.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"85","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of loops and conditionals. The comments and licensing information are comprehensive. However, the readability could be slightly improved with more detailed comments explaining the logic within the paint method. Overall, it is a high-quality and readable piece of code.","tokens":694,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretArtilleryRoom.java","name":"SecretArtilleryRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretArtilleryRoom.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"56","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions and appropriate use of comments. The class and method names are descriptive, making the code easy to understand. However, the reasoning behind some of the magic numbers (like 8 for maxWidth and maxHeight) is not explained, and there could be more comments explaining the logic within the paint method.","tokens":752,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretSummoningRoom.java","name":"SecretSummoningRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretSummoningRoom.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"3.0","bestValue":false},{"metric":"lines","value":"65","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and meaningful. However, the readability could be slightly improved by adding more comments to explain the logic within the \u0027paint\u0027 method. Overall, the code is clean and maintainable.","tokens":900,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRr","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretWellRoom.java","name":"SecretWellRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretWellRoom.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"2.6","bestValue":false},{"metric":"lines","value":"72","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions and appropriate use of comments. The class and method names are descriptive, making the code easy to understand. However, the readability could be slightly improved by adding more comments explaining the logic within the paint method, especially the calculation of extraFood and the while loop.","tokens":919,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretLarderRoom.java","name":"SecretLarderRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretLarderRoom.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"82","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using static blocks for initialization and encapsulating functionality within methods. The use of descriptive variable names and comments enhances readability. However, the code could benefit from additional comments explaining the logic in the \u0027paint\u0027 method and the use of magic numbers. Overall, it is clean and maintainable.","tokens":1358,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretLaboratoryRoom.java","name":"SecretLaboratoryRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretLaboratoryRoom.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"32","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"103","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and descriptive, making the code easy to understand. However, there are some minor areas for improvement, such as potential code duplication in the drop position logic, which could be refactored for better readability and maintainability.","tokens":1115,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretRunestoneRoom.java","name":"SecretRunestoneRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/secret/SecretRunestoneRoom.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"28","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"101","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear method names and comments to explain complex logic. The use of collections and enums is appropriate. However, the code could benefit from more consistent formatting and some methods are quite long, which can affect readability. Additionally, the use of magic numbers (like 16 and 4) could be replaced with named constants for better clarity.","tokens":3655,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/Room.java","name":"Room.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/Room.java","language":"java","measures":[{"metric":"complexity","value":"144","bestValue":false},{"metric":"code_smells","value":"36","bestValue":false},{"metric":"cognitive_complexity","value":"104","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"186","bestValue":false},{"metric":"comment_lines_density","value":"6.1","bestValue":false},{"metric":"lines","value":"474","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes a clear class definition with appropriate package and import statements. The use of comments and licensing information is good practice. However, the class is relatively simple and lacks error handling or more complex logic, which could be points for improvement.","tokens":489,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/ExplosiveTrap.java","name":"ExplosiveTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/ExplosiveTrap.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"3","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"39","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical flow. The use of comments and meaningful variable names enhances readability. However, the nested loops and conditionals could be refactored for better clarity and maintainability. Overall, the code is of high quality but could benefit from some minor improvements.","tokens":1508,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBP0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/GatewayTrap.java","name":"GatewayTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/GatewayTrap.java","language":"java","measures":[{"metric":"complexity","value":"33","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"84","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"64","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"163","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method definitions, and meaningful variable names. The comments and licensing information are clear. However, the code could benefit from additional comments explaining the logic within the activate method, especially for complex operations like PathFinder and trap activation.","tokens":891,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/FlockTrap.java","name":"FlockTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/FlockTrap.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"15","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"24","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"79","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of encapsulation and clear method definitions. The comments and licensing information are clear. However, the nested if-else blocks and loops could be refactored for better readability. Additionally, more inline comments explaining complex logic would improve understanding.","tokens":1256,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBPv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/DisarmingTrap.java","name":"DisarmingTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/DisarmingTrap.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"31","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"46","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"115","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear class definition, and method overriding. The use of comments and licensing information is also appropriate. However, the code could benefit from additional comments explaining the logic within the activate method, and the use of magic numbers (e.g., 0xFFB2D6FF, 5, 10) could be replaced with named constants for better readability.","tokens":701,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBPw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/ChillingTrap.java","name":"ChillingTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/ChillingTrap.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"54","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of inheritance and method overriding. The use of meaningful variable names and clear logic enhances readability. However, the class lacks comments explaining the purpose of the methods and the logic behind certain operations, which could improve maintainability.","tokens":571,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/WarpingTrap.java","name":"WarpingTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/WarpingTrap.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"4.8","bestValue":false},{"metric":"lines","value":"49","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and separation of concerns. The use of comments is appropriate and helps in understanding the logic. Variable and method names are descriptive. However, the nested anonymous class within the activate method could be refactored for better readability. Overall, the code is clean and maintainable.","tokens":1301,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/GrimTrap.java","name":"GrimTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/GrimTrap.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"41","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"45","bestValue":false},{"metric":"comment_lines_density","value":"4.3","bestValue":false},{"metric":"lines","value":"128","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper package naming, clear class and method definitions, and appropriate use of comments. The logic is straightforward and easy to follow. However, the use of magic numbers (e.g., 2, 5) could be improved by defining them as constants. Overall, the code is readable and maintainable.","tokens":753,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBP5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/BlazingTrap.java","name":"BlazingTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/BlazingTrap.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"58","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method definitions, and appropriate comments. The use of constants for color and shape enhances readability. However, the logic within the activate method could be further modularized for better readability and maintainability. Overall, the code is clean and easy to understand.","tokens":715,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/FrostTrap.java","name":"FrostTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/FrostTrap.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"57","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper package declaration, imports, and class definition. The use of comments and licensing information is clear. The activate method is concise and uses meaningful variable names. However, the code could benefit from additional comments explaining the logic within the activate method for better readability.","tokens":642,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBP1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/ShockingTrap.java","name":"ShockingTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/ShockingTrap.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"54","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and encapsulation. The comments and licensing information are clear. Variable and method names are descriptive. However, the nested if-else structure could be simplified for better readability, and there could be more comments explaining the logic within the activate method.","tokens":692,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/WeakeningTrap.java","name":"WeakeningTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/WeakeningTrap.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"55","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments are clear and provide useful context. Variable and method names are descriptive. However, the use of magic numbers in the poisonAmount method could be improved by defining constants. Overall, the code is readable and maintainable.","tokens":612,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBPz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/TenguDartTrap.java","name":"TenguDartTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/TenguDartTrap.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"8.0","bestValue":false},{"metric":"lines","value":"50","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants, clear method names, and comments. The logic is straightforward and easy to follow. However, there are some areas for improvement, such as potential code duplication in the mob creation loop and the lack of detailed comments explaining the purpose of certain blocks. Overall, the readability and quality are high.","tokens":1046,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/SummoningTrap.java","name":"SummoningTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/SummoningTrap.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"23","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"38","bestValue":false},{"metric":"comment_lines_density","value":"3.1","bestValue":false},{"metric":"lines","value":"103","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper class organization, clear method definitions, and appropriate use of comments. The naming conventions are consistent and meaningful. However, the code could benefit from additional comments explaining the logic within methods, especially for complex operations. Overall, it is readable and maintainable.","tokens":1084,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/GuardianTrap.java","name":"GuardianTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/GuardianTrap.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"1.3","bestValue":false},{"metric":"lines","value":"118","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper indentation, meaningful variable names, and clear logic flow. The use of comments is minimal but the code is self-explanatory. The class adheres to object-oriented principles and makes good use of external libraries. However, the readability could be slightly improved with more comments explaining the purpose of complex logic blocks.","tokens":1034,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBP-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/DisintegrationTrap.java","name":"DisintegrationTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/DisintegrationTrap.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"23","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"32","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"90","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and separation of concerns. The use of comments and meaningful variable names enhances readability. However, the nested anonymous class within the activate method could be refactored for better clarity. Overall, the code is maintainable and understandable.","tokens":1324,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBP8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/PoisonDartTrap.java","name":"PoisonDartTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/PoisonDartTrap.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"46","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"47","bestValue":false},{"metric":"comment_lines_density","value":"3.2","bestValue":false},{"metric":"lines","value":"131","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using comments to explain logic, meaningful variable names, and proper indentation. The use of external libraries and methods is clear and concise. However, the code could benefit from additional comments for complex logic sections and better handling of magic numbers (e.g., 6, 12, 10, 3). Overall, it is readable and maintainable.","tokens":1293,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/GnollRockfallTrap.java","name":"GnollRockfallTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/GnollRockfallTrap.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"35","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"4.0","bestValue":false},{"metric":"lines","value":"112","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method definitions, and appropriate comments. The use of constants for color and shape enhances readability. However, the code could benefit from additional comments explaining the logic within the activate method, especially for those unfamiliar with the game\u0027s mechanics. Overall, it is clean and maintainable.","tokens":684,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQL","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/BurningTrap.java","name":"BurningTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/BurningTrap.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"53","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear naming conventions, use of constants, and proper encapsulation. The comments are helpful and the methods are concise. However, the code could benefit from additional comments explaining the purpose of some methods and variables, and there is a minor typo in the final comment (\u0027classh\u0027 instead of \u0027class\u0027).","tokens":1209,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBP2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/Trap.java","name":"Trap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/Trap.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"29","bestValue":false},{"metric":"comment_lines_density","value":"6.0","bestValue":false},{"metric":"lines","value":"142","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper indentation, meaningful variable names, and clear logic flow. The use of comments and licensing information is also appropriate. However, the code could benefit from additional comments explaining the purpose of certain operations, especially for those unfamiliar with the game\u0027s mechanics. Overall, it is readable and maintainable.","tokens":856,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/FlashingTrap.java","name":"FlashingTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/FlashingTrap.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and the methods are clear. The use of comments and proper naming conventions enhances readability. However, the class lacks detailed comments explaining the logic within the methods, which could improve understanding for future maintainers.","tokens":566,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBP_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/ToxicTrap.java","name":"ToxicTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/ToxicTrap.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"45","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper indentation, meaningful variable names, and clear logic. The use of comments and licensing information is appropriate. However, the class could benefit from additional comments explaining the purpose of certain methods and variables for better readability. Overall, it is a high-quality code with minor areas for improvement.","tokens":666,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/OozeTrap.java","name":"OozeTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/OozeTrap.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"53","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and licensing information is appropriate. However, the code could benefit from additional comments explaining the logic within the activate method, and potential error handling could be considered.","tokens":600,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBP7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/CorrosionTrap.java","name":"CorrosionTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/CorrosionTrap.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"49","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper package declarations, imports, and class definitions. The use of comments for licensing is clear. The activate method is concise and readable. However, the class lacks detailed comments explaining the logic, which could improve readability for new developers.","tokens":572,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBP4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/ConfusionTrap.java","name":"ConfusionTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/ConfusionTrap.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"45","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants, proper naming conventions, and clear logic flow. The use of comments and separation of concerns is evident. However, the nested switch-case and if-else statements could be refactored for better readability. Additionally, the use of magic numbers and some complex logic could be simplified or documented better.","tokens":1674,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBP6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/DistortionTrap.java","name":"DistortionTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/DistortionTrap.java","language":"java","measures":[{"metric":"complexity","value":"28","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"33","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"63","bestValue":false},{"metric":"comment_lines_density","value":"3.2","bestValue":false},{"metric":"lines","value":"166","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear, and the logic is straightforward. The use of comments and proper indentation enhances readability. However, the code could benefit from additional comments explaining the purpose of certain operations, especially for those unfamiliar with the game\u0027s context.","tokens":677,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/StormTrap.java","name":"StormTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/StormTrap.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"56","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, meaningful variable names, and clear logic flow. The use of external libraries and modular design is evident. However, the code could benefit from additional comments explaining complex logic, and some methods could be broken down further for better readability.","tokens":1202,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/RockfallTrap.java","name":"RockfallTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/RockfallTrap.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"25","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"38","bestValue":false},{"metric":"comment_lines_density","value":"2.6","bestValue":false},{"metric":"lines","value":"117","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of encapsulation, clear method names, and logical flow. The comments and licensing information are clear. However, the code could benefit from additional inline comments to explain complex logic, and some variable names could be more descriptive. Overall, it is readable and maintainable.","tokens":1415,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBPy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/PitfallTrap.java","name":"PitfallTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/PitfallTrap.java","language":"java","measures":[{"metric":"complexity","value":"27","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"34","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"51","bestValue":false},{"metric":"comment_lines_density","value":"0.9","bestValue":false},{"metric":"lines","value":"156","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, meaningful variable names, and modular methods. The logic is clear and easy to follow. However, there are some areas where readability could be improved, such as breaking down complex methods into smaller ones and adding more comments for clarity. Overall, it demonstrates a high level of quality and readability.","tokens":1545,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBP9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/GeyserTrap.java","name":"GeyserTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/GeyserTrap.java","language":"java","measures":[{"metric":"complexity","value":"23","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"48","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"49","bestValue":false},{"metric":"comment_lines_density","value":"10.0","bestValue":false},{"metric":"lines","value":"135","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method names, and appropriate comments. The logic is straightforward and easy to follow. However, there are minor areas for improvement, such as adding more comments for complex logic and ensuring consistent formatting. Overall, the code is readable and of high quality.","tokens":896,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBPx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/TeleportationTrap.java","name":"TeleportationTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/TeleportationTrap.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"21","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"76","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical flow. The use of comments and meaningful variable names enhances readability. However, the code could benefit from additional comments explaining the purpose of certain blocks, especially for complex logic. Overall, it demonstrates a high level of quality and readability.","tokens":1222,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/CursingTrap.java","name":"CursingTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/CursingTrap.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"27","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"42","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"123","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of packages and imports. The class and method names are descriptive, and the logic is straightforward. However, the use of magic values like \u0027RED\u0027 and \u0027DOTS\u0027 without context or comments could be improved. Additionally, more comments explaining the purpose of the class and methods would enhance readability.","tokens":681,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/AlarmTrap.java","name":"AlarmTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/AlarmTrap.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"55","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and separation of concerns. The use of comments and meaningful variable names enhances readability. However, the nested anonymous class and the complexity of the logic within the \u0027act\u0027 method could be simplified for better readability and maintainability.","tokens":1113,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBQO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/WornDartTrap.java","name":"WornDartTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/WornDartTrap.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"32","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"37","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"107","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear class and method definitions, and appropriate use of comments. The logic is straightforward and easy to follow. However, the use of magic numbers (e.g., 2 and scalingDepth()/2) could be improved by defining constants. Additionally, more comments explaining the purpose of each block could enhance readability.","tokens":697,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBP3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/GrippingTrap.java","name":"GrippingTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/GrippingTrap.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"57","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and variable names are clear, making the code easy to understand. However, the code could benefit from additional comments explaining the logic in more complex methods. The use of magic numbers and some hardcoded values could be improved by defining constants.","tokens":1969,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/SewerBossLevel.java","name":"SewerBossLevel.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/SewerBossLevel.java","language":"java","measures":[{"metric":"complexity","value":"38","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"25","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"76","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"233","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of constants, and logical organization. The comments and licensing information are clear. However, the code could benefit from additional inline comments for complex logic and a bit more modularization to improve readability further.","tokens":2519,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/SewerLevel.java","name":"SewerLevel.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/SewerLevel.java","language":"java","measures":[{"metric":"complexity","value":"42","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"31","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"69","bestValue":false},{"metric":"comment_lines_density","value":"0.9","bestValue":false},{"metric":"lines","value":"271","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of constants. The comments and licensing information are clear. However, the code could benefit from additional inline comments for complex logic and better documentation for some methods. The use of magic numbers in trap chances and other areas could be improved by defining them as constants.","tokens":2468,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/HallsLevel.java","name":"HallsLevel.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/HallsLevel.java","language":"java","measures":[{"metric":"complexity","value":"41","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"68","bestValue":false},{"metric":"comment_lines_density","value":"1.0","bestValue":false},{"metric":"lines","value":"275","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and appropriate comments. The use of inner classes and callbacks is handled well. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which can affect readability. Overall, it is a high-quality code with minor areas for improvement.","tokens":1664,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBR0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/features/Chasm.java","name":"Chasm.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/features/Chasm.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"20","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"45","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"173","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments is minimal but the logic is straightforward and easy to follow. Some improvements could be made in terms of adding more comments for better understanding and possibly refactoring some of the nested loops for readability.","tokens":1564,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/features/Maze.java","name":"Maze.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/features/Maze.java","language":"java","measures":[{"metric":"complexity","value":"44","bestValue":false},{"metric":"code_smells","value":"14","bestValue":false},{"metric":"cognitive_complexity","value":"41","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"61","bestValue":false},{"metric":"comment_lines_density","value":"8.6","bestValue":false},{"metric":"lines","value":"168","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear naming conventions, proper use of enums, and comprehensive comments. The class is cohesive and methods are concise. However, the readability could be slightly improved by adding more comments for complex logic and ensuring consistent formatting. Overall, it demonstrates a high level of quality and maintainability.","tokens":1359,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBR1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/features/LevelTransition.java","name":"LevelTransition.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/features/LevelTransition.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"50","bestValue":false},{"metric":"comment_lines_density","value":"5.3","bestValue":false},{"metric":"lines","value":"157","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of nested if-else statements is clear, and the code handles various conditions effectively. However, the method is quite long and could benefit from being broken down into smaller methods for better readability and maintainability. Additionally, some comments could be more descriptive.","tokens":1933,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/features/HighGrass.java","name":"HighGrass.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/features/HighGrass.java","language":"java","measures":[{"metric":"complexity","value":"35","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"76","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"62","bestValue":false},{"metric":"comment_lines_density","value":"7.6","bestValue":false},{"metric":"lines","value":"165","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper indentation, meaningful variable names, and clear logic. The use of comments is minimal but the code is self-explanatory. The class and methods are concise and focused on single responsibilities. However, the code could benefit from additional comments for clarity and potential edge case handling.","tokens":722,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/features/Door.java","name":"Door.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/features/Door.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"3.1","bestValue":false},{"metric":"lines","value":"61","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and method decomposition. The comments are helpful and explain the purpose of the methods and variables. However, there are some areas marked with FIXME that indicate potential improvements and reliance on chance, which could affect the robustness of the code. Additionally, the use of magic numbers and lack of detailed error handling could be improved.","tokens":1820,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBR3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/builders/LoopBuilder.java","name":"LoopBuilder.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/builders/LoopBuilder.java","language":"java","measures":[{"metric":"complexity","value":"29","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"41","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"86","bestValue":false},{"metric":"comment_lines_density","value":"9.2","bestValue":false},{"metric":"lines","value":"196","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and method decomposition. The comments are helpful and provide context. However, there are some areas marked with \u0027FIXME\u0027 indicating potential issues or areas for improvement. The use of magic numbers and reliance on chance for certain operations could be optimized.","tokens":2619,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBR7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/builders/FigureEightBuilder.java","name":"FigureEightBuilder.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/builders/FigureEightBuilder.java","language":"java","measures":[{"metric":"complexity","value":"47","bestValue":false},{"metric":"code_smells","value":"13","bestValue":false},{"metric":"cognitive_complexity","value":"70","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"147","bestValue":false},{"metric":"comment_lines_density","value":"8.0","bestValue":false},{"metric":"lines","value":"289","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, comments, and logical organization. The use of protected variables and methods indicates thoughtful encapsulation. However, the code could benefit from more detailed comments explaining complex logic, and some methods are quite long, which can affect readability.","tokens":2175,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBR4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/builders/RegularBuilder.java","name":"RegularBuilder.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/builders/RegularBuilder.java","language":"java","measures":[{"metric":"complexity","value":"44","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"71","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"108","bestValue":false},{"metric":"comment_lines_density","value":"7.6","bestValue":false},{"metric":"lines","value":"250","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as method overriding and encapsulation. The comments are helpful, and the logic is clear. However, the code could benefit from more detailed comments explaining complex logic, and some variable names could be more descriptive. Additionally, the use of magic numbers (e.g., 360f) could be replaced with named constants for better readability.","tokens":1247,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBR5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/builders/BranchesBuilder.java","name":"BranchesBuilder.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/builders/BranchesBuilder.java","language":"java","measures":[{"metric":"complexity","value":"18","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"25","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"58","bestValue":false},{"metric":"comment_lines_density","value":"3.5","bestValue":false},{"metric":"lines","value":"126","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments explaining the logic. The use of helper methods enhances readability. However, the complexity of some methods, especially \u0027findFreeSpace\u0027 and \u0027placeRoom\u0027, could be reduced for better readability. The code could benefit from additional comments in complex sections and possibly breaking down large methods into smaller ones.","tokens":2837,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBR6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/builders/Builder.java","name":"Builder.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/builders/Builder.java","language":"java","measures":[{"metric":"complexity","value":"59","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"99","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"130","bestValue":false},{"metric":"comment_lines_density","value":"12.2","bestValue":false},{"metric":"lines","value":"259","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and use of comments. Variable names are descriptive, and the logic is easy to follow. However, the code could benefit from additional comments explaining the purpose of certain blocks, and some magic numbers (like 180f) could be replaced with named constants for better readability.","tokens":985,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBR8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/builders/LineBuilder.java","name":"LineBuilder.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/builders/LineBuilder.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"16","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"44","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"105","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The use of comments and clear method names enhances readability. However, the nested if-statements could be refactored for better clarity, and the magic numbers (e.g., 0.2f, 6, 3) should be replaced with named constants to improve maintainability.","tokens":941,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/PrisonPainter.java","name":"PrisonPainter.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/PrisonPainter.java","language":"java","measures":[{"metric":"complexity","value":"23","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"34","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"22","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"83","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and method abstraction. The use of comments and meaningful variable names enhances readability. However, the class is quite large and complex, which could be broken down into smaller, more manageable pieces. Additionally, some methods have nested loops and conditionals that could be simplified for better readability.","tokens":4338,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBR-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/RegularPainter.java","name":"RegularPainter.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/RegularPainter.java","language":"java","measures":[{"metric":"complexity","value":"130","bestValue":false},{"metric":"code_smells","value":"13","bestValue":false},{"metric":"cognitive_complexity","value":"256","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"243","bestValue":false},{"metric":"comment_lines_density","value":"5.9","bestValue":false},{"metric":"lines","value":"483","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments explaining the purpose of methods. The use of static methods for common operations is efficient. However, the code could benefit from more detailed comments within complex methods and better handling of edge cases. Overall, it is readable and maintainable.","tokens":1978,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/Painter.java","name":"Painter.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/Painter.java","language":"java","measures":[{"metric":"complexity","value":"32","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"22","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"62","bestValue":false},{"metric":"comment_lines_density","value":"11.1","bestValue":false},{"metric":"lines","value":"188","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper indentation and meaningful variable names. The use of comments is minimal but the code is self-explanatory. The logic is clear and concise. However, the readability could be slightly improved with more comments explaining the purpose of each loop and condition.","tokens":838,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/SewerPainter.java","name":"SewerPainter.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/SewerPainter.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"26","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"75","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are descriptive, and the logic is clear. However, the use of magic numbers (e.g., 10, 21) without comments explaining their significance slightly reduces readability. Overall, the code is of high quality and easy to understand.","tokens":689,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBR_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/CityPainter.java","name":"CityPainter.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/CityPainter.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"56","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of loops and conditionals. The naming conventions are clear and descriptive. However, the code could benefit from additional comments explaining the logic, especially within the nested loops and conditionals, to improve readability for future maintainers.","tokens":812,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/HallsPainter.java","name":"HallsPainter.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/HallsPainter.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"21","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"75","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments helps in understanding the purpose of certain blocks. However, the nested loops and conditionals could be refactored for better readability. Additionally, the class could benefit from more detailed documentation on the methods and their parameters.","tokens":1618,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKngU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/MiningLevelPainter.java","name":"MiningLevelPainter.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/MiningLevelPainter.java","language":"java","measures":[{"metric":"complexity","value":"40","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"92","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"72","bestValue":false},{"metric":"comment_lines_density","value":"5.5","bestValue":false},{"metric":"lines","value":"178","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as method extraction and clear separation of concerns. Variable names are meaningful, and the logic is easy to follow. However, the nested loops and conditionals could be refactored for better readability. Additionally, comments explaining the purpose of complex logic would improve understanding.","tokens":1418,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/CavesPainter.java","name":"CavesPainter.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/painters/CavesPainter.java","language":"java","measures":[{"metric":"complexity","value":"40","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"58","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"56","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"138","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read, with clear naming conventions and consistent formatting. Constants are defined at the top, making them easy to locate. The logic is straightforward and methods are concise. However, there are some outdated comments and the class could benefit from additional documentation for better maintainability.","tokens":839,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Challenges.java","name":"Challenges.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Challenges.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"76","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants for keys, clear method names, and proper encapsulation. The comments are helpful, and the code is easy to read and understand. However, there are some minor issues like inconsistent spacing and lack of detailed comments for some methods. Overall, it demonstrates a high level of readability and quality.","tokens":3323,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/SPDSettings.java","name":"SPDSettings.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/SPDSettings.java","language":"java","measures":[{"metric":"complexity","value":"89","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"102","bestValue":false},{"metric":"comment_lines_density","value":"3.9","bestValue":false},{"metric":"lines","value":"457","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The use of descriptive variable names and consistent formatting enhances readability. However, the class is quite large and could benefit from further modularization to improve maintainability. Additionally, some methods could use more comments to explain complex logic.","tokens":3646,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/ChangesScene.java","name":"ChangesScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/ChangesScene.java","language":"java","measures":[{"metric":"complexity","value":"54","bestValue":false},{"metric":"code_smells","value":"28","bestValue":false},{"metric":"cognitive_complexity","value":"59","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"189","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"379","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear separation of concerns, use of enums for modes, and proper exception handling. The comments are helpful and the variable names are descriptive. However, the class is quite large and could benefit from being broken down into smaller, more manageable classes or methods. Additionally, some methods are quite long and could be further refactored for better readability.","tokens":4186,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZ4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/InterlevelScene.java","name":"InterlevelScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/InterlevelScene.java","language":"java","measures":[{"metric":"complexity","value":"86","bestValue":false},{"metric":"code_smells","value":"60","bestValue":false},{"metric":"cognitive_complexity","value":"113","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"253","bestValue":false},{"metric":"comment_lines_density","value":"3.5","bestValue":false},{"metric":"lines","value":"522","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear comments, meaningful variable names, and logical organization. The use of constants for configuration values enhances readability. However, the class is quite large and could benefit from further modularization. Some methods are lengthy and could be broken down into smaller, more manageable pieces. Overall, the code is readable and maintainable but has room for improvement in terms of modularity.","tokens":3935,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/PixelScene.java","name":"PixelScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/PixelScene.java","language":"java","measures":[{"metric":"complexity","value":"71","bestValue":false},{"metric":"code_smells","value":"40","bestValue":false},{"metric":"cognitive_complexity","value":"79","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"178","bestValue":false},{"metric":"comment_lines_density","value":"6.3","bestValue":false},{"metric":"lines","value":"476","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions, proper use of classes, and meaningful variable names. The use of comments and consistent formatting enhances readability. However, the code could benefit from further modularization to reduce complexity in the `create` method. Additionally, some inline classes could be refactored into separate files for better maintainability.","tokens":3405,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/TitleScene.java","name":"TitleScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/TitleScene.java","language":"java","measures":[{"metric":"complexity","value":"47","bestValue":false},{"metric":"code_smells","value":"26","bestValue":false},{"metric":"cognitive_complexity","value":"43","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"153","bestValue":false},{"metric":"comment_lines_density","value":"0.3","bestValue":false},{"metric":"lines","value":"367","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation, proper use of constants, and meaningful variable names. The comments and licensing information are also well-documented. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which could be broken down further for better readability.","tokens":2976,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZ8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/RankingsScene.java","name":"RankingsScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/RankingsScene.java","language":"java","measures":[{"metric":"complexity","value":"27","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"31","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"141","bestValue":false},{"metric":"comment_lines_density","value":"1.2","bestValue":false},{"metric":"lines","value":"342","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of constants and separation of concerns is evident. However, the code could benefit from further modularization to improve readability and maintainability. Some methods are quite long and could be broken down into smaller, more manageable pieces.","tokens":2737,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZ2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/WelcomeScene.java","name":"WelcomeScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/WelcomeScene.java","language":"java","measures":[{"metric":"complexity","value":"34","bestValue":false},{"metric":"code_smells","value":"27","bestValue":false},{"metric":"cognitive_complexity","value":"50","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"118","bestValue":false},{"metric":"comment_lines_density","value":"4.4","bestValue":false},{"metric":"lines","value":"289","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear variable naming, proper use of constants, and organized imports. The logic is easy to follow, and the use of comments and spacing enhances readability. However, the class is quite long, and some methods could be broken down into smaller ones for better maintainability. Overall, it demonstrates a high level of quality and readability.","tokens":1740,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZ1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/AmuletScene.java","name":"AmuletScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/AmuletScene.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"57","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"175","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical organization. The use of external libraries and assets is handled cleanly. However, there are minor readability issues such as the lack of comments within methods to explain complex logic and the use of magic numbers. Overall, the code is maintainable and understandable.","tokens":915,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/BadgesScene.java","name":"BadgesScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/BadgesScene.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"95","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and consistent formatting enhances readability. However, the code could be improved by reducing the complexity of some methods and adding more inline comments for better understanding. Overall, it is of high quality and maintainable.","tokens":2655,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZ3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/NewsScene.java","name":"NewsScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/NewsScene.java","language":"java","measures":[{"metric":"complexity","value":"37","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"44","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"147","bestValue":false},{"metric":"comment_lines_density","value":"0.8","bestValue":false},{"metric":"lines","value":"334","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear separation of concerns and use of constants. The comments and variable names are descriptive, enhancing readability. However, the class is quite large and could benefit from further modularization. Some methods are lengthy and could be broken down into smaller, more manageable pieces. Overall, the code is readable and maintainable but has room for improvement in terms of modularity.","tokens":4198,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZ0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/SurfaceScene.java","name":"SurfaceScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/SurfaceScene.java","language":"java","measures":[{"metric":"complexity","value":"60","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"54","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"204","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"483","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of constants, and logical organization. The comments and licensing information are clear. However, the readability could be slightly improved with more inline comments explaining the purpose of certain blocks of code, especially for complex UI layout logic.","tokens":1387,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/SupporterScene.java","name":"SupporterScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/SupporterScene.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"58","bestValue":false},{"metric":"comment_lines_density","value":"1.0","bestValue":false},{"metric":"lines","value":"159","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and consistent formatting enhances readability. However, the nested class and some complex logic within methods could be simplified for better clarity. Overall, it demonstrates a high level of quality and maintainability.","tokens":2329,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/StartScene.java","name":"StartScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/StartScene.java","language":"java","measures":[{"metric":"complexity","value":"19","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"27","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"127","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"283","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear comments, meaningful variable names, and logical method organization. However, it could benefit from additional comments explaining complex logic, and some methods could be broken down further to enhance readability.","tokens":1957,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPm","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Honeypot.java","name":"Honeypot.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Honeypot.java","language":"java","measures":[{"metric":"complexity","value":"47","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"44","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"92","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"255","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical flow. The use of comments and documentation is minimal but the code is still readable. The class is cohesive and the methods are concise. However, there could be more inline comments to explain complex logic, and the use of magic numbers could be avoided by defining constants.","tokens":1180,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPg","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Stylus.java","name":"Stylus.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Stylus.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"141","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The comments are helpful for understanding the logic. However, the nested if-else statements could be simplified for better readability, and the use of magic numbers could be replaced with named constants for clarity.","tokens":1119,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNL","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Blooming.java","name":"Blooming.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Blooming.java","language":"java","measures":[{"metric":"complexity","value":"19","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"28","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"35","bestValue":false},{"metric":"comment_lines_density","value":"5.3","bestValue":false},{"metric":"lines","value":"113","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The comments provide useful context for the logic. However, the nested method calls in the arc method could be simplified for better readability. Additionally, the use of magic numbers could be replaced with named constants for improved clarity.","tokens":1125,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Shocking.java","name":"Shocking.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Shocking.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"18","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"6.5","bestValue":false},{"metric":"lines","value":"104","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It includes proper comments, follows naming conventions, and uses clear and concise methods. The use of constants and overriding methods is appropriate. However, the class could benefit from additional documentation on the purpose and usage of the \u0027Projecting\u0027 enchantment.","tokens":579,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Projecting.java","name":"Projecting.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Projecting.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"2","bestValue":false},{"metric":"comment_lines_density","value":"11.8","bestValue":false},{"metric":"lines","value":"45","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, comments explaining the logic, and proper use of access modifiers. The use of constants and utility methods enhances readability. However, the code could benefit from additional comments explaining the purpose of the class and methods for someone unfamiliar with the project. Overall, it is readable and maintainable.","tokens":826,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Vampiric.java","name":"Vampiric.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Vampiric.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"6.1","bestValue":false},{"metric":"lines","value":"69","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and encapsulation. The comments and licensing information are clear. The use of static variables and methods is appropriate. However, the readability could be slightly improved by adding more inline comments to explain the logic, especially in the proc method. Overall, the code is clean and maintainable.","tokens":762,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBM_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Unstable.java","name":"Unstable.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Unstable.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"68","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The variable names are descriptive, and the logic is easy to follow. However, the class could benefit from additional comments explaining the purpose of the class and methods for someone unfamiliar with the codebase. Overall, it demonstrates a high level of readability and quality.","tokens":882,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Elastic.java","name":"Elastic.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Elastic.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"15.4","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear class and method definitions, proper use of inheritance, and encapsulation. The comments and licensing information are clear. However, there are minor readability issues, such as the lack of comments within methods explaining the logic, and some variable names could be more descriptive. Overall, the code is maintainable and understandable.","tokens":1240,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Kinetic.java","name":"Kinetic.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Kinetic.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"1.0","bestValue":false},{"metric":"lines","value":"144","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The use of comments and clear method names enhances readability. The logic is straightforward and easy to follow. However, the use of magic numbers (e.g., -10, 5) could be improved by defining them as constants. Additionally, more inline comments explaining the purpose of certain calculations would further improve clarity.","tokens":975,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Lucky.java","name":"Lucky.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Lucky.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"13.5","bestValue":false},{"metric":"lines","value":"91","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. Variable names are descriptive, and the logic is easy to follow. However, the use of magic numbers and lack of detailed comments explaining the purpose of certain calculations slightly reduce readability. Overall, it is high-quality code.","tokens":885,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBND","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Blazing.java","name":"Blazing.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Blazing.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"7.3","bestValue":false},{"metric":"lines","value":"76","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, encapsulation, and clear method definitions. The comments and licensing information are clear. However, the code could benefit from additional inline comments explaining the logic, especially in the proc method. The use of magic numbers and the lack of detailed documentation for some methods slightly reduce readability.","tokens":876,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Grim.java","name":"Grim.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Grim.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"6.5","bestValue":false},{"metric":"lines","value":"84","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. Variable names are descriptive, and the logic is easy to follow. However, the use of magic numbers (e.g., 0x00FFFF, 3f, 6f) could be improved by defining constants. Additionally, the class could benefit from more detailed comments explaining the purpose of each method and the overall class functionality.","tokens":864,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Chilling.java","name":"Chilling.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Chilling.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"11.1","bestValue":false},{"metric":"lines","value":"70","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The comments are helpful for understanding the logic. However, the use of magic numbers and the lack of detailed comments on complex logic could be improved. Overall, the code is readable and maintainable.","tokens":944,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Corrupting.java","name":"Corrupting.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Corrupting.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"8.9","bestValue":false},{"metric":"lines","value":"79","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, comments, and proper use of access modifiers. The logic is straightforward and easy to follow. However, the use of magic numbers and lack of detailed comments on some complex logic could be improved for better readability.","tokens":1167,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Blocking.java","name":"Blocking.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Blocking.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"3.7","bestValue":false},{"metric":"lines","value":"123","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The use of comments, meaningful variable names, and clear method definitions enhance readability. However, the logic within the proc method could be simplified for better clarity, and the magic numbers could be replaced with named constants for improved maintainability.","tokens":875,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Annoying.java","name":"Annoying.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Annoying.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"73","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of constants and method overrides is appropriate. However, the magic number in the proc method could be replaced with a named constant for better readability. Overall, the code is clean and easy to understand.","tokens":626,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Polarized.java","name":"Polarized.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Polarized.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"55","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, method overrides, and package imports. The logic is clear and concise, with appropriate use of loops and conditionals. However, the use of magic numbers (e.g., 0x000000) and the lack of comments explaining the logic could be improved for better readability.","tokens":840,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Dazzling.java","name":"Dazzling.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Dazzling.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"18","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of package imports, clear method definitions, and appropriate use of comments. The logic is straightforward and easy to follow. However, the use of magic numbers (e.g., 1/12f) could be improved by defining them as constants. Overall, the code is readable and maintainable.","tokens":816,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Displacing.java","name":"Displacing.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Displacing.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"70","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. Variable names are descriptive, and the logic is easy to follow. However, the class could benefit from additional comments explaining the purpose of certain blocks, and the magic numbers could be replaced with named constants for better readability.","tokens":1389,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Explosive.java","name":"Explosive.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Explosive.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"21","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"42","bestValue":false},{"metric":"comment_lines_density","value":"4.2","bestValue":false},{"metric":"lines","value":"134","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured, with clear separation of concerns and appropriate use of object-oriented principles. The comments and licensing information are thorough. Variable and method names are descriptive, enhancing readability. However, the use of magic numbers (e.g., 0x000000, 1/10f) could be improved by defining constants. Overall, the code is clean and maintainable.","tokens":786,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNt","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Friendly.java","name":"Friendly.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Friendly.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"66","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear, and the logic is straightforward. However, the use of magic numbers and lack of comments explaining the purpose of certain calculations slightly reduce readability. Overall, it is a high-quality code with minor areas for improvement.","tokens":716,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Sacrificial.java","name":"Sacrificial.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Sacrificial.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"61","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, clear method definitions, and appropriate class organization. The use of constants and method overrides is also good. However, the readability could be slightly improved with more detailed comments explaining the logic, especially in the proc method. Overall, it is a high-quality code.","tokens":863,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Wayward.java","name":"Wayward.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/curses/Wayward.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"88","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and uses clear naming conventions. However, it lacks comments explaining the purpose of the class and its fields, which could improve readability for other developers.","tokens":502,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ThrowingSpear.java","name":"ThrowingSpear.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ThrowingSpear.java","language":"java","measures":[{"metric":"complexity","value":"0","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"38","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It uses clear and concise naming conventions and includes necessary imports. The use of an initializer block is appropriate for setting instance variables. However, the class lacks comments explaining the purpose and functionality of the Javelin class, which could improve readability and maintainability.","tokens":514,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Javelin.java","name":"Javelin.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Javelin.java","language":"java","measures":[{"metric":"complexity","value":"0","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"38","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and the methods are clear and purposeful. The use of comments and proper naming conventions enhances readability. However, the reasoning behind some calculations in the max method could be better documented for clarity.","tokens":639,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNj","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Shuriken.java","name":"Shuriken.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Shuriken.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"7.7","bestValue":false},{"metric":"lines","value":"52","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear comments and proper use of access modifiers. The logic is encapsulated within methods and classes appropriately. However, the code could benefit from additional comments explaining complex logic, and some variable names could be more descriptive to enhance readability.","tokens":1630,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/HeavyBoomerang.java","name":"HeavyBoomerang.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/HeavyBoomerang.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"28","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"61","bestValue":false},{"metric":"comment_lines_density","value":"2.1","bestValue":false},{"metric":"lines","value":"185","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments and licensing information are clear. Variable names are meaningful, and the logic is easy to follow. However, the code could benefit from additional comments explaining the purpose of certain calculations and conditions, which would improve readability for future maintainers.","tokens":820,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ThrowingKnife.java","name":"ThrowingKnife.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ThrowingKnife.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"6.8","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and clear, with appropriate use of inheritance and overriding. The use of comments and licensing information is good. However, the class could benefit from additional comments explaining the purpose of each field and method for better readability.","tokens":555,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ThrowingStone.java","name":"ThrowingStone.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ThrowingStone.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"5.3","bestValue":false},{"metric":"lines","value":"46","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and the methods are clear and purposeful. The use of comments and proper naming conventions enhances readability. However, the class could benefit from additional comments explaining the logic behind certain calculations, such as the max method. Overall, it is a high-quality and readable piece of code.","tokens":676,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNg","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Bolas.java","name":"Bolas.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Bolas.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"7.4","bestValue":false},{"metric":"lines","value":"53","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments and licensing information are clear. Variable and method names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining the logic within the damageRoll method, especially the calculation of damage on surprise.","tokens":793,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNe","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Kunai.java","name":"Kunai.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Kunai.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"2.4","bestValue":false},{"metric":"lines","value":"72","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise, with clear method definitions and appropriate use of comments. The use of constants and method overrides is appropriate. However, the inline comments could be more descriptive, and there could be more documentation for the class and its methods to improve readability further.","tokens":727,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNm","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Tomahawk.java","name":"Tomahawk.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Tomahawk.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"11.8","bestValue":false},{"metric":"lines","value":"59","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes comments for licensing. The class is concise and uses clear variable names. However, it lacks inline comments explaining the logic behind the calculations in the max method, which could improve readability.","tokens":568,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ThrowingClub.java","name":"ThrowingClub.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ThrowingClub.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"10.0","bestValue":false},{"metric":"lines","value":"45","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and encapsulation. The comments and licensing information are clear. Variable names are meaningful, and the logic is straightforward. However, the class could benefit from additional comments explaining the purpose of methods and variables for better readability.","tokens":574,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ThrowingHammer.java","name":"ThrowingHammer.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ThrowingHammer.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"10.0","bestValue":false},{"metric":"lines","value":"45","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of inheritance and method overriding. The use of comments and licensing information is clear. However, the class could benefit from additional comments explaining the logic within the proc method and the purpose of the tier variable.","tokens":606,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/FishingSpear.java","name":"FishingSpear.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/FishingSpear.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"47","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and overriding methods. The comments and variable names are clear, making the code easy to understand. However, the use of magic numbers for damage calculation could be improved by defining constants. Overall, the code is readable and maintainable.","tokens":844,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/ShockingDart.java","name":"ShockingDart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/ShockingDart.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"3.0","bestValue":false},{"metric":"lines","value":"63","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, meaningful variable names, and clear logic flow. The use of collections and utility methods is appropriate. However, the nested if-else blocks could be refactored for better readability, and some comments could be more descriptive. Overall, the code is maintainable and understandable.","tokens":1194,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNa","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/DisplacingDart.java","name":"DisplacingDart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/DisplacingDart.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"41","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"31","bestValue":false},{"metric":"comment_lines_density","value":"5.6","bestValue":false},{"metric":"lines","value":"111","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments is minimal but sufficient for understanding the purpose of the method. The code is concise and avoids unnecessary complexity. However, the reasoning behind some decisions, like the 5-second paralysis duration, could be documented for better clarity.","tokens":617,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/ParalyticDart.java","name":"ParalyticDart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/ParalyticDart.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"5.6","bestValue":false},{"metric":"lines","value":"45","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments is minimal but the logic is straightforward and easy to follow. The code could benefit from additional comments explaining the purpose of certain conditions, and the handling of the \u0027processingChargedShot\u0027 variable could be clarified.","tokens":675,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/AdrenalineDart.java","name":"AdrenalineDart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/AdrenalineDart.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"4.3","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments and variable names are clear, enhancing readability. However, the logic within the proc method could be simplified for better readability, and there are some minor formatting issues like inconsistent spacing.","tokens":832,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/HolyDart.java","name":"HolyDart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/HolyDart.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"5.7","bestValue":false},{"metric":"lines","value":"65","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and the logic is clear. The use of comments and proper naming conventions enhances readability. However, the code could benefit from additional comments explaining the purpose of certain methods and variables, especially for those unfamiliar with the project.","tokens":622,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/PoisonDart.java","name":"PoisonDart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/PoisonDart.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"5.3","bestValue":false},{"metric":"lines","value":"47","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments are clear and concise. However, the use of magic numbers (e.g., 6f) could be improved by defining constants. Overall, the code is readable and maintainable.","tokens":648,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/ChillingDart.java","name":"ChillingDart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/ChillingDart.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"4.3","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments and licensing information are clear. Variable and method names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining the logic within methods, especially for those unfamiliar with the game\u0027s context.","tokens":800,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/IncendiaryDart.java","name":"IncendiaryDart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/IncendiaryDart.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"2.6","bestValue":false},{"metric":"lines","value":"66","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments are clear and concise. However, the logic within the proc method could be more modular to enhance readability and maintainability. Additionally, the use of magic numbers (e.g., 30, 0.5f, 0.25f) could be replaced with named constants for better clarity.","tokens":732,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/HealingDart.java","name":"HealingDart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/HealingDart.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"8.0","bestValue":false},{"metric":"lines","value":"56","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides and proper use of comments. The logic is straightforward and easy to follow. However, the use of magic numbers (e.g., 5f, 10f) could be improved by defining constants for better readability and maintainability. Overall, the code is clean and readable.","tokens":725,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/RotDart.java","name":"RotDart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/RotDart.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"10.3","bestValue":false},{"metric":"lines","value":"58","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of inheritance, and encapsulation. The comments are helpful, and the logic is easy to follow. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which could be broken down for better readability.","tokens":2287,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/TippedDart.java","name":"TippedDart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/TippedDart.java","language":"java","measures":[{"metric":"complexity","value":"30","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"36","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"80","bestValue":false},{"metric":"comment_lines_density","value":"5.7","bestValue":false},{"metric":"lines","value":"230","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and logical flow. The use of comments is minimal but sufficient. The nested if-else statements are clear, though they could be simplified for better readability. The code adheres to Java conventions and uses meaningful variable names. Overall, it is readable and maintainable, but there is room for minor improvements.","tokens":988,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/CleansingDart.java","name":"CleansingDart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/CleansingDart.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"19","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"5.8","bestValue":false},{"metric":"lines","value":"80","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and method overriding. The use of comments and clear method names enhances readability. However, the class is quite large and could benefit from further modularization. Some methods are complex and could be broken down into smaller, more manageable pieces. Overall, the code is maintainable and understandable.","tokens":2924,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/Dart.java","name":"Dart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/Dart.java","language":"java","measures":[{"metric":"complexity","value":"63","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"38","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"117","bestValue":false},{"metric":"comment_lines_density","value":"6.1","bestValue":false},{"metric":"lines","value":"341","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes appropriate comments and licensing information. The class and method names are descriptive, and the logic is straightforward. However, the use of magic numbers (e.g., Blindness.DURATION) could be improved by defining constants for better readability.","tokens":608,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/BlindingDart.java","name":"BlindingDart.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/BlindingDart.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"5.6","bestValue":false},{"metric":"lines","value":"47","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The comments and variable names are clear, enhancing readability. However, the use of magic numbers (e.g., PathFinder.NEIGHBOURS8) without explanation and the lack of detailed comments on complex logic slightly reduce the score.","tokens":925,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ForceCube.java","name":"ForceCube.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ForceCube.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"27","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"86","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The use of comments and licensing information is clear and appropriate. The class is concise and easy to understand, with meaningful variable names and proper encapsulation. However, the class lacks detailed comments explaining the purpose and functionality of the fields and methods, which could improve readability and maintainability.","tokens":528,"sonarData":{"component":{"id":"AYcBWmJTXcjzOtg4n6NS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ThrowingSpike.java","name":"ThrowingSpike.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/ThrowingSpike.java","language":"java","measures":[{"metric":"complexity","value":"0","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"5","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"40","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and uses clear variable names. The use of comments and licensing information is appropriate. However, the class lacks detailed comments explaining the purpose and functionality of the variables and methods, which could improve readability and maintainability.","tokens":511,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Trident.java","name":"Trident.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/Trident.java","language":"java","measures":[{"metric":"complexity","value":"0","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"38","bestValue":false},{"metric":"sqale_rating","value":"5.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical organization. The use of constants and inheritance is appropriate. However, the readability could be slightly improved by adding more comments explaining the purpose of each method and the logic behind certain calculations. Overall, the code is clean and maintainable.","tokens":847,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Scimitar.java","name":"Scimitar.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Scimitar.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"7.7","bestValue":false},{"metric":"lines","value":"82","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of constants and methods for specific functionalities enhances readability. However, the class could benefit from additional comments explaining the purpose of certain methods and variables, especially for those unfamiliar with the codebase. Overall, it is clean and maintainable.","tokens":968,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBMz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/RoundShield.java","name":"RoundShield.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/RoundShield.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"4.8","bestValue":false},{"metric":"lines","value":"93","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments. The use of constants and inheritance is appropriate. However, the inline comments could be more descriptive, and there is a minor typo in the comment \u002720% penalty to accuracy\u0027 which should be \u002720% penalty to accuracy\u0027. Overall, the code is readable and maintainable.","tokens":718,"sonarData":{"component":{"id":"AYh9pBdvXMB54cnrmw_c","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/WarScythe.java","name":"WarScythe.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/WarScythe.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"8.6","bestValue":false},{"metric":"lines","value":"63","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical organization. The use of inner classes and overriding methods is appropriate. However, the code could benefit from additional comments explaining complex logic, and some variable names could be more descriptive. Overall, it is readable and maintainable.","tokens":1577,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBM7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Flail.java","name":"Flail.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Flail.java","language":"java","measures":[{"metric":"complexity","value":"23","bestValue":false},{"metric":"code_smells","value":"15","bestValue":false},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"56","bestValue":false},{"metric":"comment_lines_density","value":"3.7","bestValue":false},{"metric":"lines","value":"178","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and appropriate use of comments. The class is cohesive, focusing on the behavior of the Dirk weapon. However, the use of magic numbers and lack of detailed comments explaining complex logic slightly reduce readability. Overall, it is a high-quality code with minor areas for improvement.","tokens":892,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBMx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Dirk.java","name":"Dirk.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Dirk.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"5.2","bestValue":false},{"metric":"lines","value":"89","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of nested classes is appropriate, and the code is easy to follow. However, there are minor areas for improvement, such as more detailed comments on complex logic and potential use of constants for magic numbers.","tokens":923,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBM8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Crossbow.java","name":"Crossbow.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Crossbow.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"6.7","bestValue":false},{"metric":"lines","value":"94","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, clear method names, and logical organization. The use of constants and inheritance is appropriate. However, the class could benefit from additional comments explaining the purpose of methods and variables for better readability.","tokens":668,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMt","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/WornShortsword.java","name":"WornShortsword.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/WornShortsword.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"62","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear comments, meaningful variable names, and proper use of access modifiers. The logic is encapsulated in methods, making it modular and readable. However, the code could benefit from additional comments explaining complex logic and potential edge cases. Overall, it demonstrates high readability and quality.","tokens":1724,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Sai.java","name":"Sai.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Sai.java","language":"java","measures":[{"metric":"complexity","value":"36","bestValue":false},{"metric":"code_smells","value":"11","bestValue":false},{"metric":"cognitive_complexity","value":"23","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"62","bestValue":false},{"metric":"comment_lines_density","value":"4.0","bestValue":false},{"metric":"lines","value":"201","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The class is concise and the logic is clear. However, the use of magic numbers (e.g., 1.20f) could be improved by defining constants. Additionally, more comments explaining the methods would enhance readability.","tokens":665,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBM9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Greatsword.java","name":"Greatsword.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Greatsword.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"60","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, appropriate use of comments, and logical organization. The use of constants and clear variable names enhances readability. However, the class could benefit from additional comments explaining the logic behind certain calculations and decisions, which would improve maintainability and understanding for future developers.","tokens":759,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/BattleAxe.java","name":"BattleAxe.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/BattleAxe.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"7.5","bestValue":false},{"metric":"lines","value":"68","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, comments explaining logic, and proper use of access modifiers. The use of constants and modular methods enhances readability. However, the nested callbacks and some complex logic could be simplified for better readability. Overall, the code is maintainable and understandable.","tokens":1595,"sonarData":{"component":{"id":"AYcBWmJTXcjzOtg4n6NR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Rapier.java","name":"Rapier.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Rapier.java","language":"java","measures":[{"metric":"complexity","value":"30","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"35","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"56","bestValue":false},{"metric":"comment_lines_density","value":"5.0","bestValue":false},{"metric":"lines","value":"156","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical organization. The use of constants and modular methods enhances readability. However, the code could benefit from additional inline comments explaining complex logic, especially in the damageRoll and sneakAbility methods. Overall, it is readable and maintainable but has room for minor improvements.","tokens":1382,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBM0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Dagger.java","name":"Dagger.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Dagger.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"45","bestValue":false},{"metric":"comment_lines_density","value":"3.0","bestValue":false},{"metric":"lines","value":"137","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear variable naming and proper use of comments. The class is concise and focused on its purpose. However, the use of magic numbers in the max method could be improved by defining constants for better readability. Overall, the code is readable and maintainable.","tokens":692,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Glaive.java","name":"Glaive.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Glaive.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"12.5","bestValue":false},{"metric":"lines","value":"58","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of constants and encapsulation is appropriate. However, the class is quite large and complex, which can make it harder to maintain and understand. Some methods could be broken down into smaller, more manageable pieces. Overall, the readability and quality are high, but there\u0027s room for simplification.","tokens":4501,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBM5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MagesStaff.java","name":"MagesStaff.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MagesStaff.java","language":"java","measures":[{"metric":"complexity","value":"118","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"78","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"219","bestValue":false},{"metric":"comment_lines_density","value":"2.2","bestValue":false},{"metric":"lines","value":"567","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, appropriate use of comments, and logical organization. The use of constants and descriptive variable names enhances readability. However, the code could benefit from additional comments explaining complex logic, and some methods could be broken down further to improve clarity.","tokens":1356,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBM3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Mace.java","name":"Mace.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Mace.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"25","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"43","bestValue":false},{"metric":"comment_lines_density","value":"4.0","bestValue":false},{"metric":"lines","value":"132","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments. The use of constants and methods for calculations enhances readability. However, the class could benefit from additional comments explaining the purpose of each method and the overall class functionality. The code is concise and adheres to Java conventions, but minor improvements in documentation could enhance understanding.","tokens":708,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Greatshield.java","name":"Greatshield.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Greatshield.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"8.8","bestValue":false},{"metric":"lines","value":"61","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides and proper use of constants. The comments are concise and informative. However, the class could benefit from additional comments explaining the purpose of each method and the overall functionality of the class. The use of magic numbers could be replaced with named constants for better readability.","tokens":685,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Gloves.java","name":"Gloves.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Gloves.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"9.7","bestValue":false},{"metric":"lines","value":"59","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of inheritance and method overriding is appropriate. However, the code could benefit from additional comments explaining the logic within methods, especially the damageRoll method. Overall, it is readable and maintainable.","tokens":897,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBM6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/AssassinsBlade.java","name":"AssassinsBlade.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/AssassinsBlade.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"5.2","bestValue":false},{"metric":"lines","value":"88","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of constants and clear variable names enhances readability. However, the nested callback in the \u0027harvestAbility\u0027 method could be refactored for better readability. Overall, the code is maintainable and understandable.","tokens":1171,"sonarData":{"component":{"id":"AYh9pBdvXMB54cnrmw_d","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Sickle.java","name":"Sickle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Sickle.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"3.7","bestValue":false},{"metric":"lines","value":"118","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured, with clear comments and proper use of Java conventions. The class is concise and focused on its purpose. Variable names are meaningful, and methods are appropriately overridden. However, the inline comments could be more descriptive, and there is a minor typo in the closing comment. Overall, the code is readable and maintainable.","tokens":761,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/HandAxe.java","name":"HandAxe.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/HandAxe.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"7.5","bestValue":false},{"metric":"lines","value":"68","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, clear method overrides, and meaningful variable names. The comments and licensing information are clear. However, the class could benefit from additional comments explaining the logic within methods for better readability and maintainability.","tokens":677,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBMv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Gauntlet.java","name":"Gauntlet.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Gauntlet.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"10.0","bestValue":false},{"metric":"lines","value":"57","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The class is concise and the logic is clear. However, the use of magic numbers (e.g., 1.1f, 1.30f) could be improved by defining them as constants. Additionally, more comments explaining the methods would enhance readability.","tokens":674,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBM1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Shortsword.java","name":"Shortsword.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Shortsword.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"60","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and uses clear method names, making it easy to understand. The use of comments is minimal but the code is self-explanatory. The only minor issue is the lack of detailed comments explaining the logic behind certain values and methods, which could improve readability for new developers.","tokens":696,"sonarData":{"component":{"id":"AYh9pBdvXMB54cnrmw_e","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Katana.java","name":"Katana.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Katana.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"8.8","bestValue":false},{"metric":"lines","value":"61","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, comments, and logical organization. The use of inheritance and overriding methods is appropriate. However, the class is quite large and complex, which can make it harder to maintain and understand. Some methods could be refactored for better readability. Overall, it demonstrates a high level of quality and readability.","tokens":5626,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBM4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MeleeWeapon.java","name":"MeleeWeapon.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MeleeWeapon.java","language":"java","measures":[{"metric":"complexity","value":"164","bestValue":false},{"metric":"code_smells","value":"17","bestValue":false},{"metric":"cognitive_complexity","value":"162","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"255","bestValue":false},{"metric":"comment_lines_density","value":"4.6","bestValue":false},{"metric":"lines","value":"640","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of constants and clear variable names enhances readability. However, the nested callback in the spikeAbility method could be simplified for better readability. Overall, the code is maintainable and understandable.","tokens":1278,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBMu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Spear.java","name":"Spear.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Spear.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"35","bestValue":false},{"metric":"comment_lines_density","value":"8.4","bestValue":false},{"metric":"lines","value":"113","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, comments explaining key parts, and proper use of access modifiers. The use of inner classes and callbacks is appropriate. However, the readability could be slightly improved by breaking down complex methods into smaller ones and adding more detailed comments where necessary. Overall, it is a high-quality code.","tokens":1133,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBMw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/RunicBlade.java","name":"RunicBlade.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/RunicBlade.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"32","bestValue":false},{"metric":"comment_lines_density","value":"6.7","bestValue":false},{"metric":"lines","value":"108","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, appropriate use of comments, and logical organization. The use of constants and method overrides enhances readability. However, the code could benefit from additional inline comments explaining complex logic, and the use of magic numbers (e.g., 1.50f) could be replaced with named constants for better clarity.","tokens":1081,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBM2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Greataxe.java","name":"Greataxe.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Greataxe.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"32","bestValue":false},{"metric":"comment_lines_density","value":"4.0","bestValue":false},{"metric":"lines","value":"106","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and the methods are clear and purposeful. The use of comments and proper naming conventions enhances readability. However, the class could benefit from additional inline comments explaining the logic behind certain decisions, especially in the baseChargeUse and duelistAbility methods.","tokens":665,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Longsword.java","name":"Longsword.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Longsword.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"60","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of nested classes and callbacks is appropriate. However, the readability could be slightly improved by adding more inline comments explaining complex logic and ensuring consistent formatting. Overall, it is a high-quality code with minor areas for improvement.","tokens":1236,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMr","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Sword.java","name":"Sword.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Sword.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"37","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"130","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of collections and callbacks is appropriate. However, the readability could be slightly improved by adding more comments explaining the logic within methods and breaking down complex conditions into smaller, more readable statements.","tokens":1009,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBMy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Whip.java","name":"Whip.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Whip.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"31","bestValue":false},{"metric":"comment_lines_density","value":"4.4","bestValue":false},{"metric":"lines","value":"99","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments. The use of constants and inheritance is appropriate. However, the class could benefit from additional comments explaining the logic behind certain calculations and decisions, which would improve readability for future maintainers.","tokens":746,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMj","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/WarHammer.java","name":"WarHammer.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/WarHammer.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"7.5","bestValue":false},{"metric":"lines","value":"68","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and comments. The use of constants and overriding methods enhances readability. However, the class could benefit from additional comments explaining the logic behind certain calculations and decisions, especially for someone unfamiliar with the codebase. Overall, it is clean and maintainable.","tokens":853,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMm","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Quarterstaff.java","name":"Quarterstaff.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Quarterstaff.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"7.3","bestValue":false},{"metric":"lines","value":"86","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for licensing. The use of nested classes and method overrides is appropriate. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which can affect readability.","tokens":3861,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBN1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/SpiritBow.java","name":"SpiritBow.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/SpiritBow.java","language":"java","measures":[{"metric":"complexity","value":"92","bestValue":false},{"metric":"code_smells","value":"15","bestValue":false},{"metric":"cognitive_complexity","value":"101","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"177","bestValue":false},{"metric":"comment_lines_density","value":"1.3","bestValue":false},{"metric":"lines","value":"482","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear naming conventions, proper use of access modifiers, and comprehensive comments. The use of enums and nested classes enhances readability. However, the class is quite large and complex, which can make it harder to maintain. Some methods could be refactored for better clarity and separation of concerns.","tokens":4585,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBN2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/Weapon.java","name":"Weapon.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/Weapon.java","language":"java","measures":[{"metric":"complexity","value":"100","bestValue":false},{"metric":"code_smells","value":"27","bestValue":false},{"metric":"cognitive_complexity","value":"73","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"158","bestValue":false},{"metric":"comment_lines_density","value":"4.2","bestValue":false},{"metric":"lines","value":"504","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using generics, clear method names, and appropriate data structures. The comments and licensing information are clear. However, the code could benefit from additional inline comments for better readability, and some methods could be refactored to reduce complexity and improve clarity.","tokens":1771,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/ItemStatusHandler.java","name":"ItemStatusHandler.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/ItemStatusHandler.java","language":"java","measures":[{"metric":"complexity","value":"36","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"28","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"80","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"217","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and meaningful comments. The use of constants and overriding methods enhances readability. However, the code could benefit from additional comments explaining the logic within methods and more consistent formatting. Overall, it is readable and maintainable.","tokens":1155,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/KingsCrown.java","name":"KingsCrown.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/KingsCrown.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"128","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear class and method definitions. The use of switch-case for document types is appropriate and the nested static classes are well-organized. However, the code could benefit from additional comments for better readability and understanding, especially for those unfamiliar with the project.","tokens":821,"sonarData":{"component":{"id":"AYQExSm8p2C0gqvbizae","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/journal/RegionLorePage.java","name":"RegionLorePage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/journal/RegionLorePage.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"95","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, method overrides, and encapsulation. The comments and licensing information are clear. However, the use of magic numbers (e.g., TIME_TO_PICK_UP) without context and the lack of detailed comments on methods and variables slightly reduce readability.","tokens":854,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/journal/DocumentPage.java","name":"DocumentPage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/journal/DocumentPage.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"92","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and clear, with appropriate use of inheritance and method overrides. The use of comments and licensing information is good practice. However, the class could benefit from additional comments explaining the purpose of each method and the overall functionality. The naming conventions are clear and consistent.","tokens":547,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/journal/AlchemyPage.java","name":"AlchemyPage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/journal/AlchemyPage.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"3","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"44","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and appropriate use of comments. The use of constants and externalized messages enhances readability. However, the class could benefit from additional comments explaining the purpose of certain actions, and the logic within the doPickUp method could be broken down into smaller methods for better readability.","tokens":984,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/journal/Guidebook.java","name":"Guidebook.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/journal/Guidebook.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"80","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper package declarations, imports, and class definitions. The use of comments and licensing information is clear. The class is concise and methods are straightforward. However, the class could benefit from additional comments explaining the purpose of each method and the significance of the \u0027page\u0027 method.","tokens":547,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/journal/GuidePage.java","name":"GuidePage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/journal/GuidePage.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"3","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"44","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, appropriate use of comments, and logical flow. The use of constants and helper methods enhances readability. However, the code could benefit from more detailed comments explaining complex logic, and some variable names could be more descriptive. Overall, it is a high-quality and readable piece of code.","tokens":1434,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfDisintegration.java","name":"WandOfDisintegration.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfDisintegration.java","language":"java","measures":[{"metric":"complexity","value":"18","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"15","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"45","bestValue":false},{"metric":"comment_lines_density","value":"4.0","bestValue":false},{"metric":"lines","value":"154","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants, comments, and clear method names. The use of HashMaps for debuff management is efficient. However, the code could benefit from further modularization to reduce complexity in methods like onZap and debuffEnemy. Additionally, some comments could be more descriptive to enhance readability.","tokens":3396,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfCorruption.java","name":"WandOfCorruption.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfCorruption.java","language":"java","measures":[{"metric":"complexity","value":"36","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"51","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"102","bestValue":false},{"metric":"comment_lines_density","value":"7.4","bestValue":false},{"metric":"lines","value":"275","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of comments. The use of abstract methods for min and max damage ensures flexibility for subclasses. However, the reasoning behind some design choices, like the specific handling of WandEmpower, could be better documented. Overall, the code is readable and maintainable.","tokens":785,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/DamageWand.java","name":"DamageWand.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/DamageWand.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"4.8","bestValue":false},{"metric":"lines","value":"73","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical organization. The use of nested classes and methods is appropriate, and the code is modular. However, the complexity of the logic, especially in the onZap method, could be simplified for better readability. Additionally, some variable names could be more descriptive to enhance clarity.","tokens":4371,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfRegrowth.java","name":"WandOfRegrowth.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfRegrowth.java","language":"java","measures":[{"metric":"complexity","value":"93","bestValue":false},{"metric":"code_smells","value":"11","bestValue":false},{"metric":"cognitive_complexity","value":"94","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"187","bestValue":false},{"metric":"comment_lines_density","value":"4.9","bestValue":false},{"metric":"lines","value":"504","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical organization. The use of nested classes and methods is appropriate, and the code is generally easy to follow. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which can affect readability.","tokens":2478,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLg","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfBlastWave.java","name":"WandOfBlastWave.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfBlastWave.java","language":"java","measures":[{"metric":"complexity","value":"47","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"53","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"103","bestValue":false},{"metric":"comment_lines_density","value":"4.3","bestValue":false},{"metric":"lines","value":"275","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical organization. The use of constants and descriptive variable names enhances readability. However, the code could benefit from additional comments explaining complex logic, and some methods could be broken down further to improve clarity.","tokens":1425,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfCorrosion.java","name":"WandOfCorrosion.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfCorrosion.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"33","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"129","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical flow. The use of encapsulation and modular design is evident. However, the code could benefit from more detailed comments explaining complex logic, and some methods could be broken down further for better readability.","tokens":1777,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfLightning.java","name":"WandOfLightning.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfLightning.java","language":"java","measures":[{"metric":"complexity","value":"27","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"29","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"65","bestValue":false},{"metric":"comment_lines_density","value":"3.8","bestValue":false},{"metric":"lines","value":"180","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of encapsulation and modular functions enhances readability. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which can make them harder to follow.","tokens":2131,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfTransfusion.java","name":"WandOfTransfusion.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfTransfusion.java","language":"java","measures":[{"metric":"complexity","value":"23","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"30","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"65","bestValue":false},{"metric":"comment_lines_density","value":"6.8","bestValue":false},{"metric":"lines","value":"204","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation, meaningful variable names, and appropriate use of comments. The logic is complex but understandable, and the use of nested classes is appropriate. However, the code could benefit from additional comments explaining the more complex sections and some methods are quite long, which can affect readability.","tokens":3677,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLe","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfLivingEarth.java","name":"WandOfLivingEarth.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfLivingEarth.java","language":"java","measures":[{"metric":"complexity","value":"67","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"77","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"153","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"419","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes detailed comments and proper use of access modifiers. The naming conventions are clear and consistent. However, the code could benefit from additional inline comments for complex logic and some methods are quite long, which could be broken down for better readability.","tokens":3567,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLc","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfWarding.java","name":"WandOfWarding.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfWarding.java","language":"java","measures":[{"metric":"complexity","value":"84","bestValue":false},{"metric":"code_smells","value":"14","bestValue":false},{"metric":"cognitive_complexity","value":"69","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"191","bestValue":false},{"metric":"comment_lines_density","value":"1.3","bestValue":false},{"metric":"lines","value":"467","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of encapsulation, clear method names, and appropriate comments. The logic is clear and the use of external libraries is well-managed. However, the code could benefit from additional comments explaining complex logic and a more consistent formatting style to improve readability further.","tokens":1663,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfPrismaticLight.java","name":"WandOfPrismaticLight.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfPrismaticLight.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"21","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"52","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"164","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, appropriate use of comments, and logical flow. The use of descriptive variable names enhances readability. However, the complexity of the logic, especially in the onZap method, could be simplified or broken down into smaller methods for better maintainability. Overall, it demonstrates a high level of quality and readability.","tokens":2273,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLj","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfFireblast.java","name":"WandOfFireblast.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfFireblast.java","language":"java","measures":[{"metric":"complexity","value":"38","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"39","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"69","bestValue":false},{"metric":"comment_lines_density","value":"9.4","bestValue":false},{"metric":"lines","value":"229","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, appropriate use of comments, and logical flow. The use of descriptive variable names enhances readability. However, the code could benefit from additional comments explaining complex logic, and some methods could be broken down further to improve clarity.","tokens":1680,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfFrost.java","name":"WandOfFrost.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfFrost.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"23","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"51","bestValue":false},{"metric":"comment_lines_density","value":"4.2","bestValue":false},{"metric":"lines","value":"164","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and separation of concerns. The use of comments and descriptive method names enhances readability. However, the class is quite large and complex, which could be broken down into smaller, more manageable pieces. Additionally, the extensive use of switch cases and nested conditions could be refactored for better readability and maintainability.","tokens":4376,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/CursedWand.java","name":"CursedWand.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/CursedWand.java","language":"java","measures":[{"metric":"complexity","value":"82","bestValue":false},{"metric":"code_smells","value":"19","bestValue":false},{"metric":"cognitive_complexity","value":"111","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"182","bestValue":false},{"metric":"comment_lines_density","value":"5.9","bestValue":false},{"metric":"lines","value":"457","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical organization. The comments and documentation are clear, and the code is easy to follow. However, there are some minor areas for improvement, such as more detailed inline comments explaining complex logic and potential refactoring to reduce nested loops and conditions.","tokens":1459,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLm","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfMagicMissile.java","name":"WandOfMagicMissile.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfMagicMissile.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"40","bestValue":false},{"metric":"comment_lines_density","value":"2.6","bestValue":false},{"metric":"lines","value":"167","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and appropriate comments. The use of constants and overriding methods enhances readability. However, the code could benefit from additional comments explaining the logic in more detail, especially for complex sections like the showAmuletScene method. Overall, it is clean and maintainable.","tokens":1175,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Amulet.java","name":"Amulet.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Amulet.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"36","bestValue":false},{"metric":"comment_lines_density","value":"1.0","bestValue":false},{"metric":"lines","value":"146","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation, use of comments, and meaningful variable names. The class and method responsibilities are clear, and the code is easy to follow. However, there are some minor areas for improvement, such as potential overuse of comments and some methods that could be simplified or broken down further for better readability.","tokens":1986,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/Artifact.java","name":"Artifact.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/Artifact.java","language":"java","measures":[{"metric":"complexity","value":"54","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"37","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"70","bestValue":false},{"metric":"comment_lines_density","value":"11.7","bestValue":false},{"metric":"lines","value":"266","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical organization. The comments and documentation are minimal but sufficient. The use of nested classes and overriding methods is appropriate. However, the code could benefit from additional comments for complex logic and better handling of magic numbers.","tokens":3752,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBN5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/TimekeepersHourglass.java","name":"TimekeepersHourglass.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/TimekeepersHourglass.java","language":"java","measures":[{"metric":"complexity","value":"101","bestValue":false},{"metric":"code_smells","value":"14","bestValue":false},{"metric":"cognitive_complexity","value":"100","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"205","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"511","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of inner classes is appropriate, and the code is easy to follow. However, there are minor areas for improvement, such as more detailed comments on complex logic and potential use of constants for magic numbers. Overall, it demonstrates a high level of readability and quality.","tokens":1196,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/CapeOfThorns.java","name":"CapeOfThorns.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/CapeOfThorns.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"21","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"51","bestValue":false},{"metric":"comment_lines_density","value":"1.0","bestValue":false},{"metric":"lines","value":"147","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class is quite large and complex, which could be broken down into smaller, more manageable pieces. Additionally, some methods are lengthy and could benefit from further refactoring to improve clarity.","tokens":3068,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/UnstableSpellbook.java","name":"UnstableSpellbook.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/UnstableSpellbook.java","language":"java","measures":[{"metric":"complexity","value":"74","bestValue":false},{"metric":"code_smells","value":"14","bestValue":false},{"metric":"cognitive_complexity","value":"55","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"135","bestValue":false},{"metric":"comment_lines_density","value":"2.8","bestValue":false},{"metric":"lines","value":"363","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical organization. The use of comments and documentation is minimal but sufficient. The code is modular and makes good use of inheritance and interfaces. However, the complexity of some methods could be reduced for better readability, and more inline comments could help in understanding the logic.","tokens":3347,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBN6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/TalismanOfForesight.java","name":"TalismanOfForesight.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/TalismanOfForesight.java","language":"java","measures":[{"metric":"complexity","value":"85","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"51","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"174","bestValue":false},{"metric":"comment_lines_density","value":"1.2","bestValue":false},{"metric":"lines","value":"421","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical flow. The comments and documentation are minimal but the code is self-explanatory. The use of constants and encapsulation is appropriate. However, the code could benefit from more comments explaining complex logic and potential edge cases. Overall, it is readable and maintainable.","tokens":1865,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBN4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/ChaliceOfBlood.java","name":"ChaliceOfBlood.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/ChaliceOfBlood.java","language":"java","measures":[{"metric":"complexity","value":"37","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"35","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"72","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"205","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical flow. The comments and licensing information are clear. However, the class is quite large and could benefit from further modularization. Some methods are lengthy and could be broken down into smaller, more manageable pieces. Overall, the readability is high, but there\u0027s room for improvement in terms of code organization.","tokens":2232,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/AlchemistsToolkit.java","name":"AlchemistsToolkit.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/AlchemistsToolkit.java","language":"java","measures":[{"metric":"complexity","value":"49","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"47","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"104","bestValue":false},{"metric":"comment_lines_density","value":"2.1","bestValue":false},{"metric":"lines","value":"260","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and consistent formatting. The use of comments and meaningful variable names enhances readability. However, the class is quite large and could benefit from further modularization to improve maintainability. Additionally, some methods could use more inline comments to explain complex logic.","tokens":3461,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/SandalsOfNature.java","name":"SandalsOfNature.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/SandalsOfNature.java","language":"java","measures":[{"metric":"complexity","value":"63","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"38","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"141","bestValue":false},{"metric":"comment_lines_density","value":"0.4","bestValue":false},{"metric":"lines","value":"351","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical flow. The use of comments and descriptive variable names enhances readability. However, the class is quite large and could benefit from further modularization to improve maintainability. Additionally, some methods are quite long and could be broken down into smaller, more focused methods.","tokens":2840,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBN-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/MasterThievesArmband.java","name":"MasterThievesArmband.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/MasterThievesArmband.java","language":"java","measures":[{"metric":"complexity","value":"60","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"37","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"143","bestValue":false},{"metric":"comment_lines_density","value":"0.8","bestValue":false},{"metric":"lines","value":"327","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical flow. The comments and documentation are minimal but sufficient. The use of constants and encapsulation is appropriate. However, the code could benefit from additional comments for complex logic and better handling of magic numbers. Overall, it is readable and maintainable.","tokens":3133,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/HornOfPlenty.java","name":"HornOfPlenty.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/HornOfPlenty.java","language":"java","measures":[{"metric":"complexity","value":"71","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"81","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"148","bestValue":false},{"metric":"comment_lines_density","value":"3.5","bestValue":false},{"metric":"lines","value":"342","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and consistent formatting. The use of comments and meaningful variable names enhances readability. However, the class is quite large and could benefit from being broken down into smaller, more manageable pieces. Additionally, some methods are quite long and could be refactored for better readability.","tokens":2622,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBN9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/LloydsBeacon.java","name":"LloydsBeacon.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/LloydsBeacon.java","language":"java","measures":[{"metric":"complexity","value":"56","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"57","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"130","bestValue":false},{"metric":"comment_lines_density","value":"0.4","bestValue":false},{"metric":"lines","value":"333","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and appropriate comments. The logic is straightforward and easy to follow. However, the use of magic numbers (e.g., 50 in the value method) could be improved by defining constants. Overall, the readability and quality are high.","tokens":1140,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Ankh.java","name":"Ankh.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Ankh.java","language":"java","measures":[{"metric":"complexity","value":"18","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"32","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"135","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and proper indentation enhances readability. However, the code could benefit from additional comments explaining the logic within the activate method, and the use of magic numbers (e.g., 0.3f, 5) could be replaced with named constants for better clarity.","tokens":705,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfDeepSleep.java","name":"StoneOfDeepSleep.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfDeepSleep.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"60","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are descriptive, and the use of comments is appropriate. The logic is clear and concise. However, the use of magic numbers and the lack of detailed comments explaining the purpose of certain methods could be improved for better readability and maintainability.","tokens":706,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOt","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfBlink.java","name":"StoneOfBlink.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfBlink.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"61","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of inheritance. The use of comments and licensing information is appropriate. However, the readability could be slightly improved by adding more comments explaining the logic within methods. Overall, the code is clean and maintainable.","tokens":836,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfEnchantment.java","name":"StoneOfEnchantment.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfEnchantment.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"87","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes a clear package structure. The class is concise and the method names are descriptive. However, the class lacks comments explaining the purpose and functionality of the methods, which could improve readability and maintainability.","tokens":505,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfBlast.java","name":"StoneOfBlast.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfBlast.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"2","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"39","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method overrides and proper use of inheritance. The comments and class-level documentation are helpful. However, the code could benefit from more detailed comments within methods to explain the logic, especially in the onThrow method. The use of magic numbers (e.g., 15 and 3 in value and energyVal methods) could be improved by defining them as constants.","tokens":804,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/Runestone.java","name":"Runestone.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/Runestone.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"3.5","bestValue":false},{"metric":"lines","value":"94","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method names, and appropriate comments. The logic is straightforward and easy to follow. However, there is a minor issue with the comment formatting and the use of magic numbers (e.g., lifespan \u003d 8) which could be improved by defining constants. Overall, the code is readable and maintainable.","tokens":903,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfFlock.java","name":"StoneOfFlock.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfFlock.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"2.2","bestValue":false},{"metric":"lines","value":"78","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, encapsulation, and clear method definitions. The comments and licensing information are clear. However, the readability could be slightly improved with more detailed comments explaining the logic within methods, especially for complex operations like the detach method in the Aggression class.","tokens":1118,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfAggression.java","name":"StoneOfAggression.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfAggression.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"25","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"112","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method names, and appropriate comments. The logic is straightforward and easy to follow. However, the use of magic numbers (e.g., \u00272\u0027 in PathFinder.buildDistanceMap) could be improved by defining constants. Additionally, more comments explaining the purpose of certain blocks of code would enhance readability.","tokens":937,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOr","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfShock.java","name":"StoneOfShock.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfShock.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"79","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical organization. The use of comments and the license information at the top is also a plus. However, the FIXME comment indicates a potential issue with the curItem static variable, which could be improved. Overall, the code is readable and maintainable.","tokens":993,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/InventoryStone.java","name":"InventoryStone.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/InventoryStone.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"22","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"120","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear and descriptive naming conventions, making it easy to understand. The use of inner classes and method overrides is appropriate. However, the code could benefit from additional comments explaining the purpose of certain methods and logic, especially for those unfamiliar with the game\u0027s context. Overall, it is readable and maintainable.","tokens":1504,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfAugmentation.java","name":"StoneOfAugmentation.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfAugmentation.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"51","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"161","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear class and method definitions, proper use of inheritance, and encapsulation. The comments and variable names are descriptive, enhancing readability. However, the nested class and some complex logic within the WndGuess class could be simplified for better readability. Overall, the code is of high quality but has room for minor improvements.","tokens":1974,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfIntuition.java","name":"StoneOfIntuition.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfIntuition.java","language":"java","measures":[{"metric":"complexity","value":"25","bestValue":false},{"metric":"code_smells","value":"11","bestValue":false},{"metric":"cognitive_complexity","value":"43","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"97","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"211","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of constants, clear method names, and logical flow. The comments and licensing information are clear. However, the nested loops and conditionals could be refactored for better readability. Overall, the code is maintainable and understandable.","tokens":960,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOm","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfClairvoyance.java","name":"StoneOfClairvoyance.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfClairvoyance.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"28","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"92","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and proper indentation enhances readability. However, the code could benefit from additional comments explaining the logic within the activate method, especially for those unfamiliar with the game\u0027s mechanics.","tokens":704,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfFear.java","name":"StoneOfFear.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfFear.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"56","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical flow. The use of comments and meaningful variable names enhances readability. However, the nested loops and the sorting logic could be optimized for better performance. Overall, the code is clean and maintainable.","tokens":1077,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfDisarming.java","name":"StoneOfDisarming.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfDisarming.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"2.9","bestValue":false},{"metric":"lines","value":"108","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear method names and comments, making it easy to understand. The use of constants for actions and the handling of quickslot logic are well-implemented. However, there are some minor issues like the lack of comments in some methods and the potential for magic numbers. Overall, the code is readable and maintainable.","tokens":1573,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/EquipableItem.java","name":"EquipableItem.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/EquipableItem.java","language":"java","measures":[{"metric":"complexity","value":"32","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"27","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"50","bestValue":false},{"metric":"comment_lines_density","value":"4.3","bestValue":false},{"metric":"lines","value":"163","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and meaningful variable names. The use of comments and documentation is minimal but the code is still readable. The logic is straightforward and easy to follow. However, there are some areas where additional comments could improve understanding, especially for complex logic.","tokens":1507,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/ArcaneResin.java","name":"ArcaneResin.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/ArcaneResin.java","language":"java","measures":[{"metric":"complexity","value":"25","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"48","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"188","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and the method names are descriptive. The use of comments and licensing information is appropriate. However, the class could benefit from additional comments explaining the purpose and functionality of the methods and fields for better readability.","tokens":592,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKnf7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/remains/CloakScrap.java","name":"CloakScrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/remains/CloakScrap.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"44","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It uses meaningful variable names and includes comments for licensing. The logic is clear and concise, with appropriate use of loops and conditionals. However, it could benefit from additional comments explaining the purpose of certain blocks of code, and the magic number \u00275\u0027 could be replaced with a named constant for better readability.","tokens":955,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKnf5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/remains/BowFragment.java","name":"BowFragment.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/remains/BowFragment.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"1.9","bestValue":false},{"metric":"lines","value":"79","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper package and import statements. The class and method names are descriptive, and the logic is straightforward. However, the class lacks comments explaining the purpose of the methods and variables, which could improve readability and maintainability.","tokens":599,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKnf6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/remains/BrokenHilt.java","name":"BrokenHilt.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/remains/BrokenHilt.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"3","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"42","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper package declarations, imports, and class definitions. The method names are descriptive, and the logic is clear. However, the class lacks comments explaining the purpose of the methods and variables, which could improve readability for other developers.","tokens":642,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKnf4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/remains/SealShard.java","name":"SealShard.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/remains/SealShard.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"47","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of inheritance, and encapsulation. The use of comments and consistent formatting enhances readability. However, the switch statement could be improved by using a more scalable design pattern like a factory method. Overall, the code is clean and maintainable.","tokens":786,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKnf8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/remains/RemainsItem.java","name":"RemainsItem.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/remains/RemainsItem.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"95","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and the method names are descriptive. The use of comments and licensing information is appropriate. However, the class could benefit from additional comments explaining the purpose and functionality of the methods and fields. Overall, the readability and quality are high.","tokens":576,"sonarData":{"component":{"id":"AY2Di9rxW1YJaXpvKnf3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/remains/BrokenStaff.java","name":"BrokenStaff.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/remains/BrokenStaff.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"44","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes appropriate comments and licensing information. The class is simple and concise, with clear variable names and a straightforward method. However, the class could benefit from additional comments explaining the purpose of the \u0027image\u0027 and \u0027energy\u0027 fields for better readability.","tokens":519,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBO-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/SmallRation.java","name":"SmallRation.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/SmallRation.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"3","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"39","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper class and method definitions. The use of inner classes for recipes is clear and logical. However, there are commented-out lines that seem unnecessary and could be removed for better readability. Additionally, the class and method names could be more descriptive to improve clarity.","tokens":744,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/StewedMeat.java","name":"StewedMeat.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/StewedMeat.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"4.7","bestValue":false},{"metric":"lines","value":"80","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. However, the code could benefit from additional comments explaining the logic within methods, especially for non-obvious parts like the SeedCounter logic. Overall, it is readable and maintainable.","tokens":819,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBO6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/Berry.java","name":"Berry.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/Berry.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"72","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of constants, and logical flow. The use of comments and documentation is minimal but the code is still readable. The class adheres to single responsibility principle and uses inheritance effectively. However, the readability could be improved with more comments and better variable naming in some places.","tokens":1253,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/Food.java","name":"Food.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/Food.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"137","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The class and method names are descriptive, and the code is easy to follow. However, the switch statement could be refactored for better readability, and there are some magic numbers that could be replaced with constants for clarity.","tokens":965,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBO_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/FrozenCarpaccio.java","name":"FrozenCarpaccio.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/FrozenCarpaccio.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"22","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"82","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. Variable and method names are descriptive, enhancing readability. The use of comments for licensing is clear. However, the code could benefit from additional comments explaining the logic within methods, especially for complex operations like \u0027effect\u0027.","tokens":762,"sonarData":{"component":{"id":"AYh9pBdwXMB54cnrmw_f","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/PhantomMeat.java","name":"PhantomMeat.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/PhantomMeat.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"63","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and switch statements. The use of comments and clear naming conventions enhances readability. However, the code could benefit from additional comments explaining the logic behind certain decisions, and there is a minor redundancy in the switch statements that could be optimized.","tokens":1452,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBO8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/Pasty.java","name":"Pasty.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/Pasty.java","language":"java","measures":[{"metric":"complexity","value":"31","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"55","bestValue":false},{"metric":"comment_lines_density","value":"3.9","bestValue":false},{"metric":"lines","value":"164","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions, uses meaningful variable names, and includes proper package and import statements. The class is concise and focused on its purpose. However, the use of magic numbers (e.g., 8 in the value method) could be improved by defining constants. Overall, the code is of high quality but could benefit from minor enhancements.","tokens":571,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/ChargrilledMeat.java","name":"ChargrilledMeat.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/ChargrilledMeat.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"45","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes proper use of inheritance and method overriding. The comments and licensing information are clear. Variable and method names are descriptive, enhancing readability. However, the nested class could be better documented, and some logic within the loops could be simplified for better readability.","tokens":924,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBO9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/MeatPie.java","name":"MeatPie.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/MeatPie.java","language":"java","measures":[{"metric":"complexity","value":"19","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"99","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear and descriptive variable names, and the methods are logically organized. The use of comments is minimal but sufficient. However, the code could benefit from additional comments for complex logic and better handling of magic numbers. Overall, it is readable and maintainable.","tokens":2877,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBO7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/Blandfruit.java","name":"Blandfruit.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/Blandfruit.java","language":"java","measures":[{"metric":"complexity","value":"79","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"64","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"132","bestValue":false},{"metric":"comment_lines_density","value":"0.9","bestValue":false},{"metric":"lines","value":"310","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. Variable and method names are descriptive. However, the switch statement could be refactored for better readability, and the use of magic numbers (e.g., Random.Int(5)) could be improved by defining constants.","tokens":996,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/MysteryMeat.java","name":"MysteryMeat.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/MysteryMeat.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"93","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear class and method definitions, proper use of inheritance, and encapsulation. The comments and licensing information are comprehensive. However, the readability could be slightly improved with more detailed comments within methods and better variable naming for clarity.","tokens":776,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/AquaBlast.java","name":"AquaBlast.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/AquaBlast.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"70","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, encapsulation, and clear method definitions. The comments and variable names are descriptive, enhancing readability. However, the use of reflection can be risky and may affect performance. Additionally, the code could benefit from more detailed comments explaining complex logic.","tokens":1420,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/ReclaimTrap.java","name":"ReclaimTrap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/ReclaimTrap.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"38","bestValue":false},{"metric":"comment_lines_density","value":"3.8","bestValue":false},{"metric":"lines","value":"151","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and meaningful. However, the code could benefit from additional comments explaining the logic in more detail, especially in the \u0027affectTarget\u0027 method. Overall, it is readable and maintainable.","tokens":1341,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/TelekineticGrab.java","name":"TelekineticGrab.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/TelekineticGrab.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"23","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"39","bestValue":false},{"metric":"comment_lines_density","value":"4.3","bestValue":false},{"metric":"lines","value":"138","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and use of comments. The use of abstract methods and callbacks is appropriate. However, the presence of a FIXME comment indicates a known issue that needs addressing, and the use of a static variable for curItem could be improved. Overall, the code is readable and maintainable but has room for minor improvements.","tokens":1069,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/TargetedSpell.java","name":"TargetedSpell.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/TargetedSpell.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"22","bestValue":false},{"metric":"comment_lines_density","value":"4.5","bestValue":false},{"metric":"lines","value":"107","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear class and method names, making it easy to understand. The use of inner classes and anonymous classes is appropriate. However, the code could benefit from additional comments explaining the logic, especially in complex methods. The TODO comment suggests incomplete functionality, which slightly affects the overall quality.","tokens":1966,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/Alchemize.java","name":"Alchemize.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/Alchemize.java","language":"java","measures":[{"metric":"complexity","value":"24","bestValue":false},{"metric":"code_smells","value":"11","bestValue":false},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"79","bestValue":false},{"metric":"comment_lines_density","value":"1.2","bestValue":false},{"metric":"lines","value":"230","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical flow. The use of comments and documentation is minimal but the code is still understandable. The class is cohesive and the methods are concise. However, the readability could be improved with more comments and better variable naming in some places.","tokens":2379,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/SummonElemental.java","name":"SummonElemental.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/SummonElemental.java","language":"java","measures":[{"metric":"complexity","value":"39","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"25","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"90","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"240","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and abstraction. The use of comments and method names are clear, enhancing readability. However, the presence of a FIXME comment indicates a known issue that needs addressing, which slightly reduces the overall quality. The code could also benefit from additional comments explaining the logic in more detail.","tokens":882,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/InventorySpell.java","name":"InventorySpell.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/InventorySpell.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"3.6","bestValue":false},{"metric":"lines","value":"95","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of inner classes for specific functionality is appropriate. However, the code could benefit from more detailed comments explaining the purpose of certain methods and variables. Additionally, the \u0027value\u0027 method\u0027s calculation could be more clearly documented.","tokens":1049,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/FeatherFall.java","name":"FeatherFall.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/FeatherFall.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"3.1","bestValue":false},{"metric":"lines","value":"103","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and logical flow. The use of comments and proper indentation enhances readability. However, the nested if-else blocks in the onItemSelected method could be refactored for better readability. Overall, the code is maintainable and understandable.","tokens":1284,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMe","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/Recycle.java","name":"Recycle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/Recycle.java","language":"java","measures":[{"metric":"complexity","value":"19","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"18","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"29","bestValue":false},{"metric":"comment_lines_density","value":"1.3","bestValue":false},{"metric":"lines","value":"113","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of inheritance, and encapsulation. The comments and licensing information are clear. However, the readability could be slightly improved with more comments explaining the logic within methods, especially for complex conditional statements. Overall, it is a high-quality code.","tokens":973,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/MagicalInfusion.java","name":"MagicalInfusion.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/MagicalInfusion.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"1.8","bestValue":false},{"metric":"lines","value":"94","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and appropriate comments. The use of static blocks for initialization and the separation of concerns in methods enhance readability. However, the code could benefit from additional comments explaining the logic in more detail, especially in the Recipe class. Overall, it is clean and maintainable.","tokens":1408,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/ArcaneCatalyst.java","name":"ArcaneCatalyst.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/ArcaneCatalyst.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"41","bestValue":false},{"metric":"comment_lines_density","value":"1.0","bestValue":false},{"metric":"lines","value":"139","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and logical flow. The use of comments and proper indentation enhances readability. However, the class could benefit from additional comments explaining the purpose of certain blocks, especially for complex logic. The use of magic numbers in the value method could be replaced with named constants for better clarity.","tokens":1298,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMc","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/CurseInfusion.java","name":"CurseInfusion.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/CurseInfusion.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"23","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"3.7","bestValue":false},{"metric":"lines","value":"116","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and appropriate use of comments. The class and method responsibilities are clear, and the use of imports is organized. However, the code could benefit from additional comments explaining the logic within methods for better readability. Overall, it demonstrates a high level of quality and readability.","tokens":996,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/WildEnergy.java","name":"WildEnergy.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/WildEnergy.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"3.9","bestValue":false},{"metric":"lines","value":"86","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical flow. The use of nested classes and overriding methods is appropriate. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which can affect readability. Overall, it demonstrates a high level of quality and maintainability.","tokens":2015,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/BeaconOfReturning.java","name":"BeaconOfReturning.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/BeaconOfReturning.java","language":"java","measures":[{"metric":"complexity","value":"34","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"44","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"77","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"233","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions and proper use of inheritance. The use of comments and meaningful variable names enhances readability. However, the class could benefit from additional comments explaining the purpose of each method and the overall class functionality. The use of magic strings could be replaced with constants for better maintainability.","tokens":722,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/Spell.java","name":"Spell.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/Spell.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"79","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear class and method definitions, proper use of imports, and meaningful variable names. The comments and licensing information are also well-documented. However, the nested if-else statements could be refactored for better readability, and some magic numbers (like 30, 40, 8) could be replaced with named constants for clarity.","tokens":985,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/PhaseShift.java","name":"PhaseShift.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/PhaseShift.java","language":"java","measures":[{"metric":"complexity","value":"8","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"15","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"87","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of constants and comments is appropriate. However, the logic within the execute method is somewhat complex and could benefit from additional comments for clarity. Overall, the code is readable and maintainable, but slight improvements could be made for better readability.","tokens":1443,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Waterskin.java","name":"Waterskin.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Waterskin.java","language":"java","measures":[{"metric":"complexity","value":"22","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"22","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"55","bestValue":false},{"metric":"comment_lines_density","value":"0.8","bestValue":false},{"metric":"lines","value":"185","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of constants and encapsulation is appropriate. However, the code could benefit from additional comments explaining complex logic, and some methods could be broken down further for better readability.","tokens":1266,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBO5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Dewdrop.java","name":"Dewdrop.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Dewdrop.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"19","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"43","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"132","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and proper indentation enhances readability. However, the code could benefit from additional comments explaining the logic within the methods, especially for those unfamiliar with the game\u0027s context. Overall, it demonstrates good practices and maintainability.","tokens":712,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBK5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfLiquidFlame.java","name":"PotionOfLiquidFlame.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfLiquidFlame.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"64","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and focused on its purpose. Variable names are clear, and the use of comments is appropriate. However, the use of magic numbers (e.g., 1000 in Blob.seed) could be improved by defining them as constants. Overall, the code is readable and maintainable.","tokens":680,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBK0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfParalyticGas.java","name":"PotionOfParalyticGas.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfParalyticGas.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"57","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method names, and appropriate comments. The logic is straightforward and easy to follow. However, the use of magic numbers (e.g., Roots.DURATION*2f) could be improved by defining constants. Overall, the readability and quality are high.","tokens":747,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfSnapFreeze.java","name":"PotionOfSnapFreeze.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfSnapFreeze.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"65","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of inheritance and method overriding. The use of comments and clear naming conventions enhances readability. However, the class could benefit from additional comments explaining the purpose of the methods and properties for better maintainability.","tokens":600,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKp","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfStamina.java","name":"PotionOfStamina.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfStamina.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"45","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of access modifiers. The comments and licensing information are comprehensive. However, the use of magic numbers (e.g., 6, 32) and some minor redundancy in finding characters could be improved for better readability and maintainability.","tokens":1095,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKj","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfCleansing.java","name":"PotionOfCleansing.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfCleansing.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"24","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"114","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of nested classes and method overrides is appropriate. However, the code could benefit from additional comments explaining complex logic, and some variable names could be more descriptive. Overall, it is readable and maintainable.","tokens":1688,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKm","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfDivineInspiration.java","name":"PotionOfDivineInspiration.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfDivineInspiration.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"31","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"56","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"188","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of inheritance and method overriding. The class is concise and focused on a single responsibility. However, the use of magic numbers (e.g., MagicalSight.DURATION) could be improved by defining constants for better readability.","tokens":609,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfMagicalSight.java","name":"PotionOfMagicalSight.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfMagicalSight.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"5","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"47","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of inner classes and callbacks is appropriate for the context. However, the code could benefit from additional comments explaining complex logic, and some variable names could be more descriptive. Overall, it is readable and maintainable.","tokens":2028,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfDragonsBreath.java","name":"PotionOfDragonsBreath.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfDragonsBreath.java","language":"java","measures":[{"metric":"complexity","value":"30","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"67","bestValue":false},{"metric":"comment_lines_density","value":"4.2","bestValue":false},{"metric":"lines","value":"218","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper naming conventions and clear separation of concerns. The use of comments and licensing information is also commendable. However, the code could benefit from additional comments explaining the logic within the shatter method, especially for those unfamiliar with the game\u0027s mechanics. Overall, it is readable and maintainable.","tokens":732,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfStormClouds.java","name":"PotionOfStormClouds.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfStormClouds.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"62","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical flow. The use of comments and meaningful variable names enhances readability. However, the nested anonymous class and the use of multiple if-else conditions could be simplified for better readability. Overall, the code is of high quality but could benefit from minor refactoring.","tokens":1270,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKt","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfMastery.java","name":"PotionOfMastery.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfMastery.java","language":"java","measures":[{"metric":"complexity","value":"19","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"1.1","bestValue":false},{"metric":"lines","value":"132","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and proper indentation enhances readability. However, the logic within the shatter method could be further modularized for better readability and maintainability.","tokens":721,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKr","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfShroudingFog.java","name":"PotionOfShroudingFog.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfShroudingFog.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"63","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using static blocks for initialization and overriding methods for specific behavior. The use of HashMaps for mapping regular to exotic potions is clear and efficient. However, the code could benefit from more comments explaining the purpose of certain methods and mappings. Additionally, the use of reflection can be risky and may impact performance.","tokens":1729,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/ExoticPotion.java","name":"ExoticPotion.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/ExoticPotion.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"43","bestValue":false},{"metric":"comment_lines_density","value":"2.9","bestValue":false},{"metric":"lines","value":"155","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper package and import statements. The class and method names are descriptive, and the logic is straightforward. However, the class lacks comments explaining the purpose of the methods and the logic within them, which could improve readability and maintainability.","tokens":556,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfEarthenArmor.java","name":"PotionOfEarthenArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfEarthenArmor.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"3","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"42","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are descriptive, and the logic is clear. The use of comments and proper indentation enhances readability. However, the code could benefit from additional comments explaining the purpose of certain calculations and conditions, especially for those unfamiliar with the game\u0027s mechanics.","tokens":731,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfShielding.java","name":"PotionOfShielding.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfShielding.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"3.8","bestValue":false},{"metric":"lines","value":"53","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are descriptive, and the logic is clear. The use of comments and proper indentation enhances readability. However, the code could benefit from additional comments explaining the purpose of certain operations, especially the logic within the shatter method. Overall, it is a high-quality and readable piece of code.","tokens":768,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfCorrosiveGas.java","name":"PotionOfCorrosiveGas.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/exotic/PotionOfCorrosiveGas.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"62","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The class is concise and focused on its purpose. Variable and method names are clear and descriptive. However, the use of magic numbers (e.g., 40 in the value method) could be improved by defining them as constants. Overall, the readability and quality are high.","tokens":673,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBK6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfHaste.java","name":"PotionOfHaste.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfHaste.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"52","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of comments. The class and method responsibilities are clear, and the code is easy to read and understand. However, the use of magic numbers (e.g., healing values) could be improved by defining constants. Overall, the code quality is high, but there is minor room for improvement.","tokens":1115,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfHealing.java","name":"PotionOfHealing.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfHealing.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"24","bestValue":false},{"metric":"comment_lines_density","value":"3.1","bestValue":false},{"metric":"lines","value":"95","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of comments. The class is concise and focused on a single responsibility. However, the use of magic numbers (e.g., 30 in the value method) could be improved by defining constants. Overall, the readability and quality are high.","tokens":724,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfMindVision.java","name":"PotionOfMindVision.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfMindVision.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"58","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and proper naming conventions enhances readability. However, the use of reflection and random instantiation could be optimized for better performance and maintainability. Additionally, the nested class could be separated for clarity.","tokens":1310,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBK7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/AlchemicalCatalyst.java","name":"AlchemicalCatalyst.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/AlchemicalCatalyst.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"45","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"143","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and encapsulation. The class is concise and focused on its purpose. However, the use of magic numbers (e.g., 40) could be improved by defining constants. Overall, the code is readable and maintainable.","tokens":662,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfInvisibility.java","name":"PotionOfInvisibility.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfInvisibility.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"53","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, clear method names, and concise logic. The use of comments and licensing information is also appropriate. However, the code could benefit from additional inline comments to explain the purpose of certain operations, especially for those who may not be familiar with the game\u0027s mechanics.","tokens":711,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfStrength.java","name":"PotionOfStrength.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfStrength.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"65","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, clear method names, and logical flow. The use of comments and meaningful variable names enhances readability. However, the use of magic numbers (e.g., DISTANCE \u003d 3) and the lack of detailed comments on complex logic could be improved. Overall, it demonstrates good coding practices and readability.","tokens":1065,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBK8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfPurity.java","name":"PotionOfPurity.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfPurity.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"15","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"105","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of package imports, method overrides, and encapsulation. The class is concise and focused on its purpose. However, the use of magic numbers (e.g., 10 in Blob.seed) and lack of comments explaining the logic could be improved for better readability and maintainability.","tokens":706,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBK1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfFrost.java","name":"PotionOfFrost.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfFrost.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"64","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class is quite large and could benefit from further modularization. Additionally, the use of static initializers for collections could be simplified. Overall, the code is maintainable and understandable.","tokens":4343,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBK3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/Potion.java","name":"Potion.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/Potion.java","language":"java","measures":[{"metric":"complexity","value":"98","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"79","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"170","bestValue":false},{"metric":"comment_lines_density","value":"2.1","bestValue":false},{"metric":"lines","value":"542","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method definitions, and appropriate use of comments. The class and method names are descriptive, enhancing readability. However, the use of magic numbers (e.g., 120) without explanation could be improved by defining constants. Overall, the code is clean and maintainable.","tokens":874,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/brews/BlizzardBrew.java","name":"BlizzardBrew.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/brews/BlizzardBrew.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"2.1","bestValue":false},{"metric":"lines","value":"81","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method definitions, and appropriate comments. The class and method names are descriptive, enhancing readability. However, the use of magic numbers (e.g., 40, 20) could be improved by defining constants. Overall, the code is clean and maintainable.","tokens":882,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/brews/ShockingBrew.java","name":"ShockingBrew.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/brews/ShockingBrew.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"2.2","bestValue":false},{"metric":"lines","value":"77","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The use of comments and licensing information is clear. Method names are descriptive, and the class adheres to the single responsibility principle. However, the code could benefit from additional comments explaining the logic within methods, and the use of magic strings like \u0027AC_DRINK\u0027 and \u0027AC_THROW\u0027 could be improved by defining them as constants.","tokens":619,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/brews/Brew.java","name":"Brew.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/brews/Brew.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"0","bestValue":true},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"58","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper package naming, clear class and method definitions, and appropriate use of comments. The logic is straightforward and easy to follow. However, the code could benefit from additional comments explaining the purpose of certain operations, especially within the shatter method. Overall, it is readable and maintains a high level of quality.","tokens":935,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/brews/CausticBrew.java","name":"CausticBrew.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/brews/CausticBrew.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"17","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"85","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method definitions, and appropriate comments. The use of constants and clear variable names enhances readability. However, the code could benefit from additional comments explaining the logic within methods, especially for complex operations like the shatter method. Overall, it is clean and maintainable.","tokens":881,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/brews/InfernalBrew.java","name":"InfernalBrew.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/brews/InfernalBrew.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"2.1","bestValue":false},{"metric":"lines","value":"82","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, meaningful method names, and clear logic. The use of external libraries and assets is well-handled. However, the class could benefit from additional comments explaining the purpose of each method and the overall class functionality for better readability.","tokens":795,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfLevitation.java","name":"PotionOfLevitation.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfLevitation.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"69","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The class is concise and the methods are clear in their purpose. However, the use of magic numbers (e.g., 6, 32, 0xFFFF00) could be improved by defining them as constants for better readability and maintainability.","tokens":693,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBK4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfExperience.java","name":"PotionOfExperience.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfExperience.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"60","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper package declarations, imports, and class definitions. The methods are concise and clear, and the use of comments and documentation is appropriate. However, the code could benefit from additional comments explaining the logic behind certain operations, especially for those unfamiliar with the game\u0027s context.","tokens":784,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfIcyTouch.java","name":"ElixirOfIcyTouch.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfIcyTouch.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"2.8","bestValue":false},{"metric":"lines","value":"69","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of inheritance. The comments and licensing information are comprehensive. However, the code could benefit from additional inline comments explaining the logic, especially for those unfamiliar with the game\u0027s mechanics. Overall, it is readable and maintainable.","tokens":819,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKa","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfDragonsBlood.java","name":"ElixirOfDragonsBlood.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfDragonsBlood.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"2.6","bestValue":false},{"metric":"lines","value":"72","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured, with clear class and method definitions. It follows standard Java conventions and includes appropriate comments and licensing information. The use of descriptive variable names and method overrides enhances readability. However, the inline initialization blocks could be better documented, and the reasoning behind certain values (e.g., cost) could be clarified.","tokens":791,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfToxicEssence.java","name":"ElixirOfToxicEssence.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfToxicEssence.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"2.8","bestValue":false},{"metric":"lines","value":"70","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and licensing information is appropriate. However, the class is quite simple and lacks complexity, which limits the evaluation of more advanced coding practices.","tokens":487,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/Elixir.java","name":"Elixir.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/Elixir.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"1","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"36","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of inheritance. The comments and licensing information are comprehensive. However, the code could benefit from additional inline comments explaining the logic, especially in the \u0027shatter\u0027 method. Overall, it is readable and maintainable but could be slightly improved with more detailed documentation.","tokens":991,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKe","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfHoneyedHealing.java","name":"ElixirOfHoneyedHealing.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfHoneyedHealing.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"21","bestValue":false},{"metric":"comment_lines_density","value":"1.8","bestValue":false},{"metric":"lines","value":"90","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear class and method definitions, proper use of access modifiers, and meaningful variable names. The comments and licensing information are also well-documented. However, the code could benefit from additional inline comments for complex logic and better exception handling.","tokens":1433,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfAquaticRejuvenation.java","name":"ElixirOfAquaticRejuvenation.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfAquaticRejuvenation.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"43","bestValue":false},{"metric":"comment_lines_density","value":"0.9","bestValue":false},{"metric":"lines","value":"165","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear class and method definitions, and appropriate comments. The use of inner classes for Recipe and HTBoost is logical and maintains encapsulation. However, some variable names could be more descriptive, and there are minor redundancies in the apply method. Overall, the code is readable and maintainable.","tokens":1295,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfMight.java","name":"ElixirOfMight.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfMight.java","language":"java","measures":[{"metric":"complexity","value":"15","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"35","bestValue":false},{"metric":"comment_lines_density","value":"1.0","bestValue":false},{"metric":"lines","value":"156","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are descriptive, and the use of comments is appropriate. The logic is clear and concise. However, the code could benefit from additional comments explaining the purpose of certain operations, especially for those unfamiliar with the game\u0027s mechanics. Overall, it is readable and maintainable.","tokens":731,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBKc","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfArcaneArmor.java","name":"ElixirOfArcaneArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/elixirs/ElixirOfArcaneArmor.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"62","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and focused on its purpose. Variable and method names are clear and descriptive. The use of comments is minimal but the code is self-explanatory. The only minor issue is the lack of detailed comments which could help in understanding the logic faster.","tokens":671,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBK2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfToxicGas.java","name":"PotionOfToxicGas.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/potions/PotionOfToxicGas.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"57","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and proper indentation enhances readability. However, the class is quite large and could benefit from further modularization. Additionally, some methods are complex and could be broken down into smaller, more manageable pieces.","tokens":2538,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/KindOfWeapon.java","name":"KindOfWeapon.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/KindOfWeapon.java","language":"java","measures":[{"metric":"complexity","value":"50","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"69","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"107","bestValue":false},{"metric":"comment_lines_density","value":"2.4","bestValue":false},{"metric":"lines","value":"272","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation, use of constants, and clear method names. The comments and TODOs are helpful for future improvements. However, there are some areas where readability could be improved, such as reducing the length of the class by breaking it into smaller classes or methods. Additionally, some methods could benefit from more detailed comments explaining their purpose.","tokens":4670,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Item.java","name":"Item.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Item.java","language":"java","measures":[{"metric":"complexity","value":"139","bestValue":false},{"metric":"code_smells","value":"38","bestValue":false},{"metric":"cognitive_complexity","value":"117","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"240","bestValue":false},{"metric":"comment_lines_density","value":"4.2","bestValue":false},{"metric":"lines","value":"677","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The class and method names are descriptive, and the comments are helpful. The use of nested classes and method overrides is appropriate. However, the code could benefit from additional comments explaining the logic in more detail, especially within the NoisemakerFuse class. Overall, the readability and quality are high, but there is room for minor improvements.","tokens":1277,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/Noisemaker.java","name":"Noisemaker.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/Noisemaker.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"35","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"41","bestValue":false},{"metric":"comment_lines_density","value":"9.3","bestValue":false},{"metric":"lines","value":"157","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear comments and uses meaningful variable names. However, there are some minor issues such as the use of a static variable for \u0027lightingFuse\u0027 which is noted as a FIXME. Additionally, the code could benefit from further modularization to improve readability and maintainability.","tokens":3357,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/Bomb.java","name":"Bomb.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/Bomb.java","language":"java","measures":[{"metric":"complexity","value":"72","bestValue":false},{"metric":"code_smells","value":"16","bestValue":false},{"metric":"cognitive_complexity","value":"90","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"163","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"432","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. Variable and method names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining the logic within the explode method, and there is a minor typo in the comment at the end.","tokens":900,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/WoollyBomb.java","name":"WoollyBomb.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/WoollyBomb.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"10","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"2.1","bestValue":false},{"metric":"lines","value":"80","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and clear separation of concerns. Variable and method names are descriptive, enhancing readability. The use of comments is minimal but the code is self-explanatory. However, the code could benefit from additional comments for complex logic and better exception handling.","tokens":1082,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/ArcaneBomb.java","name":"ArcaneBomb.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/ArcaneBomb.java","language":"java","measures":[{"metric":"complexity","value":"14","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"19","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"27","bestValue":false},{"metric":"comment_lines_density","value":"3.0","bestValue":false},{"metric":"lines","value":"100","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and licensing information is appropriate. However, the logic within the explode method could be further modularized for better readability and maintainability. Overall, the code is clean and easy to understand.","tokens":772,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/FrostBomb.java","name":"FrostBomb.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/FrostBomb.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"2.8","bestValue":false},{"metric":"lines","value":"63","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and encapsulation. The comments and variable names are clear, enhancing readability. However, the logic within the \u0027explode\u0027 method could be further modularized for better readability and maintainability. Overall, it demonstrates good coding practices.","tokens":942,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/ShrapnelBomb.java","name":"ShrapnelBomb.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/ShrapnelBomb.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"14","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"3.7","bestValue":false},{"metric":"lines","value":"87","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. Variable and method names are descriptive, enhancing readability. However, the nested loops and conditionals could be refactored for better clarity and maintainability. Overall, the code is of high quality but has room for minor improvements.","tokens":975,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/HolyBomb.java","name":"HolyBomb.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/HolyBomb.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"3.9","bestValue":false},{"metric":"lines","value":"87","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The logic is clear and concise, and variable names are meaningful. However, the code could benefit from additional comments explaining the purpose of certain operations, especially within the explode method. Overall, it is readable and maintainable.","tokens":753,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/Flashbang.java","name":"Flashbang.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/Flashbang.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"66","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and clear separation of concerns. The use of comments and meaningful variable names enhances readability. However, the nested if-else statements and the switch-case block could be refactored for better readability. Additionally, some magic numbers are present which could be replaced with constants for clarity.","tokens":1281,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/RegrowthBomb.java","name":"RegrowthBomb.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/RegrowthBomb.java","language":"java","measures":[{"metric":"complexity","value":"21","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"20","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"36","bestValue":false},{"metric":"comment_lines_density","value":"2.4","bestValue":false},{"metric":"lines","value":"119","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and clear separation of concerns. Variable and method names are descriptive, enhancing readability. However, the nested loops and conditionals could be refactored for better clarity and maintainability. Additionally, comments explaining complex logic would improve understanding.","tokens":1082,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/ShockBomb.java","name":"ShockBomb.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/ShockBomb.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"92","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and licensing information is appropriate. However, the code could benefit from additional comments explaining the logic within the explode method, and the magic numbers (2, 10, 5, 20, 30) could be replaced with named constants for better readability.","tokens":803,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/Firebomb.java","name":"Firebomb.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/Firebomb.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"65","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and the methods are clear and self-explanatory. The use of comments and licensing information is appropriate. However, the class could benefit from additional comments explaining the purpose of the class and its methods for better readability.","tokens":549,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/GooBlob.java","name":"GooBlob.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/GooBlob.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"54","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured, with clear class and method definitions. The use of comments and licensing information is appropriate. The class is simple and easy to understand, with good use of overrides and properties. However, the reasoning could be improved by adding more comments explaining the purpose of the class and its methods.","tokens":525,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/DwarfToken.java","name":"DwarfToken.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/DwarfToken.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"5","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"46","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, encapsulation, and clear method definitions. The comments are helpful, especially for understanding the logic behind wraith summoning. However, the code could benefit from more detailed comments in some areas and better handling of magic numbers. Overall, it is readable and maintainable.","tokens":1683,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/CorpseDust.java","name":"CorpseDust.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/CorpseDust.java","language":"java","measures":[{"metric":"complexity","value":"27","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"22","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"53","bestValue":false},{"metric":"comment_lines_density","value":"7.2","bestValue":false},{"metric":"lines","value":"183","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes appropriate comments and licensing information. The class is simple and straightforward, with clear method overrides and logical functionality. However, the class could benefit from additional comments explaining the purpose of each method and the class itself for better readability.","tokens":553,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/MetalShard.java","name":"MetalShard.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/MetalShard.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"54","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments are helpful, and the variable names are descriptive. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which can affect readability.","tokens":2290,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBON","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/Pickaxe.java","name":"Pickaxe.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/Pickaxe.java","language":"java","measures":[{"metric":"complexity","value":"46","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"44","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"84","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"271","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It includes comments explaining the purpose of the class and its methods. The use of meaningful variable names and adherence to Java conventions is evident. However, the class is relatively simple and does not showcase advanced coding practices or error handling, which limits the ability to fully assess the overall quality.","tokens":545,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/RatSkull.java","name":"RatSkull.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/RatSkull.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"10.5","bestValue":false},{"metric":"lines","value":"47","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, method overrides, and clear separation of concerns. The comments and variable names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining the logic in complex sections, and some methods could be refactored for better clarity and maintainability.","tokens":1728,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOL","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/CeremonialCandle.java","name":"CeremonialCandle.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/CeremonialCandle.java","language":"java","measures":[{"metric":"complexity","value":"32","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"54","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"79","bestValue":false},{"metric":"comment_lines_density","value":"0.7","bestValue":false},{"metric":"lines","value":"203","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured, easy to read, and follows standard Java conventions. The class is concise and the use of comments is appropriate. However, the class lacks detailed comments explaining the purpose of the class and its methods, which could improve readability and maintainability.","tokens":516,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/DarkGold.java","name":"DarkGold.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/DarkGold.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"5","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"46","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured, concise, and follows standard Java conventions. The class is small and focused, with clear method overrides and appropriate use of encapsulation. The use of comments and licensing information is good practice. However, the class could benefit from additional comments explaining the purpose of the class and its methods for better readability.","tokens":565,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/Embers.java","name":"Embers.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/quest/Embers.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"5","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"51","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of access modifiers, and logical flow. The comments and documentation are helpful. However, the code could benefit from further modularization to improve readability and maintainability. Some methods are quite long and could be broken down into smaller, more focused methods.","tokens":2747,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBME","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/ClassArmor.java","name":"ClassArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/ClassArmor.java","language":"java","measures":[{"metric":"complexity","value":"57","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"76","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"134","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"343","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"75","reasoning":"The code is concise and follows standard Java conventions. The class is well-structured and the use of comments is appropriate. However, the class lacks detailed documentation and context for its purpose and functionality, which could improve readability and maintainability.","tokens":454,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/RogueArmor.java","name":"RogueArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/RogueArmor.java","language":"java","measures":[{"metric":"complexity","value":"0","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"1","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"32","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is concise and follows standard Java conventions. The class is well-organized and the use of package and import statements is appropriate. The class-level comment provides clear licensing information. However, the class itself is very simple and lacks detailed comments or documentation for the properties and methods, which could improve readability and maintainability.","tokens":471,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/WarriorArmor.java","name":"WarriorArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/WarriorArmor.java","language":"java","measures":[{"metric":"complexity","value":"0","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"1","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"32","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes appropriate comments. The use of descriptive names for classes, methods, and variables enhances readability. However, the class is relatively simple and does not demonstrate handling of more complex logic or error conditions, which could provide a more comprehensive assessment of code quality.","tokens":576,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Obfuscation.java","name":"Obfuscation.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Obfuscation.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"2","bestValue":false},{"metric":"comment_lines_density","value":"6.3","bestValue":false},{"metric":"lines","value":"44","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured, with clear comments and proper use of Java conventions. The logic is straightforward and easy to follow. However, the use of magic numbers and lack of detailed comments on the method\u0027s internal logic slightly reduce readability. Overall, it is a high-quality code.","tokens":717,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLt","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Thorns.java","name":"Thorns.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Thorns.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"11.1","bestValue":false},{"metric":"lines","value":"60","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, comments explaining logic, and proper use of access modifiers. The use of constants and utility methods enhances readability. However, the logic within the proc method could be further modularized for better readability and maintainability. Overall, the code is clean and understandable.","tokens":797,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBL1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Repulsion.java","name":"Repulsion.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Repulsion.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"8.6","bestValue":false},{"metric":"lines","value":"67","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper package and import statements. The class and method names are clear and descriptive. The use of comments is minimal but sufficient for understanding the purpose of the methods. However, the code could benefit from additional comments explaining the logic in more detail.","tokens":570,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBL2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Flow.java","name":"Flow.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Flow.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"2","bestValue":false},{"metric":"comment_lines_density","value":"6.3","bestValue":false},{"metric":"lines","value":"44","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and licensing information is also commendable. However, the \u0027testing\u0027 flag could be better managed, and the logic within the \u0027proc\u0027 method could be further modularized for enhanced readability.","tokens":759,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBL3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Stone.java","name":"Stone.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Stone.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"2","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"5.7","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of constants and utility methods enhances readability. However, the use of magic numbers and lack of detailed comments on the logic behind procChance calculation slightly reduce readability.","tokens":796,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Affection.java","name":"Affection.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Affection.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"9.7","bestValue":false},{"metric":"lines","value":"64","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The use of comments, especially for licensing, is clear. The class and method names are descriptive, and the static block for initializing the RESISTS set is well-organized. However, the proc method lacks implementation details, and the drRoll method could benefit from more comments explaining its logic. Overall, the code is readable and maintainable.","tokens":1849,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/AntiMagic.java","name":"AntiMagic.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/AntiMagic.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"41","bestValue":false},{"metric":"comment_lines_density","value":"5.7","bestValue":false},{"metric":"lines","value":"142","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are descriptive, and the logic is clear. The use of comments and proper formatting enhances readability. However, the magic numbers and hardcoded values could be abstracted into constants for better maintainability. Overall, the code is of high quality and easy to understand.","tokens":823,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLw","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Entanglement.java","name":"Entanglement.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Entanglement.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"65","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear class and method definitions, proper use of comments, and meaningful variable names. The use of nested classes is appropriate and the logic is easy to follow. However, the code could benefit from additional comments explaining complex logic and potential edge cases. Overall, it demonstrates a high level of readability and quality.","tokens":1458,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLx","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Viscosity.java","name":"Viscosity.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Viscosity.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"13","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"48","bestValue":false},{"metric":"comment_lines_density","value":"1.6","bestValue":false},{"metric":"lines","value":"185","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes appropriate comments. The use of meaningful class and method names enhances readability. However, the class could benefit from additional comments explaining the purpose of the class and its methods in more detail. The code is concise and avoids unnecessary complexity.","tokens":613,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBL4","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Brimstone.java","name":"Brimstone.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Brimstone.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"2","bestValue":false},{"metric":"comment_lines_density","value":"28.6","bestValue":false},{"metric":"lines","value":"49","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper package and import statements. The class and method names are descriptive, and the use of comments is appropriate. However, the class is relatively simple and does not demonstrate complex logic or error handling, which limits the assessment of overall quality.","tokens":573,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBL0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Swiftness.java","name":"Swiftness.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Swiftness.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"2","bestValue":false},{"metric":"comment_lines_density","value":"6.3","bestValue":false},{"metric":"lines","value":"44","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are descriptive, and the logic is clear. The use of comments to explain the probability calculation is helpful. However, the code could benefit from additional comments explaining the purpose of the class and methods for someone unfamiliar with the project. Overall, it is readable and of good quality.","tokens":801,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLu","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Potential.java","name":"Potential.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Potential.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"9.4","bestValue":false},{"metric":"lines","value":"64","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments is minimal but sufficient for understanding the purpose of the methods. The code could benefit from additional comments explaining the logic within the methods, especially for those unfamiliar with the game\u0027s mechanics. Overall, it is readable and maintainable.","tokens":712,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLv","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Camouflage.java","name":"Camouflage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Camouflage.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"5","bestValue":false},{"metric":"comment_lines_density","value":"3.7","bestValue":false},{"metric":"lines","value":"57","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is concise and follows standard Java conventions. The class is well-organized, and the use of comments and licensing information is clear. However, the class lacks detailed comments explaining the purpose and functionality of the \u0027MageArmor\u0027 class, which could improve readability and maintainability.","tokens":462,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/MageArmor.java","name":"MageArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/MageArmor.java","language":"java","measures":[{"metric":"complexity","value":"0","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"1","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"32","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of enums, constants, and comments enhances readability. However, the class is quite large and complex, which can make it harder to maintain and understand. Some methods could be refactored for better clarity and separation of concerns.","tokens":6468,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBML","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/Armor.java","name":"Armor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/Armor.java","language":"java","measures":[{"metric":"complexity","value":"173","bestValue":false},{"metric":"code_smells","value":"29","bestValue":false},{"metric":"cognitive_complexity","value":"153","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"285","bestValue":false},{"metric":"comment_lines_density","value":"3.5","bestValue":false},{"metric":"lines","value":"755","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is concise and follows standard Java conventions. The class is well-organized, and the use of package and import statements is appropriate. However, the class lacks comments explaining its purpose and functionality, which could improve readability for other developers.","tokens":456,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/HuntressArmor.java","name":"HuntressArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/HuntressArmor.java","language":"java","measures":[{"metric":"complexity","value":"0","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"1","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"32","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of package imports, clear method definitions, and appropriate use of constants. The logic is straightforward and easy to follow. However, the use of magic numbers (e.g., 0x000000, 1/10f) could be improved by defining them as constants with meaningful names. Additionally, comments explaining the purpose of the class and methods would enhance readability.","tokens":780,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBL8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Corrosion.java","name":"Corrosion.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Corrosion.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"64","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are descriptive, and the logic is clear. The use of comments and proper indentation enhances readability. However, the magic number \u00271/8f\u0027 could be defined as a constant for better clarity. Overall, the code is of high quality and easy to understand.","tokens":819,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/AntiEntropy.java","name":"AntiEntropy.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/AntiEntropy.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The use of comments and clear method names enhances readability. The logic is straightforward and easy to follow. However, the use of magic numbers (e.g., 1/20f) could be improved by defining constants. Additionally, more comments explaining the purpose of certain blocks could further improve clarity.","tokens":858,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBL6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Overgrowth.java","name":"Overgrowth.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Overgrowth.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"2.6","bestValue":false},{"metric":"lines","value":"74","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and licensing information is appropriate. However, the magic number for the color and the hardcoded probability could be improved by defining constants. Overall, the code is readable and maintainable.","tokens":640,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBL7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Displacement.java","name":"Displacement.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Displacement.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"7","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"56","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. However, the code could benefit from additional comments explaining complex logic, and the use of magic numbers (e.g., 1/20f) should be avoided. The FIXME comment indicates a known issue that needs addressing.","tokens":1462,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBL9","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Multiplicity.java","name":"Multiplicity.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Multiplicity.java","language":"java","measures":[{"metric":"complexity","value":"25","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"58","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"42","bestValue":false},{"metric":"comment_lines_density","value":"5.1","bestValue":false},{"metric":"lines","value":"145","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are clear and descriptive. The use of comments and licensing information is appropriate. However, the magic number for the proc chance could be defined as a constant for better readability. Overall, the code is clean and easy to understand.","tokens":674,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Stench.java","name":"Stench.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Stench.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"59","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, clear method definitions, and appropriate use of class inheritance and interfaces. The logic is straightforward and easy to follow. However, the code could benefit from additional comments explaining the purpose of certain calculations and conditions, and the use of magic numbers could be replaced with named constants for better readability.","tokens":878,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBL-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Metabolism.java","name":"Metabolism.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Metabolism.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"2.5","bestValue":false},{"metric":"lines","value":"77","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured, with clear class and method definitions. The use of comments and meaningful variable names enhances readability. The class adheres to good object-oriented principles. However, the brevity of the class limits the complexity assessment, and there is a minor typo in the comment \u0027classh file\u0027.","tokens":582,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBL_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Bulk.java","name":"Bulk.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/curses/Bulk.java","language":"java","measures":[{"metric":"complexity","value":"3","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"3","bestValue":false},{"metric":"comment_lines_density","value":"5.0","bestValue":false},{"metric":"lines","value":"49","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes a clear license header. The class is simple, with a clear purpose and minimal complexity. However, the class lacks comments explaining the purpose of the methods and fields, which could improve readability and maintainability.","tokens":478,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/PlateArmor.java","name":"PlateArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/PlateArmor.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"2","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"37","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is concise and follows standard Java conventions. The class is well-structured, and the use of comments and package declarations is appropriate. However, the class lacks detailed comments explaining the purpose and functionality of the methods and fields, which could improve readability and maintainability.","tokens":472,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/MailArmor.java","name":"MailArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/MailArmor.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"2","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"37","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes a clear license header. The class is simple, with a clear purpose and minimal complexity. However, the class lacks comments explaining the logic, which could improve readability for future maintainers.","tokens":474,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/LeatherArmor.java","name":"LeatherArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/LeatherArmor.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"2","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"37","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes a clear license header. The class is simple, with a clear purpose and minimal complexity. However, the class lacks comments explaining the logic, and there is no error handling or validation, which could be important for more complex implementations.","tokens":482,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/ScaleArmor.java","name":"ScaleArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/ScaleArmor.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"2","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"37","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes comments that explain the purpose of certain lines. The class is simple and straightforward, with clear naming conventions. However, the reasoning behind the \u0027bones\u0027 variable could be more detailed, and there is a minor typo in the comment (\u0027classh\u0027 instead of \u0027class\u0027).","tokens":511,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBMJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/ClothArmor.java","name":"ClothArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/ClothArmor.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"3","bestValue":false},{"metric":"comment_lines_density","value":"8.3","bestValue":false},{"metric":"lines","value":"39","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is concise and follows standard Java conventions. The class is well-organized and the use of comments is appropriate. However, the class lacks detailed comments explaining the purpose and functionality of the DuelistArmor class, which could improve readability and maintainability.","tokens":459,"sonarData":{"component":{"id":"AYcBWmJTXcjzOtg4n6NQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/DuelistArmor.java","name":"DuelistArmor.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/DuelistArmor.java","language":"java","measures":[{"metric":"complexity","value":"0","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"1","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"33","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of enums, and separation of concerns. The comments and documentation are minimal but the code is self-explanatory. The use of switch cases and if-else statements is clear and logical. However, the class is quite large and could benefit from further modularization. Additionally, some methods could use more comments for better readability.","tokens":3669,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Heap.java","name":"Heap.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Heap.java","language":"java","measures":[{"metric":"complexity","value":"110","bestValue":false},{"metric":"code_smells","value":"19","bestValue":false},{"metric":"cognitive_complexity","value":"116","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"197","bestValue":false},{"metric":"comment_lines_density","value":"2.4","bestValue":false},{"metric":"lines","value":"458","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of inner classes and method overrides is appropriate. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which can affect readability.","tokens":1805,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/LiquidMetal.java","name":"LiquidMetal.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/LiquidMetal.java","language":"java","measures":[{"metric":"complexity","value":"29","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"70","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"217","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and TODOs are helpful. However, the class could benefit from more detailed comments explaining the purpose of each method and variable. The use of magic numbers (e.g., TIME_TO_PICK_UP) without context could be improved by defining them as constants with descriptive names.","tokens":836,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/keys/Key.java","name":"Key.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/keys/Key.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"86","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes a clear package declaration and imports. The class is simple and concise, with appropriate use of constructors and instance initialization. However, the class lacks comments explaining the purpose of the methods and fields, which could improve readability and maintainability.","tokens":500,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/keys/IronKey.java","name":"IronKey.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/keys/IronKey.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"42","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper class inheritance, method overriding, and exception handling. The use of comments and clear naming conventions enhances readability. However, the use of anonymous inner classes for the callback could be improved by using lambda expressions for brevity and clarity. Overall, the code is clean and maintainable.","tokens":719,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/keys/SkeletonKey.java","name":"SkeletonKey.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/keys/SkeletonKey.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes a clear package declaration and imports. The class is simple, with a clear purpose and minimal complexity. However, the class lacks comments explaining the purpose of the methods and fields, which could improve readability and maintainability.","tokens":498,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPL","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/keys/GoldenKey.java","name":"GoldenKey.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/keys/GoldenKey.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"42","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and clear, with appropriate use of inheritance and constructors. The use of comments and licensing information is good. However, the class could benefit from additional comments explaining the purpose and functionality of the methods and fields.","tokens":496,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/keys/CrystalKey.java","name":"CrystalKey.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/keys/CrystalKey.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"4","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"42","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method definitions and proper use of inheritance. The class and method names are descriptive, and the logic is straightforward. However, the code could benefit from additional comments explaining the purpose of certain methods and constants. Overall, it is readable and maintainable.","tokens":829,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBO3","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bags/MagicalHolster.java","name":"MagicalHolster.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bags/MagicalHolster.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"19","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"88","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of inheritance and method overriding. The class is concise and focused on its purpose. However, the reasoning behind the capacity and value methods could be documented for better clarity. Overall, it demonstrates good coding practices.","tokens":582,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBO1","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bags/PotionBandolier.java","name":"PotionBandolier.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bags/PotionBandolier.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"54","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and easy to read. It follows standard Java conventions and includes proper use of inheritance and method overriding. The class is concise and focused on its purpose. However, the reasoning behind the specific capacity and value could be documented for better clarity.","tokens":619,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBO0","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bags/VelvetPouch.java","name":"VelvetPouch.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bags/VelvetPouch.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"57","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The class is cohesive, focusing on the specific functionality of holding scrolls and related items. Variable and method names are clear and descriptive. However, the code could benefit from additional comments explaining the logic, especially in the onDetach method.","tokens":684,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bags/ScrollHolder.java","name":"ScrollHolder.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bags/ScrollHolder.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"6","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"11","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"66","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear and descriptive variable names, and the methods are concise and focused. The use of comments and proper indentation enhances readability. However, the class could benefit from additional comments explaining the purpose of some methods and logic, especially for complex operations like \u0027grabItems\u0027 and \u0027canHold\u0027. Overall, it is a high-quality code with minor areas for improvement.","tokens":1656,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBO2","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bags/Bag.java","name":"Bag.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bags/Bag.java","language":"java","measures":[{"metric":"complexity","value":"54","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"48","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"79","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"241","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and method overriding. The logic is clear and the use of comments is appropriate. However, there are minor issues like the lack of detailed comments explaining complex logic and the use of magic numbers (e.g., TIME_TO_PICK_UP). Overall, the readability and quality are high but could be improved with more detailed documentation.","tokens":1007,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/LostBackpack.java","name":"LostBackpack.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/LostBackpack.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"19","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"26","bestValue":false},{"metric":"comment_lines_density","value":"1.9","bestValue":false},{"metric":"lines","value":"82","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. The use of abstract classes and methods promotes extensibility. The comments are clear, and the naming conventions are consistent. However, the code could benefit from additional inline comments for complex logic, and the long list of imports could be organized better. Overall, it is readable and maintainable.","tokens":2453,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPe","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Recipe.java","name":"Recipe.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Recipe.java","language":"java","measures":[{"metric":"complexity","value":"36","bestValue":false},{"metric":"code_smells","value":"47","bestValue":false},{"metric":"cognitive_complexity","value":"52","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"66","bestValue":false},{"metric":"comment_lines_density","value":"4.4","bestValue":false},{"metric":"lines","value":"266","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of constants, and appropriate comments. The class is cohesive and the methods are concise. However, the use of magic numbers (e.g., 8 in the value method) could be improved by defining them as constants. Overall, the code is readable and maintainable.","tokens":853,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPq","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Torch.java","name":"Torch.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Torch.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"19","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"95","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise, with clear method names and appropriate use of comments. The use of constants and method overrides is good. However, the TODO comment indicates incomplete functionality, and the class could benefit from additional documentation for better clarity.","tokens":786,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPn","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/EnergyCrystal.java","name":"EnergyCrystal.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/EnergyCrystal.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"16","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"89","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes proper use of inheritance and method overriding. The naming conventions are clear and consistent. However, the use of magic numbers (e.g., 1.035) without explanation and the lack of comments within methods slightly reduce readability. Overall, the code is clean and maintainable.","tokens":1003,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfMight.java","name":"RingOfMight.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfMight.java","language":"java","measures":[{"metric":"complexity","value":"16","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"11","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"108","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and appropriate comments. The use of nested classes and method overrides is also well-done. However, the readability could be slightly improved by adding more comments explaining the logic, especially for the mathematical calculations. Overall, it is a high-quality and readable piece of code.","tokens":765,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOa","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfFuror.java","name":"RingOfFuror.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfFuror.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"61","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the code could benefit from further modularization to reduce complexity in some methods, and there are some magic numbers that could be replaced with named constants for better clarity.","tokens":3048,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOg","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfWealth.java","name":"RingOfWealth.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfWealth.java","language":"java","measures":[{"metric":"complexity","value":"68","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"57","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"136","bestValue":false},{"metric":"comment_lines_density","value":"5.9","bestValue":false},{"metric":"lines","value":"325","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are descriptive, and the use of comments and proper indentation enhances readability. The logic is clear, and the use of helper methods like Messages.get and Messages.decimalFormat improves maintainability. However, the nested if-else statements could be simplified for better readability, and additional comments explaining the purpose of certain methods would be beneficial.","tokens":767,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfHaste.java","name":"RingOfHaste.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfHaste.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"61","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and appropriate comments. The use of nested classes and static methods is appropriate. However, the readability could be slightly improved by adding more comments explaining the logic within methods and breaking down complex expressions for better clarity.","tokens":787,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfSharpshooting.java","name":"RingOfSharpshooting.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfSharpshooting.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"10","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"65","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes detailed comments and documentation, making it easier to understand. The use of encapsulation and inheritance is appropriate. However, the code could benefit from more consistent formatting and some methods could be broken down into smaller, more manageable pieces to improve readability.","tokens":3001,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/Ring.java","name":"Ring.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/Ring.java","language":"java","measures":[{"metric":"complexity","value":"91","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"61","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"144","bestValue":false},{"metric":"comment_lines_density","value":"4.5","bestValue":false},{"metric":"lines","value":"396","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class and method names are descriptive, and the use of comments is appropriate. The logic is clear and easy to follow. However, the use of magic numbers (e.g., 1.125) could be improved by defining them as constants for better readability and maintainability.","tokens":758,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOc","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfEvasion.java","name":"RingOfEvasion.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfEvasion.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"61","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The use of comments, meaningful variable names, and clear method definitions enhance readability. However, the nested if-else statements in the statsInfo method could be simplified for better readability. Overall, the code is clean and maintainable.","tokens":744,"sonarData":{"component":{"id":"AYQExSm8p2C0gqvbizaf","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfArcana.java","name":"RingOfArcana.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfArcana.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"62","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear comments and logical method names, making it easy to understand. The use of nested classes and method overrides is appropriate. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which can affect readability.","tokens":2546,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfForce.java","name":"RingOfForce.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfForce.java","language":"java","measures":[{"metric":"complexity","value":"65","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"54","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"100","bestValue":false},{"metric":"comment_lines_density","value":"5.8","bestValue":false},{"metric":"lines","value":"302","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and appropriate comments. The use of constants and utility methods enhances readability. However, the nested class could be better documented, and some methods could benefit from additional comments to explain complex logic. Overall, the code is clean and maintainable.","tokens":944,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOi","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfEnergy.java","name":"RingOfEnergy.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfEnergy.java","language":"java","measures":[{"metric":"complexity","value":"11","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"79","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, clear method names, and appropriate comments. The use of static blocks and collections is efficient. However, the readability could be slightly improved by adding more comments explaining the logic, especially in the resist method. Overall, the code is clean and maintainable.","tokens":1105,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOh","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfElements.java","name":"RingOfElements.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfElements.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"98","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and appropriate comments. The use of nested classes and method overrides is also well-done. However, the readability could be slightly improved by adding more comments explaining the logic within methods and breaking down complex expressions for better clarity.","tokens":750,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOe","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfAccuracy.java","name":"RingOfAccuracy.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfAccuracy.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"61","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance and encapsulation. The comments and licensing information are clear. The method names are descriptive, and the logic is straightforward. However, the use of magic numbers (e.g., 0.85) could be improved by defining them as constants. Additionally, the nested class could be better documented.","tokens":788,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBOb","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfTenacity.java","name":"RingOfTenacity.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfTenacity.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"3.0","bestValue":false},{"metric":"lines","value":"63","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and logical organization. The use of comments helps in understanding the purpose of certain blocks. However, the nested if-else statements within the onItemSelected method could be refactored for better readability. Overall, the code is maintainable and understandable.","tokens":1505,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfUpgrade.java","name":"ScrollOfUpgrade.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfUpgrade.java","language":"java","measures":[{"metric":"complexity","value":"40","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"37","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"57","bestValue":false},{"metric":"comment_lines_density","value":"1.8","bestValue":false},{"metric":"lines","value":"148","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method definitions, and meaningful variable names. The comments and licensing information are clear. However, the code could benefit from additional comments explaining the logic within methods for better readability and maintainability.","tokens":793,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLT","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfRecharging.java","name":"ScrollOfRecharging.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfRecharging.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"15","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"71","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names and proper use of overrides. The use of comments and licensing information is also commendable. However, the code could benefit from additional comments explaining the logic within methods, especially for those unfamiliar with the game\u0027s context. Overall, it is readable and maintainable.","tokens":671,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfIdentify.java","name":"ScrollOfIdentify.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfIdentify.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"8","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"60","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method definitions, and meaningful variable names. The comments and licensing information are clear. However, the use of magic numbers (e.g., 0.3f, 5) could be improved by defining constants. Overall, the code is readable and maintainable.","tokens":817,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLO","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfLullaby.java","name":"ScrollOfLullaby.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfLullaby.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"68","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of encapsulation, clear method names, and appropriate comments. The logic is clear and the use of collections is efficient. However, the nested switch-case within the while loop could be refactored for better readability. Overall, the code is maintainable and understandable.","tokens":1433,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfDivination.java","name":"ScrollOfDivination.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfDivination.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"6","bestValue":false},{"metric":"cognitive_complexity","value":"16","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"65","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"156","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using static blocks for initialization and overriding methods for specific behavior. The use of HashMaps for mapping relationships is clear and efficient. However, the code could benefit from more comments explaining the purpose of certain methods and mappings. Additionally, the use of reflection can be risky and may affect performance.","tokens":1688,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ExoticScroll.java","name":"ExoticScroll.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ExoticScroll.java","language":"java","measures":[{"metric":"complexity","value":"17","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"43","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"152","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical flow. The comments and licensing information are clear. However, the code could benefit from additional inline comments for better readability, especially in complex sections. The use of nested classes and anonymous classes is appropriate but could be simplified for better readability.","tokens":1390,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfSirensSong.java","name":"ScrollOfSirensSong.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfSirensSong.java","language":"java","measures":[{"metric":"complexity","value":"23","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"42","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"145","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper package declarations, imports, and class definitions. The method doRead() is clear and concise, with appropriate use of comments and logging. However, the use of magic numbers in the returnDepth calculation could be improved by defining constants. Overall, the code is readable and maintainable.","tokens":732,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfPassage.java","name":"ScrollOfPassage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfPassage.java","language":"java","measures":[{"metric":"complexity","value":"2","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"1","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"61","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of packages, imports, and class definitions. The method doRead() is clear and concise, with appropriate use of loops and conditionals. However, the code could benefit from additional comments for better readability and maintainability. Overall, it demonstrates good quality and readability.","tokens":781,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLC","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfPrismaticImage.java","name":"ScrollOfPrismaticImage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfPrismaticImage.java","language":"java","measures":[{"metric":"complexity","value":"4","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"14","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"65","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical organization. The use of inner classes and overriding methods is appropriate. However, the code could benefit from additional comments explaining complex logic, and some variable names could be more descriptive to enhance readability.","tokens":1655,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLA","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfChallenge.java","name":"ScrollOfChallenge.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfChallenge.java","language":"java","measures":[{"metric":"complexity","value":"30","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"28","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"70","bestValue":false},{"metric":"comment_lines_density","value":"0.7","bestValue":false},{"metric":"lines","value":"208","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear naming conventions and includes comments for licensing. The use of inner classes for window handling is appropriate. However, the code could benefit from additional comments explaining the logic, and some methods are quite long, which could be broken down for better readability.","tokens":2477,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLB","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfEnchantment.java","name":"ScrollOfEnchantment.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfEnchantment.java","language":"java","measures":[{"metric":"complexity","value":"35","bestValue":false},{"metric":"code_smells","value":"29","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"76","bestValue":false},{"metric":"comment_lines_density","value":"1.9","bestValue":false},{"metric":"lines","value":"277","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The class is concise and the methods are clear and purposeful. The use of comments and proper naming conventions enhances readability. However, the brevity of the class limits the assessment of more complex coding practices and error handling.","tokens":593,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLJ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfForesight.java","name":"ScrollOfForesight.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfForesight.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"50","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of inheritance, method overriding, and encapsulation. The use of comments and clear naming conventions enhances readability. However, the class could benefit from additional comments explaining the logic within the doRead method for better understanding.","tokens":608,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfAntiMagic.java","name":"ScrollOfAntiMagic.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfAntiMagic.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"6","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"47","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of packages, clear method names, and appropriate comments. The logic is straightforward and easy to follow. However, the use of magic numbers (e.g., 5, 32, 0xFF0000) could be improved by defining constants. Additionally, the code could benefit from more detailed comments explaining the purpose of each block.","tokens":809,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBK-","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfDread.java","name":"ScrollOfDread.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfDread.java","language":"java","measures":[{"metric":"complexity","value":"5","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"12","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"63","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper package declarations, imports, and class definitions. The method names are descriptive, and the logic is clear. However, the use of inline comments could be improved for better readability, and there is a minor typo in the comment \u0027append buff\u0027 which should be \u0027append buff\u0027. Overall, the code is clean and maintainable.","tokens":711,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfMysticalEnergy.java","name":"ScrollOfMysticalEnergy.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfMysticalEnergy.java","language":"java","measures":[{"metric":"complexity","value":"1","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"9","bestValue":false},{"metric":"comment_lines_density","value":"4.0","bestValue":false},{"metric":"lines","value":"56","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of meaningful variable names and adherence to Java conventions enhances readability. However, the nested loops and conditionals could be simplified for better readability. Overall, the code is of high quality but could benefit from minor refactoring.","tokens":1059,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfPsionicBlast.java","name":"ScrollOfPsionicBlast.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfPsionicBlast.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"5.6","bestValue":false},{"metric":"lines","value":"90","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear comments, meaningful variable names, and logical method organization. The use of nested classes for window management is appropriate. However, the code could benefit from additional comments explaining complex logic and a bit more modularization to improve readability further.","tokens":2347,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBK_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfMetamorphosis.java","name":"ScrollOfMetamorphosis.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/exotic/ScrollOfMetamorphosis.java","language":"java","measures":[{"metric":"complexity","value":"30","bestValue":false},{"metric":"code_smells","value":"23","bestValue":false},{"metric":"cognitive_complexity","value":"28","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"110","bestValue":false},{"metric":"comment_lines_density","value":"1.4","bestValue":false},{"metric":"lines","value":"277","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper package declarations, imports, and class definitions. The methods are concise and clear, with appropriate use of comments and meaningful variable names. However, the class could benefit from additional comments explaining the logic within the methods for better readability. Overall, it demonstrates good coding practices and readability.","tokens":809,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLS","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfRage.java","name":"ScrollOfRage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfRage.java","language":"java","measures":[{"metric":"complexity","value":"6","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"5","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"13","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"67","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical flow. The comments and licensing information are clear. However, the readability could be slightly improved by adding more comments within methods to explain complex logic. Overall, the code is clean and maintainable.","tokens":979,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLU","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfMirrorImage.java","name":"ScrollOfMirrorImage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfMirrorImage.java","language":"java","measures":[{"metric":"complexity","value":"10","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"25","bestValue":false},{"metric":"comment_lines_density","value":"1.7","bestValue":false},{"metric":"lines","value":"96","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and abstraction. The use of comments and meaningful method names enhances readability. However, the presence of a FIXME comment indicates a known issue that needs addressing, and the use of static variables like curItem could lead to potential bugs. Overall, the code is clean and maintainable but has room for improvement.","tokens":1133,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLY","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/InventoryScroll.java","name":"InventoryScroll.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/InventoryScroll.java","language":"java","measures":[{"metric":"complexity","value":"19","bestValue":false},{"metric":"code_smells","value":"12","bestValue":false},{"metric":"cognitive_complexity","value":"4","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"30","bestValue":false},{"metric":"comment_lines_density","value":"2.3","bestValue":false},{"metric":"lines","value":"134","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper naming conventions and clear separation of concerns. The use of comments and licensing information is appropriate. However, the readability could be slightly improved by adding more inline comments to explain the logic within the loops and conditionals. Overall, the code is clean and maintainable.","tokens":939,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLQ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfMagicMapping.java","name":"ScrollOfMagicMapping.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfMagicMapping.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"12","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"27","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"97","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of comments, clear method names, and logical flow. The use of constants and externalized messages enhances readability. However, the code could benefit from additional comments explaining the purpose of certain calculations and conditions. Overall, it is clean and maintainable.","tokens":994,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLR","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfRetribution.java","name":"ScrollOfRetribution.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfRetribution.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"23","bestValue":false},{"metric":"comment_lines_density","value":"5.9","bestValue":false},{"metric":"lines","value":"89","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments is minimal but the code is self-explanatory. The indentation and formatting are consistent, making it easy to read. However, the class is quite large and could benefit from further modularization to improve maintainability.","tokens":3378,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLP","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfTransmutation.java","name":"ScrollOfTransmutation.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfTransmutation.java","language":"java","measures":[{"metric":"complexity","value":"83","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"95","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"167","bestValue":false},{"metric":"comment_lines_density","value":"3.4","bestValue":false},{"metric":"lines","value":"363","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, meaningful variable names, and clear logic flow. The use of switch-case for handling different scenarios is appropriate. However, the readability could be slightly improved by adding more inline comments explaining the purpose of certain blocks of code, especially for those unfamiliar with the game\u0027s context.","tokens":900,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLW","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfTerror.java","name":"ScrollOfTerror.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfTerror.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"1","bestValue":false},{"metric":"cognitive_complexity","value":"9","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"22","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"82","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and proper indentation enhances readability. However, the class is quite large and could benefit from further modularization. Additionally, some methods are lengthy and could be broken down into smaller, more manageable pieces.","tokens":2774,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLN","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfTeleportation.java","name":"ScrollOfTeleportation.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfTeleportation.java","language":"java","measures":[{"metric":"complexity","value":"71","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"89","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"150","bestValue":false},{"metric":"comment_lines_density","value":"1.2","bestValue":false},{"metric":"lines","value":"326","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and variable names are clear, making the code easy to understand. However, there are some minor readability issues, such as the lack of spacing in some areas and the use of magic numbers. Overall, the code is of high quality and maintainable.","tokens":1515,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLZ","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfRemoveCurse.java","name":"ScrollOfRemoveCurse.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/ScrollOfRemoveCurse.java","language":"java","measures":[{"metric":"complexity","value":"32","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"40","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"61","bestValue":false},{"metric":"comment_lines_density","value":"0.8","bestValue":false},{"metric":"lines","value":"159","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of access modifiers, clear method names, and logical flow. The use of comments and documentation is minimal but sufficient. The code is modular and makes good use of inheritance and interfaces. However, it could benefit from additional comments for complex logic and better handling of magic numbers.","tokens":2178,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/BrokenSeal.java","name":"BrokenSeal.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/BrokenSeal.java","language":"java","measures":[{"metric":"complexity","value":"51","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"23","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"79","bestValue":false},{"metric":"comment_lines_density","value":"2.6","bestValue":false},{"metric":"lines","value":"261","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, method overrides, and clear method names. The use of comments and licensing information is appropriate. However, the code could benefit from additional comments explaining the logic within methods, especially for complex operations. Overall, it is readable and maintainable.","tokens":1096,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPj","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/TengusMask.java","name":"TengusMask.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/TengusMask.java","language":"java","measures":[{"metric":"complexity","value":"9","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"3","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"28","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"117","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear comments and logical flow, making it relatively easy to understand. However, the nested if-else conditions and the length of the doEquip method could be refactored for better readability and maintainability. Overall, it demonstrates good coding practices but has room for improvement in simplifying complex logic.","tokens":1925,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPc","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/KindofMisc.java","name":"KindofMisc.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/KindofMisc.java","language":"java","measures":[{"metric":"complexity","value":"42","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"61","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"73","bestValue":false},{"metric":"comment_lines_density","value":"6.5","bestValue":false},{"metric":"lines","value":"192","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of access modifiers, clear method names, and concise logic. The use of comments and licensing information is also appropriate. However, the class could benefit from additional comments explaining the purpose of certain methods and variables for better readability.","tokens":868,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBPl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Gold.java","name":"Gold.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Gold.java","language":"java","measures":[{"metric":"complexity","value":"7","bestValue":false},{"metric":"code_smells","value":"3","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"18","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"92","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of constants and static blocks for initialization is appropriate. However, the class is quite large and could benefit from being broken down into smaller, more manageable pieces. Additionally, the comments could be more descriptive to improve readability.","tokens":4771,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaX","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/SPDAction.java","name":"SPDAction.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/SPDAction.java","language":"java","measures":[{"metric":"complexity","value":"74","bestValue":false},{"metric":"code_smells","value":"26","bestValue":false},{"metric":"cognitive_complexity","value":"207","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"253","bestValue":false},{"metric":"comment_lines_density","value":"6.1","bestValue":false},{"metric":"lines","value":"496","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method naming. The use of comments and consistent formatting enhances readability. However, the class is quite large and could benefit from further modularization. Exception handling is present but could be more specific. Overall, the code is maintainable and understandable.","tokens":1613,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZ_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/GamesInProgress.java","name":"GamesInProgress.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/GamesInProgress.java","language":"java","measures":[{"metric":"complexity","value":"20","bestValue":false},{"metric":"code_smells","value":"27","bestValue":false},{"metric":"cognitive_complexity","value":"18","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"61","bestValue":false},{"metric":"comment_lines_density","value":"1.4","bestValue":false},{"metric":"lines","value":"201","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method naming. The use of comments is appropriate and helps in understanding the purpose of the methods. However, the class could benefit from more detailed documentation for each method and the use of constants for magic strings. Overall, the readability and quality are high.","tokens":1775,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYl","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/messages/Messages.java","name":"Messages.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/messages/Messages.java","language":"java","measures":[{"metric":"complexity","value":"28","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"29","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"56","bestValue":false},{"metric":"comment_lines_density","value":"13.2","bestValue":false},{"metric":"lines","value":"214","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. The use of enums for languages and statuses is appropriate and enhances readability. The comments and licensing information are clear. However, the long lists of reviewers and translators could be better managed, possibly by externalizing them to a configuration file or database. Overall, the code is clean and maintainable.","tokens":4092,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYk","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/messages/Languages.java","name":"Languages.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/messages/Languages.java","language":"java","measures":[{"metric":"complexity","value":"12","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"7","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"20","bestValue":false},{"metric":"comment_lines_density","value":"11.7","bestValue":false},{"metric":"lines","value":"109","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear class and method definitions, appropriate use of access modifiers, and meaningful variable names. The use of comments and consistent formatting enhances readability. However, the code could benefit from additional comments explaining complex logic, and some methods could be broken down further to improve clarity.","tokens":2318,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBTM","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/TalentsPane.java","name":"TalentsPane.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/TalentsPane.java","language":"java","measures":[{"metric":"complexity","value":"40","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"46","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"126","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"259","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of inheritance, and encapsulation. The use of comments and logical grouping of methods enhances readability. However, the class is quite large and complex, which can make it harder to maintain and understand. Breaking it into smaller, more focused classes or methods could improve readability and maintainability.","tokens":4875,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVz","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/YogFist.java","name":"YogFist.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/YogFist.java","language":"java","measures":[{"metric":"complexity","value":"114","bestValue":false},{"metric":"code_smells","value":"14","bestValue":false},{"metric":"cognitive_complexity","value":"106","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"235","bestValue":false},{"metric":"comment_lines_density","value":"1.9","bestValue":false},{"metric":"lines","value":"621","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes clear comments, meaningful variable names, and proper use of access modifiers. The logic is encapsulated in methods, making it easy to follow. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which could be broken down further for better readability.","tokens":2714,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVI","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Shopkeeper.java","name":"Shopkeeper.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Shopkeeper.java","language":"java","measures":[{"metric":"complexity","value":"67","bestValue":false},{"metric":"code_smells","value":"21","bestValue":false},{"metric":"cognitive_complexity","value":"77","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"120","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"320","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper use of inheritance, method overriding, and encapsulation. The comments and licensing information are clear. Variable and method names are descriptive, enhancing readability. However, the code could benefit from additional comments explaining complex logic, and some methods could be refactored for better clarity and maintainability.","tokens":1101,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBVc","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DM201.java","name":"DM201.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/DM201.java","language":"java","measures":[{"metric":"complexity","value":"23","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"17","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"34","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"130","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear separation of concerns, use of constants, and meaningful variable names. The comments and method names are descriptive, aiding readability. However, the class is quite large and could benefit from further modularization. Additionally, some methods are lengthy and could be broken down into smaller, more manageable pieces. Overall, the code is readable and maintainable but has room for improvement in terms of modularity.","tokens":3728,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZc","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndBag.java","name":"WndBag.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndBag.java","language":"java","measures":[{"metric":"complexity","value":"83","bestValue":false},{"metric":"code_smells","value":"15","bestValue":false},{"metric":"cognitive_complexity","value":"71","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"187","bestValue":false},{"metric":"comment_lines_density","value":"2.7","bestValue":false},{"metric":"lines","value":"476","bestValue":false},{"metric":"sqale_rating","value":"2.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as using constants, synchronized methods, and clear method names. The comments are helpful, and the logic is easy to follow. However, the code could benefit from further modularization to improve readability and maintainability. Additionally, some variable names could be more descriptive.","tokens":2863,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBYs","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/FogOfWar.java","name":"FogOfWar.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/tiles/FogOfWar.java","language":"java","measures":[{"metric":"complexity","value":"46","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"97","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"111","bestValue":false},{"metric":"comment_lines_density","value":"11.9","bestValue":false},{"metric":"lines","value":"339","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows standard Java conventions. It includes proper use of comments, clear method definitions, and appropriate use of inheritance and interfaces. The naming conventions are consistent and descriptive. However, the code could benefit from additional comments explaining the logic within methods, especially for complex operations. Overall, it is readable and maintainable.","tokens":1049,"sonarData":{"component":{"id":"AYIQeaoIQRDjcrSigBYK","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/TenguSprite.java","name":"TenguSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/TenguSprite.java","language":"java","measures":[{"metric":"complexity","value":"13","bestValue":false},{"metric":"code_smells","value":"2","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"39","bestValue":false},{"metric":"comment_lines_density","value":"0.0","bestValue":false},{"metric":"lines","value":"131","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and descriptive. However, the code could benefit from additional comments explaining complex logic, especially in the \u0027EternalFire\u0027 class. The use of magic numbers and some nested loops could be refactored for better readability.","tokens":2629,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRE","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/MagicalFireRoom.java","name":"MagicalFireRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/MagicalFireRoom.java","language":"java","measures":[{"metric":"complexity","value":"66","bestValue":false},{"metric":"code_smells","value":"4","bestValue":false},{"metric":"cognitive_complexity","value":"93","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"106","bestValue":false},{"metric":"comment_lines_density","value":"5.5","bestValue":false},{"metric":"lines","value":"284","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The logic is complex but readable, and variable names are meaningful. However, the code could benefit from further modularization to improve readability and maintainability. Additionally, some inline comments explaining complex logic would be helpful.","tokens":3766,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBRF","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/CrystalPathRoom.java","name":"CrystalPathRoom.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/CrystalPathRoom.java","language":"java","measures":[{"metric":"complexity","value":"45","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"63","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"144","bestValue":false},{"metric":"comment_lines_density","value":"3.8","bestValue":false},{"metric":"lines","value":"278","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and the organization of imports enhance readability. However, the class is quite large and complex, which can make it harder to understand at a glance. Some methods could be refactored for better readability and maintainability.","tokens":6623,"sonarData":{"component":{"id":"AYIQeaoGQRDjcrSigBSG","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/RegularLevel.java","name":"RegularLevel.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/RegularLevel.java","language":"java","measures":[{"metric":"complexity","value":"223","bestValue":false},{"metric":"code_smells","value":"18","bestValue":false},{"metric":"cognitive_complexity","value":"286","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"358","bestValue":false},{"metric":"comment_lines_density","value":"4.3","bestValue":false},{"metric":"lines","value":"764","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation, use of comments, and meaningful variable names. The use of inner classes for specific functionalities enhances readability. However, the class is quite large, which can make it harder to navigate. Some methods could be broken down further to improve readability. Overall, the code is clean and maintainable.","tokens":6449,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZ6","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/HeroSelectScene.java","name":"HeroSelectScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/HeroSelectScene.java","language":"java","measures":[{"metric":"complexity","value":"106","bestValue":false},{"metric":"code_smells","value":"40","bestValue":false},{"metric":"cognitive_complexity","value":"159","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"390","bestValue":false},{"metric":"comment_lines_density","value":"1.3","bestValue":false},{"metric":"lines","value":"783","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and meaningful variable names. The use of comments and proper indentation enhances readability. However, the class is quite lengthy and could benefit from further modularization to improve maintainability. Additionally, some inline comments explaining complex logic would be helpful.","tokens":3902,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZ7","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/AboutScene.java","name":"AboutScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/AboutScene.java","language":"java","measures":[{"metric":"complexity","value":"35","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"49","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"162","bestValue":false},{"metric":"comment_lines_density","value":"2.9","bestValue":false},{"metric":"lines","value":"404","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-organized and follows a clear structure, making it easy to read and maintain. Constants are grouped logically into nested static classes, which enhances readability. However, the file is quite long and could benefit from additional comments or documentation for better understanding. The TODO comment suggests some incomplete work, which slightly affects the overall quality.","tokens":4916,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBaV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Assets.java","name":"Assets.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Assets.java","language":"java","measures":[{"metric":"complexity","value":"0","bestValue":false},{"metric":"code_smells","value":"13","bestValue":false},{"metric":"cognitive_complexity","value":"0","bestValue":true},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"0","bestValue":false},{"metric":"comment_lines_density","value":"0.7","bestValue":false},{"metric":"lines","value":"332","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It includes detailed comments and proper use of inheritance and polymorphism. The naming conventions are clear, and the logic is easy to follow. However, the code is quite lengthy and could benefit from further modularization to improve readability. Additionally, some methods are quite complex and could be broken down into smaller, more manageable pieces.","tokens":4309,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBNd","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/MissileWeapon.java","name":"MissileWeapon.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/MissileWeapon.java","language":"java","measures":[{"metric":"complexity","value":"116","bestValue":false},{"metric":"code_smells","value":"20","bestValue":false},{"metric":"cognitive_complexity","value":"121","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"190","bestValue":false},{"metric":"comment_lines_density","value":"6.4","bestValue":false},{"metric":"lines","value":"522","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation, meaningful variable names, and proper use of comments. The use of nested classes and inner classes is appropriate. However, the code could benefit from additional comments for complex logic sections and some methods are quite long, which can affect readability. Overall, it demonstrates a high level of quality and maintainability.","tokens":2952,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBN8","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/EtherealChains.java","name":"EtherealChains.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/EtherealChains.java","language":"java","measures":[{"metric":"complexity","value":"66","bestValue":false},{"metric":"code_smells","value":"7","bestValue":false},{"metric":"cognitive_complexity","value":"45","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"145","bestValue":false},{"metric":"comment_lines_density","value":"3.3","bestValue":false},{"metric":"lines","value":"353","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and clear method definitions. The use of comments and meaningful variable names enhances readability. However, the class is quite large and could benefit from further modularization. Additionally, the use of nested classes and anonymous inner classes could be simplified for better clarity.","tokens":2923,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/Scroll.java","name":"Scroll.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/scrolls/Scroll.java","language":"java","measures":[{"metric":"complexity","value":"60","bestValue":false},{"metric":"code_smells","value":"10","bestValue":false},{"metric":"cognitive_complexity","value":"39","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"105","bestValue":false},{"metric":"comment_lines_density","value":"1.5","bestValue":false},{"metric":"lines","value":"347","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper encapsulation, clear method names, and consistent formatting. The use of enums and constants enhances readability. However, the class is quite large and complex, which could be broken down into smaller, more manageable pieces. Additionally, some comments explaining the logic would improve understanding for future maintainers.","tokens":3085,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBUD","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Berserk.java","name":"Berserk.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Berserk.java","language":"java","measures":[{"metric":"complexity","value":"78","bestValue":false},{"metric":"code_smells","value":"11","bestValue":false},{"metric":"cognitive_complexity","value":"91","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"144","bestValue":false},{"metric":"comment_lines_density","value":"2.0","bestValue":false},{"metric":"lines","value":"360","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method separation and appropriate use of comments. The naming conventions are consistent and descriptive. However, the class is quite large and could benefit from further modularization to improve readability and maintainability. Additionally, some methods are quite long and could be broken down into smaller, more focused methods.","tokens":4088,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZ5","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/CellSelector.java","name":"CellSelector.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/CellSelector.java","language":"java","measures":[{"metric":"complexity","value":"129","bestValue":false},{"metric":"code_smells","value":"9","bestValue":false},{"metric":"cognitive_complexity","value":"112","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"234","bestValue":false},{"metric":"comment_lines_density","value":"5.4","bestValue":false},{"metric":"lines","value":"522","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of nested classes for buffs is appropriate and enhances readability. However, the code could benefit from additional comments explaining complex logic, and some methods are quite long, which can make them harder to follow.","tokens":2994,"sonarData":{"component":{"id":"AYIQeaoFQRDjcrSigBN_","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/CloakOfShadows.java","name":"CloakOfShadows.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/CloakOfShadows.java","language":"java","measures":[{"metric":"complexity","value":"88","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"94","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"157","bestValue":false},{"metric":"comment_lines_density","value":"0.6","bestValue":false},{"metric":"lines","value":"396","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good object-oriented principles. It uses clear method names and has appropriate comments for licensing. The use of nested classes for different types of CrystalWisp is a good design choice. However, the code could benefit from more inline comments explaining the logic, especially in the animation and light handling sections. Additionally, some methods could be refactored for better readability.","tokens":1546,"sonarData":{"component":{"id":"AY2Di9ryW1YJaXpvKngV","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CrystalWispSprite.java","name":"CrystalWispSprite.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CrystalWispSprite.java","language":"java","measures":[{"metric":"complexity","value":"27","bestValue":false},{"metric":"code_smells","value":"8","bestValue":false},{"metric":"cognitive_complexity","value":"8","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"60","bestValue":false},{"metric":"comment_lines_density","value":"0.7","bestValue":false},{"metric":"lines","value":"207","bestValue":false},{"metric":"sqale_rating","value":"4.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as proper encapsulation, clear method names, and appropriate use of comments. The class is cohesive and the logic is easy to follow. However, there are some minor areas for improvement, such as more detailed comments for complex logic and potential refactoring to reduce method complexity. Overall, the code is readable and maintainable.","tokens":1851,"sonarData":{"component":{"id":"AYIQeaoHQRDjcrSigBVH","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/MirrorImage.java","name":"MirrorImage.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/MirrorImage.java","language":"java","measures":[{"metric":"complexity","value":"29","bestValue":false},{"metric":"code_smells","value":"5","bestValue":false},{"metric":"cognitive_complexity","value":"22","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"69","bestValue":false},{"metric":"comment_lines_density","value":"4.2","bestValue":false},{"metric":"lines","value":"214","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as clear method names, proper use of comments, and logical organization. The use of inner classes for UI components is appropriate. However, the class is quite large and could benefit from further modularization. Some methods are lengthy and could be broken down into smaller, more manageable pieces. Overall, the code is readable and maintainable but has room for improvement in terms of modularity.","tokens":5672,"sonarData":{"component":{"id":"AYIQeaoJQRDjcrSigBZy","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/AlchemyScene.java","name":"AlchemyScene.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/AlchemyScene.java","language":"java","measures":[{"metric":"complexity","value":"90","bestValue":false},{"metric":"code_smells","value":"22","bestValue":false},{"metric":"cognitive_complexity","value":"86","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"331","bestValue":false},{"metric":"comment_lines_density","value":"1.2","bestValue":false},{"metric":"lines","value":"754","bestValue":false},{"metric":"sqale_rating","value":"3.0","bestValue":false}]}}}
{"score":"85","reasoning":"The code is well-structured and follows good practices such as encapsulation and modularity. It includes detailed comments and proper use of access modifiers. The naming conventions are clear and consistent. However, the class is quite large and complex, which can make it harder to read and maintain. Some methods could be further broken down to improve readability.","tokens":6458,"sonarData":{"component":{"id":"AYIQeaoEQRDjcrSigBLo","key":"ismvru_shattered-pixel-dungeon:core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/Wand.java","name":"Wand.java","qualifier":"FIL","path":"core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/Wand.java","language":"java","measures":[{"metric":"complexity","value":"170","bestValue":false},{"metric":"code_smells","value":"26","bestValue":false},{"metric":"cognitive_complexity","value":"114","bestValue":false},{"metric":"files","value":"1","bestValue":false},{"metric":"statements","value":"301","bestValue":false},{"metric":"comment_lines_density","value":"4.0","bestValue":false},{"metric":"lines","value":"777","bestValue":false},{"metric":"sqale_rating","value":"1.0","bestValue":true}]}}}
